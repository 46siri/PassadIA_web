{"ast":null,"code":"var _jsxFileName = \"/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/WalkerBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport { Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton, Button, Container, CssBaseline, Typography, Paper, ThemeProvider, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\nimport theme from './Theme/theme';\nimport logo from './Theme/images/baselogo.jpg';\nimport walkway0 from './Theme/images/walkway_0.jpg';\nimport walkway1 from './Theme/images/walkway_1.jpg';\nimport walkway2 from './Theme/images/walkway_2.jpg';\nimport walkway3 from './Theme/images/walkway_3.jpg';\nimport walkway4 from './Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled(Container)(({\n  theme\n}) => ({\n  ...theme.root,\n  zIndex: 9999\n}));\n_c = AppContainer;\nconst Logo = styled('img')(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: theme.spacing(2),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer'\n}));\n_c2 = Logo;\nconst MapContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '600px',\n  width: '100%',\n  marginTop: theme.spacing(4)\n}));\n_c3 = MapContainer;\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20\n});\n_c4 = LogoutButton;\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20\n});\n_c5 = MoreMenuButton;\nconst TopWalkwaysContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  overflowX: 'auto',\n  padding: theme.spacing(2),\n  marginTop: theme.spacing(4)\n}));\n\n// Add 'backgroundImage' as a prop to WalkwayBox\n_c6 = TopWalkwaysContainer;\nconst WalkwayBox = styled(Paper)(({\n  theme,\n  backgroundImage\n}) => ({\n  minWidth: '200px',\n  height: '150px',\n  margin: theme.spacing(1),\n  cursor: 'pointer',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  color: theme.palette.primary.contrastText,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(1),\n  transition: 'transform 0.2s, box-shadow 0.2s',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[6]\n  },\n  backgroundBlendMode: 'overlay' // Helps with readability\n}));\n_c7 = WalkwayBox;\nconst WalkerBoard = ({\n  onLogout\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false);\n  const [topWalkways, setTopWalkways] = useState([]);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4\n  };\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", {\n        withCredentials: true\n      });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {}\n  };\n  const fetchTopWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topLikedWalkways\");\n      setTopWalkways(response.data.topWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top walkways:\", error);\n    }\n  };\n  useEffect(() => {\n    const checkFavoriteStatus = async () => {\n      try {\n        var _response$data$favori;\n        const response = await Axios.get(\"http://localhost:8080/favorites\", {\n          withCredentials: true\n        });\n        setIsFavorite(((_response$data$favori = response.data.favorites) === null || _response$data$favori === void 0 ? void 0 : _response$data$favori.some(fav => fav.id === selectedMarker.id)) || false);\n      } catch (error) {\n        console.error(\"Error checking favorite status:\", error);\n      }\n    };\n    selectedMarker && checkFavoriteStatus();\n  }, [selectedMarker]);\n  const handleFavoriteClick = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addFavorite\", {\n        locationId: selectedMarker.id\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setIsFavorite(true);\n        await Axios.post(\"http://localhost:8080/addPoints\", {\n          points: 20\n        }, {\n          withCredentials: true\n        });\n        setSuccess(\"Marked as favorite! Points added!\");\n      }\n    } catch (error) {\n      var _error$response;\n      setError(\"Failed to mark as favorite: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n  const handleStartWalkClick = () => navigate('/StartWalk');\n  const handleClick = event => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/WalkerBoard');\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); // Reset map load state to force reload\n    setGeojsonData(null); // Clear GeoJSON data to ensure it reloads\n    setSelectedMarker(null); // Clear the selected marker\n  };\n  const handleMarkerClick = useCallback(marker => setSelectedMarker(marker), []);\n  useEffect(() => {\n    fetchTopWalkways();\n  }, []);\n  const handleTopWalkwayClick = walkwayId => {\n    const marker = markers.find(marker => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  const transformedMarkers = markers.filter(marker => marker.coordinates) // Filter out any marker without coordinates\n  .map(marker => {\n    var _marker$specifics, _marker$specifics2;\n    return {\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      name: marker.name || 'Unknown Name',\n      // Fallback for missing names\n      description: marker.description || 'No description available',\n      // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg',\n      // Fallback for missing image\n      distance: ((_marker$specifics = marker.specifics) === null || _marker$specifics === void 0 ? void 0 : _marker$specifics.distance) || 'Unknown Distance',\n      // Safe access for nested properties\n      difficulty: ((_marker$specifics2 = marker.specifics) === null || _marker$specifics2 === void 0 ? void 0 : _marker$specifics2.difficulty) || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      }\n    };\n  });\n  useEffect(() => {\n    if (selectedMarker) {\n      Axios.get(`http://localhost:8080/getGeojson`, {\n        params: {\n          walkwayId: selectedMarker.id\n        }\n      }).then(({\n        data: {\n          geojson\n        }\n      }) => {\n        geojson.features.forEach(feature => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = feature.geometry.coordinates;\n            feature.geometry.coordinates = [lat, lng];\n          } else if (feature.geometry.type === 'MultiLineString') {\n            feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n          }\n        });\n        setGeojsonData(geojson);\n      }).catch(error => console.error('Error fetching GeoJSON:', error));\n    }\n  }, [selectedMarker]);\n  const handleMapLoad = mapInstance => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n  useEffect(() => {\n    if (isMapLoaded && mapRef.current && geojsonData && !geoJsonLoaded) {\n      console.log(\"Map and GeoJSON data are ready.\");\n      try {\n        const dataLayer = new window.google.maps.Data();\n        dataLayer.setMap(mapRef.current);\n\n        // Clear previous GeoJSON data\n        dataLayer.forEach(feature => dataLayer.remove(feature));\n\n        // Ensure coordinates are valid numbers and in correct [lat, lng] format\n        const validateAndTransformGeoJson = geoJson => {\n          geoJson.features.forEach(feature => {\n            //console.log(\"Processing feature:\", feature); // Log the entire feature\n\n            if (feature.geometry.type === 'Point') {\n              let coordinates = feature.geometry.coordinates;\n              if (Array.isArray(coordinates) && coordinates.length === 2) {\n                let [lng, lat] = coordinates;\n                if (typeof lat === 'number' && typeof lng === 'number') {\n                  feature.geometry.coordinates = [lat, lng]; // Reverse to [lat, lng]\n                  //console.log(\"Transformed Point coordinates:\", feature.geometry.coordinates);\n                } else {\n                  //console.warn(\"Invalid coordinates in Point feature:\", coordinates);\n                  feature.geometry.coordinates = null; // Set to null if invalid\n                }\n              } else {\n                //console.warn(\"Invalid or missing Point coordinates:\", coordinates);\n                feature.geometry.coordinates = null; // Set to null if not in correct format\n              }\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(lineString => {\n                if (Array.isArray(lineString)) {\n                  return lineString.map(([lng, lat]) => {\n                    if (typeof lat === 'number' && typeof lng === 'number') {\n                      //console.log(\"Transforming MultiLineString coordinate:\", [lat, lng]);\n                      return [lat, lng]; // Reverse coordinates\n                    } else {\n                      console.warn(\"Invalid coordinates in MultiLineString feature:\", [lng, lat]);\n                      return null; // Return null if invalid\n                    }\n                  }).filter(Boolean); // Remove any invalid coordinate pairs\n                } else {\n                  console.warn(\"Invalid lineString in MultiLineString feature:\", lineString);\n                  return null; // Return null if not an array\n                }\n              }).filter(Boolean); // Remove any invalid lineStrings\n            }\n          });\n\n          // Filter out any features with invalid coordinates\n          geoJson.features = geoJson.features.filter(feature => feature.geometry.coordinates !== null);\n          return geoJson;\n        };\n        const validatedGeoJson = validateAndTransformGeoJson(typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData);\n\n        // Add validated GeoJSON data to the map\n        dataLayer.addGeoJson(validatedGeoJson);\n\n        // Set styles for GeoJSON features\n        dataLayer.setStyle(feature => {\n          const geometryType = feature.getGeometry().getType();\n          if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n            return {\n              strokeColor: 'blue',\n              strokeWeight: 3,\n              clickable: false\n            };\n          } else if (geometryType === 'Point') {\n            return {\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 6,\n                fillColor: 'red',\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: 'white'\n              }\n            };\n          }\n        });\n\n        // Fit the map bounds to the GeoJSON data\n        const bounds = new window.google.maps.LatLngBounds();\n        dataLayer.forEach(feature => {\n          const geometry = feature.getGeometry();\n          if (geometry.getType() === 'Point') {\n            bounds.extend(geometry.get());\n          } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n            geometry.getArray().forEach(bounds.extend);\n          }\n        });\n        if (!bounds.isEmpty()) {\n          mapRef.current.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error(\"Error adding GeoJSON to the map:\", error);\n      }\n    } else {\n      console.log(\"Map or GeoJSON data is not ready.\");\n    }\n  }, [isMapLoaded, geojsonData, geoJsonLoaded]);\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = difficultyLevel => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(APIProvider, {\n        apiKey: 'AIzaSyC8Sj12_rv73anPhi2oCeqsVVjUkfFJ4-U',\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          src: logo,\n          alt: \"logo\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {\n          \"aria-label\": \"more\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Profile');\n            },\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/History');\n            },\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Favorites');\n            },\n            children: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            defaultZoom: 10,\n            defaultCenter: {\n              lat: 41.5564,\n              lng: -8.16415\n            },\n            mapId: \"5f6b01e0c09b0450\",\n            mapTypeId: \"terrain\"\n            //onIdle={handleMapLoad}\n            ,\n            children: transformedMarkers.map(marker => /*#__PURE__*/_jsxDEV(AdvancedMarker, {\n              position: marker.position,\n              clickable: true,\n              onClick: () => handleMarkerClick(marker),\n              children: /*#__PURE__*/_jsxDEV(Pin, {\n                background: theme.palette.primary.secondary,\n                borderColor: theme.palette.primary.main,\n                glyphColor: theme.palette.primary.contrastText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)\n            }, marker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: selectedMarker !== null,\n          onClose: handleCloseDialog,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name, /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: handleCloseDialog,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabIndex,\n            onChange: handleTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Walkway\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id],\n                alt: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name,\n                style: {\n                  maxWidth: '100%',\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"District:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.district]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Difficulty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 62\n                }, this), \" \", difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), tabIndex === 1 && selectedMarker && /*#__PURE__*/_jsxDEV(Map, {\n              defaultZoom: 12,\n              defaultCenter: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.defaultCenter,\n              mapId: \"5f6b01e0c09b0450\",\n              onIdle: handleMapLoad,\n              style: {\n                height: '600px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), tabIndex === 2 && /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"List of services offered along the walkway can be added here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [!isFavorite ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 74\n                }, this),\n                onClick: handleFavoriteClick,\n                children: \"Mark as Favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disabled: true,\n                children: \"This location is already marked as favorite!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 27\n              }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: success\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 72\n              }, this),\n              onClick: handleStartWalkClick,\n              children: \"Start Walk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginTop: theme.spacing(10),\n            textAlign: 'left'\n          },\n          children: \"Top Walkways Users Liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopWalkwaysContainer, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          children: topWalkways.map((walkway, index) => /*#__PURE__*/_jsxDEV(WalkwayBox, {\n            onClick: () => handleTopWalkwayClick(walkway.id),\n            style: {\n              width: '300px',\n              height: '180px'\n            } // Define o tamanho fixo das caixas\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageMap[walkway.id] || 'default_image.jpg',\n              alt: walkway.name,\n              style: {\n                width: '100%',\n                height: '120px',\n                objectFit: 'cover',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                fontWeight: 'bold',\n                marginTop: theme.spacing(1),\n                color: '#333'\n              },\n              children: walkway.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                color: '#666'\n              },\n              children: [\"Distance: \", walkway.specifics.distance, \" | Difficulty: \", walkway.specifics.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, walkway.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleLogOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n};\n_s(WalkerBoard, \"W8jcJdXMXnCKxDmsUKLH6H7C9Bw=\", false, function () {\n  return [useNavigate];\n});\n_c8 = WalkerBoard;\nexport default WalkerBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"MapContainer\");\n$RefreshReg$(_c4, \"LogoutButton\");\n$RefreshReg$(_c5, \"MoreMenuButton\");\n$RefreshReg$(_c6, \"TopWalkwaysContainer\");\n$RefreshReg$(_c7, \"WalkwayBox\");\n$RefreshReg$(_c8, \"WalkerBoard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Axios","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","IconButton","Button","Container","CssBaseline","Typography","Paper","ThemeProvider","Box","styled","CloseIcon","MoreVertIcon","FavoriteIcon","DirectionsWalkIcon","APIProvider","AdvancedMarker","Map","Pin","useNavigate","theme","logo","walkway0","walkway1","walkway2","walkway3","walkway4","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","root","zIndex","_c","Logo","position","top","spacing","left","width","height","cursor","_c2","MapContainer","marginTop","_c3","LogoutButton","right","_c4","MoreMenuButton","_c5","TopWalkwaysContainer","display","overflowX","padding","_c6","WalkwayBox","backgroundImage","minWidth","margin","backgroundSize","backgroundPosition","color","palette","primary","contrastText","flexDirection","justifyContent","transition","transform","boxShadow","shadows","backgroundBlendMode","_c7","WalkerBoard","onLogout","_s","error","setError","anchorEl","setAnchorEl","success","setSuccess","markers","setMarkers","selectedMarker","setSelectedMarker","isFavorite","setIsFavorite","difficulty","setDifficulty","tabIndex","setTabIndex","geojsonData","setGeojsonData","isMapLoaded","setIsMapLoaded","geoJsonLoaded","setGeoJsonLoaded","topWalkways","setTopWalkways","mapRef","navigate","imageMap","handleTabChange","_","newValue","handleLogOut","get","withCredentials","console","log","fetchTopWalkways","response","data","checkFavoriteStatus","_response$data$favori","favorites","some","fav","id","handleFavoriteClick","post","locationId","status","points","_error$response","message","handleStartWalkClick","handleClick","event","currentTarget","handleClose","handleLogoClick","handleCloseDialog","handleMarkerClick","marker","handleTopWalkwayClick","walkwayId","find","current","panTo","setZoom","fetchMarkers","transformedMarkers","filter","coordinates","map","_marker$specifics","_marker$specifics2","lat","latitude","lng","longitude","name","description","image","primaryImage","distance","specifics","region","district","defaultCenter","params","then","geojson","features","forEach","feature","geometry","type","line","catch","handleMapLoad","mapInstance","googleMap","dataLayer","window","google","maps","Data","setMap","remove","validateAndTransformGeoJson","geoJson","Array","isArray","length","lineString","warn","Boolean","validatedGeoJson","JSON","parse","addGeoJson","setStyle","geometryType","getGeometry","getType","strokeColor","strokeWeight","clickable","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","bounds","LatLngBounds","extend","getArray","isEmpty","fitBounds","calculateDifficulty","difficultyLevel","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","src","alt","onClick","keepMounted","open","onClose","defaultZoom","mapId","mapTypeId","background","secondary","borderColor","main","glyphColor","fullWidth","value","onChange","label","dividers","style","maxWidth","marginBottom","gutterBottom","onIdle","variant","startIcon","disabled","textAlign","walkway","index","objectFit","borderRadius","fontWeight","_c8","$RefreshReg$"],"sources":["/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/WalkerBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton,\n  Button, Container, CssBaseline, Typography, Paper, ThemeProvider, Box\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\n\nimport theme from './Theme/theme';\nimport logo from './Theme/images/baselogo.jpg';\nimport walkway0 from './Theme/images/walkway_0.jpg';\nimport walkway1 from './Theme/images/walkway_1.jpg';\nimport walkway2 from './Theme/images/walkway_2.jpg';\nimport walkway3 from './Theme/images/walkway_3.jpg';\nimport walkway4 from './Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nconst AppContainer = styled(Container)(({ theme }) => ({\n  ...theme.root,\n  zIndex: 9999,\n}));\n\nconst Logo = styled('img')(({ theme }) => ({\n  position: 'absolute',\n  top: theme.spacing(2),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer',\n}));\n\nconst MapContainer = styled(Paper)(({ theme }) => ({\n  height: '600px',\n  width: '100%',\n  marginTop: theme.spacing(4),\n}));\n\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20,\n});\n\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20,\n});\n\nconst TopWalkwaysContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  overflowX: 'auto',\n  padding: theme.spacing(2),\n  marginTop: theme.spacing(4),\n}));\n\n// Add 'backgroundImage' as a prop to WalkwayBox\nconst WalkwayBox = styled(Paper)(({ theme, backgroundImage }) => ({\n  minWidth: '200px',\n  height: '150px',\n  margin: theme.spacing(1),\n  cursor: 'pointer',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  color: theme.palette.primary.contrastText,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(1),\n  transition: 'transform 0.2s, box-shadow 0.2s',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[6],\n  },\n  backgroundBlendMode: 'overlay', // Helps with readability\n}));\n\nconst WalkerBoard = ({ onLogout }) => {\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false); \n  const [topWalkways, setTopWalkways] = useState([]);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4,\n  };\n\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", { withCredentials: true });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {\n    }\n  };\n\n  const fetchTopWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topLikedWalkways\");\n      setTopWalkways(response.data.topWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top walkways:\", error);\n    }\n  };\n\n  \n\n  useEffect(() => {\n    const checkFavoriteStatus = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/favorites\", { withCredentials: true });\n        setIsFavorite(response.data.favorites?.some((fav) => fav.id === selectedMarker.id) || false);\n      } catch (error) {\n        console.error(\"Error checking favorite status:\", error);\n      }\n    };\n    selectedMarker && checkFavoriteStatus();\n  }, [selectedMarker]);\n\n  const handleFavoriteClick = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addFavorite\", { locationId: selectedMarker.id }, { withCredentials: true });\n      if (response.status === 200) {\n        setIsFavorite(true);\n        await Axios.post(\"http://localhost:8080/addPoints\", { points: 20 }, { withCredentials: true });\n        setSuccess(\"Marked as favorite! Points added!\");\n      }\n    } catch (error) {\n      setError(\"Failed to mark as favorite: \" + (error.response?.data || error.message));\n    }\n  };\n\n  const handleStartWalkClick = () => navigate('/StartWalk');\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/WalkerBoard');\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); // Reset map load state to force reload\n    setGeojsonData(null);   // Clear GeoJSON data to ensure it reloads\n    setSelectedMarker(null); // Clear the selected marker\n  };\n  const handleMarkerClick = useCallback((marker) => setSelectedMarker(marker), []);\n  useEffect(() => {\n    fetchTopWalkways();\n  }, []);\n  const handleTopWalkwayClick = (walkwayId) => {\n    const marker = markers.find((marker) => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n\n  const transformedMarkers = markers\n    .filter(marker => marker.coordinates) // Filter out any marker without coordinates\n    .map(marker => ({\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude,\n      },\n      name: marker.name || 'Unknown Name', // Fallback for missing names\n      description: marker.description || 'No description available', // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg', // Fallback for missing image\n      distance: marker.specifics?.distance || 'Unknown Distance', // Safe access for nested properties\n      difficulty: marker.specifics?.difficulty || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: { lat: marker.coordinates.latitude, lng: marker.coordinates.longitude },\n  }));\n\n  useEffect(() => {\n    if (selectedMarker) {\n      Axios.get(`http://localhost:8080/getGeojson`, { params: { walkwayId: selectedMarker.id } })\n        .then(({ data: { geojson } }) => {\n          geojson.features.forEach((feature) => {\n            if (feature.geometry.type === 'Point') {\n              const [lng, lat] = feature.geometry.coordinates;\n              feature.geometry.coordinates = [lat, lng];\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(line =>\n                line.map(([lng, lat]) => [lat, lng])\n              );\n            }\n          });\n          setGeojsonData(geojson);\n        })\n        .catch((error) => console.error('Error fetching GeoJSON:', error));\n    }\n  }, [selectedMarker]);\n\n  const handleMapLoad = (mapInstance) => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n\n  useEffect(() => {\n    if (isMapLoaded && mapRef.current && geojsonData && !geoJsonLoaded) {\n      console.log(\"Map and GeoJSON data are ready.\");\n  \n      try {\n        const dataLayer = new window.google.maps.Data();\n        dataLayer.setMap(mapRef.current);\n  \n        // Clear previous GeoJSON data\n        dataLayer.forEach((feature) => dataLayer.remove(feature));\n  \n        // Ensure coordinates are valid numbers and in correct [lat, lng] format\n        const validateAndTransformGeoJson = (geoJson) => {\n          geoJson.features.forEach((feature) => {\n            //console.log(\"Processing feature:\", feature); // Log the entire feature\n        \n            if (feature.geometry.type === 'Point') {\n              let coordinates = feature.geometry.coordinates;\n        \n              if (Array.isArray(coordinates) && coordinates.length === 2) {\n                let [lng, lat] = coordinates;\n                if (typeof lat === 'number' && typeof lng === 'number') {\n                  feature.geometry.coordinates = [lat, lng]; // Reverse to [lat, lng]\n                  //console.log(\"Transformed Point coordinates:\", feature.geometry.coordinates);\n                } else {\n                  //console.warn(\"Invalid coordinates in Point feature:\", coordinates);\n                  feature.geometry.coordinates = null; // Set to null if invalid\n                }\n              } else {\n                //console.warn(\"Invalid or missing Point coordinates:\", coordinates);\n                feature.geometry.coordinates = null; // Set to null if not in correct format\n              }\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map((lineString) => {\n                if (Array.isArray(lineString)) {\n                  return lineString\n                    .map(([lng, lat]) => {\n                      if (typeof lat === 'number' && typeof lng === 'number') {\n                        //console.log(\"Transforming MultiLineString coordinate:\", [lat, lng]);\n                        return [lat, lng]; // Reverse coordinates\n                      } else {\n                        console.warn(\"Invalid coordinates in MultiLineString feature:\", [lng, lat]);\n                        return null; // Return null if invalid\n                      }\n                    })\n                    .filter(Boolean); // Remove any invalid coordinate pairs\n                } else {\n                  console.warn(\"Invalid lineString in MultiLineString feature:\", lineString);\n                  return null; // Return null if not an array\n                }\n              }).filter(Boolean); // Remove any invalid lineStrings\n            }\n          });\n        \n          // Filter out any features with invalid coordinates\n          geoJson.features = geoJson.features.filter((feature) => feature.geometry.coordinates !== null);\n          return geoJson;\n        };\n        \n        \n        \n  \n        const validatedGeoJson = validateAndTransformGeoJson(\n          typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData\n        );\n  \n        // Add validated GeoJSON data to the map\n        dataLayer.addGeoJson(validatedGeoJson);\n  \n        // Set styles for GeoJSON features\n        dataLayer.setStyle((feature) => {\n          const geometryType = feature.getGeometry().getType();\n          if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n            return { strokeColor: 'blue', strokeWeight: 3, clickable: false };\n          } else if (geometryType === 'Point') {\n            return {\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 6,\n                fillColor: 'red',\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: 'white',\n              },\n            };\n          }\n        });\n  \n        // Fit the map bounds to the GeoJSON data\n        const bounds = new window.google.maps.LatLngBounds();\n        dataLayer.forEach((feature) => {\n          const geometry = feature.getGeometry();\n          if (geometry.getType() === 'Point') {\n            bounds.extend(geometry.get());\n          } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n            geometry.getArray().forEach(bounds.extend);\n          }\n        });\n        if (!bounds.isEmpty()) {\n          mapRef.current.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error(\"Error adding GeoJSON to the map:\", error);\n      }\n    } else {\n      console.log(\"Map or GeoJSON data is not ready.\");\n    }\n  }, [isMapLoaded, geojsonData, geoJsonLoaded]);\n  \n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = (difficultyLevel) => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n  \n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppContainer>\n        <APIProvider apiKey={'AIzaSyC8Sj12_rv73anPhi2oCeqsVVjUkfFJ4-U'}>\n          <Logo src={logo} alt=\"logo\" onClick={handleLogoClick} />\n          <MoreMenuButton aria-label=\"more\" onClick={handleClick}>\n            <MoreVertIcon />\n          </MoreMenuButton>\n          <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuItem onClick={() => { handleClose(); navigate('/Profile'); }}>Profile</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/History'); }}>History</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/Favorites'); }}>Favorites</MenuItem>\n          </Menu>\n          <MapContainer>\n            <Map\n              defaultZoom={10}\n              defaultCenter={{ lat: 41.5564, lng: -8.16415 }}\n              mapId='5f6b01e0c09b0450'\n              mapTypeId=\"terrain\"\n              //onIdle={handleMapLoad}\n            >\n              {transformedMarkers.map((marker) => (\n                <AdvancedMarker\n                  key={marker.id}\n                  position={marker.position}\n                  clickable={true}\n                  onClick={() => handleMarkerClick(marker)}\n                >\n                  <Pin background={theme.palette.primary.secondary} borderColor={theme.palette.primary.main} glyphColor={theme.palette.primary.contrastText} />\n                </AdvancedMarker>\n              ))}\n            </Map>\n          </MapContainer>\n          <Dialog open={selectedMarker !== null} onClose={handleCloseDialog} fullWidth>\n            <DialogTitle>\n              {selectedMarker?.name}\n              <IconButton aria-label=\"close\" onClick={handleCloseDialog}><CloseIcon /></IconButton>\n            </DialogTitle>\n            <Tabs value={tabIndex} onChange={handleTabChange}>\n              <Tab label=\"Overview\" />\n              <Tab label=\"Walkway\" />\n              <Tab label=\"Services\" />\n            </Tabs>\n            <DialogContent dividers>\n              {tabIndex === 0 && (\n                <>\n                  <img src={imageMap[selectedMarker?.id]} alt={selectedMarker?.name} style={{ maxWidth: '100%', marginBottom: '20px' }} />\n                  <Typography gutterBottom color=\"primary\"><strong>District:</strong> {selectedMarker?.district}</Typography>\n                  <Typography gutterBottom color=\"primary\"><strong>Region:</strong> {selectedMarker?.region}</Typography>\n                  <Typography gutterBottom color=\"secondary\"><strong>Difficulty:</strong> {difficulty}</Typography>\n                  <Typography gutterBottom><strong>Description:</strong> {selectedMarker?.description}</Typography>\n                </>\n              )}\n              {tabIndex === 1 && selectedMarker && (\n                <Map\n                  defaultZoom={12}\n                  defaultCenter={selectedMarker?.defaultCenter}\n                  mapId=\"5f6b01e0c09b0450\"\n                  onIdle={handleMapLoad}\n                  style={{ height: '600px', width: '100%' }}\n                  \n                />\n              )}\n              {tabIndex === 2 && <Typography>List of services offered along the walkway can be added here.</Typography>}\n            </DialogContent>\n            <DialogActions>\n              <div>\n                {!isFavorite ? (\n                  <Button variant=\"contained\" color=\"primary\" startIcon={<FavoriteIcon />} onClick={handleFavoriteClick}>\n                    Mark as Favorite\n                  </Button>\n                ) : (\n                  <Button variant=\"contained\" disabled>\n                    This location is already marked as favorite!\n                  </Button>\n                )}\n                {error && <div style={{ color: \"red\" }}>{error}</div>}\n                {success && <div style={{ color: \"green\" }}>{success}</div>}\n              </div>\n              <Button variant=\"contained\" color=\"secondary\" startIcon={<DirectionsWalkIcon />} onClick={handleStartWalkClick}>\n                Start Walk\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* Seção Top Walkways */}\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: theme.spacing(10), textAlign: 'left' }}>\n            Top Walkways Users Liked\n          </Typography>\n\n          <TopWalkwaysContainer style={{ justifyContent: 'flex-start' }}>\n            {topWalkways.map((walkway, index) => (\n              <WalkwayBox\n                key={walkway.id}\n                onClick={() => handleTopWalkwayClick(walkway.id)}\n                style={{ width: '300px', height: '180px' }} // Define o tamanho fixo das caixas\n              >\n                <img \n                  src={imageMap[walkway.id] || 'default_image.jpg'} \n                  alt={walkway.name} \n                  style={{ width: '100%', height: '120px', objectFit: 'cover', borderRadius: '4px' }}\n                />\n                <Typography variant=\"subtitle1\" style={{ fontWeight: 'bold', marginTop: theme.spacing(1), color: '#333' }}>\n                  {walkway.name}\n                </Typography>\n                <Typography variant=\"body2\" style={{ color: '#666' }}>\n                  Distance: {walkway.specifics.distance} | Difficulty: {walkway.specifics.difficulty}\n                </Typography>\n              </WalkwayBox>\n            ))}\n          </TopWalkwaysContainer>\n\n          <LogoutButton variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Logout</LogoutButton>\n        </APIProvider>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default WalkerBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}