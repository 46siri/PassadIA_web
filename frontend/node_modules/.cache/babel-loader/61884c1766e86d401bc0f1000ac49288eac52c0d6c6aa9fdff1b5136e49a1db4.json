{"ast":null,"code":"var _jsxFileName = \"/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/WalkerBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport { Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton, Button, Container, CssBaseline, Typography, Paper, ThemeProvider, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\nimport theme from './Theme/theme';\nimport logo from './Theme/images/baselogo.jpg';\nimport walkway0 from './Theme/images/walkway_0.jpg';\nimport walkway1 from './Theme/images/walkway_1.jpg';\nimport walkway2 from './Theme/images/walkway_2.jpg';\nimport walkway3 from './Theme/images/walkway_3.jpg';\nimport walkway4 from './Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled(Container)(({\n  theme\n}) => ({\n  ...theme.root,\n  zIndex: 9999\n}));\n_c = AppContainer;\nconst Logo = styled('img')(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: theme.spacing(4),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer'\n}));\n_c2 = Logo;\nconst MapContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '500px',\n  width: '100%',\n  display: 'flex',\n  overflowX: 'auto',\n  marginTop: theme.spacing(80)\n}));\n_c3 = MapContainer;\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20\n});\n_c4 = LogoutButton;\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20\n});\n_c5 = MoreMenuButton;\nconst TopWalkwaysContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  overflowX: 'auto'\n}));\n_c6 = TopWalkwaysContainer;\nconst RecommendedWalkwaysContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  overflowX: 'auto'\n}));\n// Add 'backgroundImage' as a prop to WalkwayBox\n_c7 = RecommendedWalkwaysContainer;\nconst WalkwayBox = styled(Paper)(({\n  theme,\n  backgroundImage\n}) => ({\n  minWidth: '200px',\n  height: '150px',\n  margin: theme.spacing(1),\n  cursor: 'pointer',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  color: theme.palette.primary.contrastText,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(1),\n  transition: 'transform 0.2s, box-shadow 0.2s',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[6]\n  },\n  backgroundBlendMode: 'overlay' // Helps with readability\n}));\n_c8 = WalkwayBox;\nconst WalkerBoard = ({\n  onLogout\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false);\n  const [topWalkways, setTopWalkways] = useState([]);\n  const [recommendedWalkways, setRecommendedWalkways] = useState([]);\n  const [isPlanned, setIsPlanned] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [comment, setComment] = useState('');\n  const [storedComment, setStoredComment] = useState(null);\n  const [publicComments, setPublicComments] = useState([]);\n  const [walkwayLikes, setWalkwayLikes] = useState(0);\n  const [userHistory, setUserHistory] = useState([]);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4\n  };\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", {\n        withCredentials: true\n      });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {}\n  };\n  const fetchTopWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topLikedWalkways\");\n      setTopWalkways(response.data.topWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top walkways:\", error);\n    }\n  };\n  const fetchRecommendedWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/recommendWalkways\");\n      setRecommendedWalkways(response.data.recommendations);\n      console.log(\"Recommended Walkways:\", response.data.recommendations);\n    } catch (error) {\n      console.error(\"Error fetching recommended walkways:\", error);\n    }\n  };\n  useEffect(() => {\n    const checkFavoriteStatus = async () => {\n      try {\n        var _response$data$favori;\n        const response = await Axios.get(\"http://localhost:8080/favorites\", {\n          withCredentials: true\n        });\n        setIsFavorite(((_response$data$favori = response.data.favorites) === null || _response$data$favori === void 0 ? void 0 : _response$data$favori.some(fav => fav.id === selectedMarker.id)) || false);\n      } catch (error) {\n        console.error(\"Error checking favorite status:\", error);\n      }\n    };\n    selectedMarker && checkFavoriteStatus();\n  }, [selectedMarker]);\n  const handleFavoriteClick = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addFavorite\", {\n        locationId: selectedMarker.id\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setIsFavorite(true);\n        await Axios.post(\"http://localhost:8080/addPoints\", {\n          points: 20\n        }, {\n          withCredentials: true\n        });\n        setSuccess(\"Marked as favorite! Points added!\");\n      }\n    } catch (error) {\n      var _error$response;\n      setError(\"Failed to mark as favorite: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n  const handleClick = event => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/WalkerBoard');\n  const handleCloseDialog = () => {\n    setSelectedMarker(null);\n    setTabIndex(0);\n    setComment('');\n    setAnchorEl(null);\n  };\n  const handleMarkerClick = async marker => {\n    if (!(marker !== null && marker !== void 0 && marker.id)) return;\n    setSelectedMarker(marker);\n    try {\n      const commentsRes = await Axios.get(`http://localhost:8080/getWalkwayComments?walkwayId=${marker.id}`);\n      setPublicComments(commentsRes.data.comments || []);\n      const likesRes = await Axios.get(`http://localhost:8080/walkwayLikes?walkwayId=${marker.id}`);\n      setWalkwayLikes(likesRes.data.likes || 0);\n    } catch (err) {\n      console.error(\"Error getting comments or likes:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchTopWalkways();\n  }, []);\n  useEffect(() => {\n    fetchRecommendedWalkways();\n  }, []);\n  const handleTopWalkwayClick = walkwayId => {\n    const marker = markers.find(marker => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  const transformedMarkers = markers.filter(marker => marker.id && marker.coordinates).map(marker => {\n    var _marker$specifics, _marker$specifics2;\n    return {\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      name: marker.name || 'Unknown Name',\n      // Fallback for missing names\n      description: marker.description || 'No description available',\n      // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg',\n      // Fallback for missing image\n      distance: ((_marker$specifics = marker.specifics) === null || _marker$specifics === void 0 ? void 0 : _marker$specifics.distance) || 'Unknown Distance',\n      // Safe access for nested properties\n      difficulty: ((_marker$specifics2 = marker.specifics) === null || _marker$specifics2 === void 0 ? void 0 : _marker$specifics2.difficulty) || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      interests: marker.interests || 'No Interests Available'\n    };\n  });\n  useEffect(() => {\n    if (!(selectedMarker !== null && selectedMarker !== void 0 && selectedMarker.id)) return;\n    Axios.get(`http://localhost:8080/getGeojson`, {\n      params: {\n        walkwayId: selectedMarker.id\n      }\n    }).then(({\n      data: {\n        geojson\n      }\n    }) => {\n      geojson.features.forEach(feature => {\n        if (feature.geometry.type === 'Point') {\n          const [lng, lat] = feature.geometry.coordinates;\n          feature.geometry.coordinates = [lat, lng];\n        } else if (feature.geometry.type === 'MultiLineString') {\n          feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n        }\n      });\n      setGeojsonData(geojson);\n    }).catch(error => console.error('Error fetching GeoJSON:', error));\n  }, [selectedMarker]);\n  const handleMapLoad = mapInstance => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n  useEffect(() => {\n    if (isMapLoaded && mapRef.current && geojsonData && !geoJsonLoaded) {\n      console.log(\"Map and GeoJSON data are ready.\");\n      try {\n        const dataLayer = new window.google.maps.Data();\n        dataLayer.setMap(mapRef.current);\n\n        // Clear previous GeoJSON data\n        dataLayer.forEach(feature => dataLayer.remove(feature));\n\n        // Ensure coordinates are valid numbers and in correct [lat, lng] format\n        const validateAndTransformGeoJson = geoJson => {\n          geoJson.features.forEach(feature => {\n            //console.log(\"Processing feature:\", feature); // Log the entire feature\n\n            if (feature.geometry.type === 'Point') {\n              let coordinates = feature.geometry.coordinates;\n              if (Array.isArray(coordinates) && coordinates.length === 2) {\n                let [lng, lat] = coordinates;\n                if (typeof lat === 'number' && typeof lng === 'number') {\n                  feature.geometry.coordinates = [lat, lng]; // Reverse to [lat, lng]\n                  //console.log(\"Transformed Point coordinates:\", feature.geometry.coordinates);\n                } else {\n                  //console.warn(\"Invalid coordinates in Point feature:\", coordinates);\n                  feature.geometry.coordinates = null; // Set to null if invalid\n                }\n              } else {\n                //console.warn(\"Invalid or missing Point coordinates:\", coordinates);\n                feature.geometry.coordinates = null; // Set to null if not in correct format\n              }\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(lineString => {\n                if (Array.isArray(lineString)) {\n                  return lineString.map(([lng, lat]) => {\n                    if (typeof lat === 'number' && typeof lng === 'number') {\n                      //console.log(\"Transforming MultiLineString coordinate:\", [lat, lng]);\n                      return [lat, lng]; // Reverse coordinates\n                    } else {\n                      console.warn(\"Invalid coordinates in MultiLineString feature:\", [lng, lat]);\n                      return null; // Return null if invalid\n                    }\n                  }).filter(Boolean); // Remove any invalid coordinate pairs\n                } else {\n                  console.warn(\"Invalid lineString in MultiLineString feature:\", lineString);\n                  return null; // Return null if not an array\n                }\n              }).filter(Boolean); // Remove any invalid lineStrings\n            }\n          });\n\n          // Filter out any features with invalid coordinates\n          geoJson.features = geoJson.features.filter(feature => feature.geometry.coordinates !== null);\n          return geoJson;\n        };\n        const validatedGeoJson = validateAndTransformGeoJson(typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData);\n\n        // Add validated GeoJSON data to the map\n        dataLayer.addGeoJson(validatedGeoJson);\n\n        // Set styles for GeoJSON features\n        dataLayer.setStyle(feature => {\n          const geometryType = feature.getGeometry().getType();\n          if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n            return {\n              strokeColor: 'blue',\n              strokeWeight: 3,\n              clickable: false\n            };\n          } else if (geometryType === 'Point') {\n            return {\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 6,\n                fillColor: 'red',\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: 'white'\n              }\n            };\n          }\n        });\n\n        // Fit the map bounds to the GeoJSON data\n        const bounds = new window.google.maps.LatLngBounds();\n        dataLayer.forEach(feature => {\n          const geometry = feature.getGeometry();\n          if (geometry.getType() === 'Point') {\n            bounds.extend(geometry.get());\n          } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n            geometry.getArray().forEach(bounds.extend);\n          }\n        });\n        if (!bounds.isEmpty()) {\n          mapRef.current.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error(\"Error adding GeoJSON to the map:\", error);\n      }\n    } else {\n      console.log(\"Map or GeoJSON data is not ready.\");\n    }\n  }, [isMapLoaded, geojsonData, geoJsonLoaded]);\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = difficultyLevel => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n  const handlePlanWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: null,\n        distanceCompleted: 0,\n        finished: false,\n        timeSpent: null,\n        experience: \"\"\n      }, {\n        withCredentials: true\n      });\n      setSuccess(\"Walk planned successfully!\");\n      setIsPlanned(true);\n      setIsCompleted(false);\n      setStoredComment(null);\n    } catch (error) {\n      setError(\"Failed to plan the walk: \" + error.message);\n    }\n  };\n  const handleCompleteWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null\n      });\n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null,\n        experience: storedComment || \"\"\n      });\n      setSuccess(\"Walk successfully added to your history!\");\n      setIsPlanned(false);\n      setIsCompleted(true);\n      setComment(''); // limpa o campo após submissão\n    } catch (err) {\n      setError(\"Failed to mark as completed: \" + err.message);\n    }\n  };\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/history\", {\n          withCredentials: true\n        });\n        setUserHistory(response.data.history || []);\n        console.log(\"User history:\", response.data.history);\n      } catch (error) {\n        console.error(\"Error getting user history:\", error);\n      }\n    };\n    fetchHistory();\n  }, []);\n  useEffect(() => {\n    if (!selectedMarker) return;\n    const fetchPublicComments = async walkwayId => {\n      try {\n        const response = await Axios.get(`http://localhost:8080/walkwayComments?walkwayId=${walkwayId}`);\n        setPublicComments(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Error fetching public comments:\", error);\n      }\n    };\n    fetchPublicComments(selectedMarker.id);\n    const entry = userHistory.find(entry => entry.walkwayId === selectedMarker.id);\n    if (entry) {\n      if (entry.finished) {\n        setIsCompleted(true);\n        setIsPlanned(false);\n        setStoredComment(entry.experience || null);\n      } else {\n        setIsCompleted(false);\n        setIsPlanned(true);\n        setStoredComment(null);\n      }\n    } else {\n      setIsCompleted(false);\n      setIsPlanned(false);\n      setStoredComment(null);\n    }\n  }, [selectedMarker, userHistory]);\n  const updateHistoryEntry = newEntry => {\n    setUserHistory(prev => {\n      const existingIndex = prev.findIndex(e => e.walkwayId === newEntry.walkwayId);\n      if (existingIndex >= 0) {\n        const updated = [...prev];\n        updated[existingIndex] = {\n          ...updated[existingIndex],\n          ...newEntry\n        };\n        return updated;\n      } else {\n        return [...prev, newEntry];\n      }\n    });\n  };\n  const handleSubmitComment = async () => {\n    try {\n      await Axios.post(\"http://localhost:8080/addPublicComment\", {\n        walkwayId: selectedMarker.id,\n        experience: comment\n      }, {\n        withCredentials: true\n      });\n      setPublicComments(prev => [...prev, {\n        user: \"You\",\n        experience: comment,\n        timestamp: new Date().toISOString()\n      }]);\n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        experience: comment\n      });\n      setSuccess(\"Comment added successfully!\");\n      setStoredComment(comment);\n      setComment('');\n    } catch (err) {\n      setError(\"Failed to submit comment: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(APIProvider, {\n        apiKey: 'AIzaSyDwGfxyjM21tprpmkBXNI6HGIuwzvLsBgo',\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          src: logo,\n          alt: \"logo\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {\n          \"aria-label\": \"more\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Profile');\n            },\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/History');\n            },\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Favorites');\n            },\n            children: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            defaultZoom: 10,\n            defaultCenter: {\n              lat: 41.5564,\n              lng: -8.16415\n            },\n            mapId: \"5f6b01e0c09b0450\",\n            mapTypeId: \"terrain\"\n            //onIdle={handleMapLoad}\n            ,\n            children: transformedMarkers.map(marker => /*#__PURE__*/_jsxDEV(AdvancedMarker, {\n              position: marker.position,\n              clickable: true,\n              onClick: () => handleMarkerClick(marker),\n              children: /*#__PURE__*/_jsxDEV(Pin, {\n                background: theme.palette.primary.secondary,\n                borderColor: theme.palette.primary.main,\n                glyphColor: theme.palette.primary.contrastText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this)\n            }, marker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: selectedMarker !== null,\n          onClose: handleCloseDialog,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name, /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: handleCloseDialog,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabIndex,\n            onChange: handleTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Walkway\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id],\n                alt: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name,\n                style: {\n                  maxWidth: '100%',\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"District:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.district]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Difficulty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 62\n                }, this), \" \", difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this), storedComment && /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  marginTop: 16\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"User comment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 23\n                }, this), \" \", storedComment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 21\n              }, this), isCompleted && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  style: {\n                    marginTop: 16\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Leave a comment about your experience:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 74\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: comment,\n                  onChange: e => setComment(e.target.value),\n                  rows: 3,\n                  style: {\n                    width: '100%',\n                    padding: '8px',\n                    marginBottom: '8px'\n                  },\n                  placeholder: \"Write your comment here...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleSubmitComment,\n                  children: \"Submit Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true), tabIndex === 1 && selectedMarker && /*#__PURE__*/_jsxDEV(Map, {\n              defaultZoom: 12,\n              defaultCenter: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.defaultCenter,\n              mapId: \"5f6b01e0c09b0450\",\n              onIdle: handleMapLoad,\n              style: {\n                height: '600px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), tabIndex === 2 && /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"List of services offered along the walkway can be checked here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [!isFavorite ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 72\n                }, this),\n                onClick: handleFavoriteClick,\n                children: \"Mark as Favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disabled: true,\n                children: \"This location is already marked as favorite!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 25\n              }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: success\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 13\n            }, this), !isPlanned && !isCompleted && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 28\n              }, this),\n              onClick: handlePlanWalk,\n              children: \"Plan this walk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), selectedMarker && isPlanned && !isCompleted && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 28\n              }, this),\n              onClick: handleCompleteWalk,\n              children: \"Mark as completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this), selectedMarker && isCompleted && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 28\n              }, this),\n              onClick: handlePlanWalk,\n              children: \"Plan to walk again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginTop: theme.spacing(10),\n            textAlign: 'left'\n          },\n          children: \"Top Walkways Users Liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopWalkwaysContainer, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          children: topWalkways.map((walkway, index) => /*#__PURE__*/_jsxDEV(WalkwayBox, {\n            onClick: () => handleTopWalkwayClick(walkway.id),\n            style: {\n              width: '300px',\n              height: '180px'\n            } // Define o tamanho fixo das caixas\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageMap[walkway.id] || 'default_image.jpg',\n              alt: walkway.name,\n              style: {\n                width: '100%',\n                height: '120px',\n                objectFit: 'cover',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                fontWeight: 'bold',\n                marginTop: theme.spacing(1),\n                color: '#333'\n              },\n              children: walkway.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                color: '#666'\n              },\n              children: [\"Distance: \", walkway.specifics.distance, \" | Difficulty: \", walkway.specifics.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this)]\n          }, walkway.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginTop: theme.spacing(10),\n            textAlign: 'left'\n          },\n          children: \"Walkways that may interest you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecommendedWalkwaysContainer, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          children: Array.isArray(recommendedWalkways) && recommendedWalkways.length > 0 ? recommendedWalkways.map((walkway, index) => /*#__PURE__*/_jsxDEV(WalkwayBox, {\n            onClick: () => handleTopWalkwayClick(walkway.id),\n            style: {\n              width: '300px',\n              height: '180px'\n            } // Fixed box size\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageMap[walkway.id] || 'default_image.jpg',\n              alt: walkway.name,\n              style: {\n                width: '100%',\n                height: '120px',\n                objectFit: 'cover',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                fontWeight: 'bold',\n                marginTop: theme.spacing(1),\n                color: '#333'\n              },\n              children: walkway.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                color: '#666'\n              },\n              children: [\"Distance: \", walkway.specifics.distance, \" | Difficulty: \", walkway.specifics.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this)]\n          }, walkway.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: '#666',\n              padding: theme.spacing(2)\n            },\n            children: \"No recommended walkways available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleLogOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 551,\n    columnNumber: 5\n  }, this);\n};\n_s(WalkerBoard, \"LRX4t8e1SSAoXUli1lRRAVwCvXA=\", false, function () {\n  return [useNavigate];\n});\n_c9 = WalkerBoard;\nexport default WalkerBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"MapContainer\");\n$RefreshReg$(_c4, \"LogoutButton\");\n$RefreshReg$(_c5, \"MoreMenuButton\");\n$RefreshReg$(_c6, \"TopWalkwaysContainer\");\n$RefreshReg$(_c7, \"RecommendedWalkwaysContainer\");\n$RefreshReg$(_c8, \"WalkwayBox\");\n$RefreshReg$(_c9, \"WalkerBoard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Axios","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","IconButton","Button","Container","CssBaseline","Typography","Paper","ThemeProvider","Box","styled","CloseIcon","MoreVertIcon","FavoriteIcon","DirectionsWalkIcon","APIProvider","AdvancedMarker","Map","Pin","useNavigate","theme","logo","walkway0","walkway1","walkway2","walkway3","walkway4","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","root","zIndex","_c","Logo","position","top","spacing","left","width","height","cursor","_c2","MapContainer","display","overflowX","marginTop","_c3","LogoutButton","right","_c4","MoreMenuButton","_c5","TopWalkwaysContainer","_c6","RecommendedWalkwaysContainer","_c7","WalkwayBox","backgroundImage","minWidth","margin","backgroundSize","backgroundPosition","color","palette","primary","contrastText","flexDirection","justifyContent","padding","transition","transform","boxShadow","shadows","backgroundBlendMode","_c8","WalkerBoard","onLogout","_s","error","setError","anchorEl","setAnchorEl","success","setSuccess","markers","setMarkers","selectedMarker","setSelectedMarker","isFavorite","setIsFavorite","difficulty","setDifficulty","tabIndex","setTabIndex","geojsonData","setGeojsonData","isMapLoaded","setIsMapLoaded","geoJsonLoaded","setGeoJsonLoaded","topWalkways","setTopWalkways","recommendedWalkways","setRecommendedWalkways","isPlanned","setIsPlanned","isCompleted","setIsCompleted","comment","setComment","storedComment","setStoredComment","publicComments","setPublicComments","walkwayLikes","setWalkwayLikes","userHistory","setUserHistory","mapRef","navigate","imageMap","handleTabChange","_","newValue","handleLogOut","get","withCredentials","console","log","fetchTopWalkways","response","data","fetchRecommendedWalkways","recommendations","checkFavoriteStatus","_response$data$favori","favorites","some","fav","id","handleFavoriteClick","post","locationId","status","points","_error$response","message","handleClick","event","currentTarget","handleClose","handleLogoClick","handleCloseDialog","handleMarkerClick","marker","commentsRes","comments","likesRes","likes","err","handleTopWalkwayClick","walkwayId","find","current","panTo","setZoom","fetchMarkers","transformedMarkers","filter","coordinates","map","_marker$specifics","_marker$specifics2","lat","latitude","lng","longitude","name","description","image","primaryImage","distance","specifics","region","district","defaultCenter","interests","params","then","geojson","features","forEach","feature","geometry","type","line","catch","handleMapLoad","mapInstance","googleMap","dataLayer","window","google","maps","Data","setMap","remove","validateAndTransformGeoJson","geoJson","Array","isArray","length","lineString","warn","Boolean","validatedGeoJson","JSON","parse","addGeoJson","setStyle","geometryType","getGeometry","getType","strokeColor","strokeWeight","clickable","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","bounds","LatLngBounds","extend","getArray","isEmpty","fitBounds","calculateDifficulty","difficultyLevel","handlePlanWalk","walkwayName","startDate","Date","toISOString","endDate","distanceCompleted","finished","timeSpent","experience","handleCompleteWalk","updateHistoryEntry","fetchHistory","history","fetchPublicComments","entry","newEntry","prev","existingIndex","findIndex","e","updated","handleSubmitComment","user","timestamp","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","src","alt","onClick","keepMounted","open","onClose","defaultZoom","mapId","mapTypeId","background","secondary","borderColor","main","glyphColor","fullWidth","value","onChange","label","dividers","style","maxWidth","marginBottom","gutterBottom","target","rows","placeholder","variant","onIdle","startIcon","disabled","textAlign","walkway","index","objectFit","borderRadius","fontWeight","_c9","$RefreshReg$"],"sources":["/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/WalkerBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton,\n  Button, Container, CssBaseline, Typography, Paper, ThemeProvider, Box\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\n\nimport theme from './Theme/theme';\nimport logo from './Theme/images/baselogo.jpg';\nimport walkway0 from './Theme/images/walkway_0.jpg';\nimport walkway1 from './Theme/images/walkway_1.jpg';\nimport walkway2 from './Theme/images/walkway_2.jpg';\nimport walkway3 from './Theme/images/walkway_3.jpg';\nimport walkway4 from './Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nconst AppContainer = styled(Container)(({ theme }) => ({\n  ...theme.root,\n  zIndex: 9999,\n}));\n\nconst Logo = styled('img')(({ theme }) => ({\n  position: 'absolute',\n  top: theme.spacing(4),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer',\n}));\n\nconst MapContainer = styled(Paper)(({ theme }) => ({\n  height: '500px',\n  width: '100%',\n  display: 'flex',\n  overflowX: 'auto',\n  marginTop: theme.spacing(80),\n}));\n\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20,\n});\n\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20,\n});\n\nconst TopWalkwaysContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  overflowX: 'auto',\n\n}));\nconst RecommendedWalkwaysContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  overflowX: 'auto',\n\n}));\n// Add 'backgroundImage' as a prop to WalkwayBox\nconst WalkwayBox = styled(Paper)(({ theme, backgroundImage }) => ({\n  minWidth: '200px',\n  height: '150px',\n  margin: theme.spacing(1),\n  cursor: 'pointer',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  color: theme.palette.primary.contrastText,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(1),\n  transition: 'transform 0.2s, box-shadow 0.2s',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[6],\n  },\n  backgroundBlendMode: 'overlay', // Helps with readability\n}));\n\nconst WalkerBoard = ({ onLogout }) => {\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false); \n  const [topWalkways, setTopWalkways] = useState([]);\n  const [recommendedWalkways, setRecommendedWalkways] = useState([]);\n  const [isPlanned, setIsPlanned] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [comment, setComment] = useState('');\n  const [storedComment, setStoredComment] = useState(null);\n  const [publicComments, setPublicComments] = useState([]);\n  const [walkwayLikes, setWalkwayLikes] = useState(0);\n  const [userHistory, setUserHistory] = useState([]);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4,\n  };\n\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", { withCredentials: true });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {\n    }\n  };\n\n  const fetchTopWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topLikedWalkways\");\n      setTopWalkways(response.data.topWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top walkways:\", error);\n    }\n  };\n\n  const fetchRecommendedWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/recommendWalkways\");\n      setRecommendedWalkways(response.data.recommendations);\n      console.log(\"Recommended Walkways:\", response.data.recommendations);\n    } catch (error) {\n      console.error(\"Error fetching recommended walkways:\", error);\n    }\n  };\n\n  \n\n  useEffect(() => {\n    const checkFavoriteStatus = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/favorites\", { withCredentials: true });\n        setIsFavorite(response.data.favorites?.some((fav) => fav.id === selectedMarker.id) || false);\n      } catch (error) {\n        console.error(\"Error checking favorite status:\", error);\n      }\n    };\n    selectedMarker && checkFavoriteStatus();\n  }, [selectedMarker]);\n\n  const handleFavoriteClick = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addFavorite\", { locationId: selectedMarker.id }, { withCredentials: true });\n      if (response.status === 200) {\n        setIsFavorite(true);\n        await Axios.post(\"http://localhost:8080/addPoints\", { points: 20 }, { withCredentials: true });\n        setSuccess(\"Marked as favorite! Points added!\");\n      }\n    } catch (error) {\n      setError(\"Failed to mark as favorite: \" + (error.response?.data || error.message));\n    }\n  };\n\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/WalkerBoard');\n\n  const handleCloseDialog = () => {\n    setSelectedMarker(null);\n    setTabIndex(0);\n    setComment('');\n    setAnchorEl(null);\n  };\n  \n\n  const handleMarkerClick = async (marker) => {\n    if (!marker?.id) return;\n  \n    setSelectedMarker(marker);\n  \n    try {\n      const commentsRes = await Axios.get(`http://localhost:8080/getWalkwayComments?walkwayId=${marker.id}`);\n      setPublicComments(commentsRes.data.comments || []);\n  \n      const likesRes = await Axios.get(`http://localhost:8080/walkwayLikes?walkwayId=${marker.id}`);\n      setWalkwayLikes(likesRes.data.likes || 0);\n    } catch (err) {\n      console.error(\"Error getting comments or likes:\", err);\n    }\n  };\n  \n  \n  useEffect(() => {\n    fetchTopWalkways();\n  }, []);\n  useEffect(() => {\n    fetchRecommendedWalkways();\n  }, []);\n  const handleTopWalkwayClick = (walkwayId) => {\n    const marker = markers.find((marker) => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n\n  const transformedMarkers = markers\n    .filter(marker => marker.id && marker.coordinates)\n    .map(marker => ({\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude,\n      },\n      name: marker.name || 'Unknown Name', // Fallback for missing names\n      description: marker.description || 'No description available', // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg', // Fallback for missing image\n      distance: marker.specifics?.distance || 'Unknown Distance', // Safe access for nested properties\n      difficulty: marker.specifics?.difficulty || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: { lat: marker.coordinates.latitude, lng: marker.coordinates.longitude },\n      interests: marker.interests|| 'No Interests Available',\n  }));\n\n  useEffect(() => {\n    if (!selectedMarker?.id) return;\n      Axios.get(`http://localhost:8080/getGeojson`, { params: { walkwayId: selectedMarker.id } })\n        .then(({ data: { geojson } }) => {\n          geojson.features.forEach((feature) => {\n            if (feature.geometry.type === 'Point') {\n              const [lng, lat] = feature.geometry.coordinates;\n              feature.geometry.coordinates = [lat, lng];\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(line =>\n                line.map(([lng, lat]) => [lat, lng])\n              );\n            }\n          });\n          setGeojsonData(geojson);\n        })\n        .catch((error) => console.error('Error fetching GeoJSON:', error));\n    \n  }, [selectedMarker]);\n\n  const handleMapLoad = (mapInstance) => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n\n  useEffect(() => {\n    if (isMapLoaded && mapRef.current && geojsonData && !geoJsonLoaded) {\n      console.log(\"Map and GeoJSON data are ready.\");\n  \n      try {\n        const dataLayer = new window.google.maps.Data();\n        dataLayer.setMap(mapRef.current);\n  \n        // Clear previous GeoJSON data\n        dataLayer.forEach((feature) => dataLayer.remove(feature));\n  \n        // Ensure coordinates are valid numbers and in correct [lat, lng] format\n        const validateAndTransformGeoJson = (geoJson) => {\n          geoJson.features.forEach((feature) => {\n            //console.log(\"Processing feature:\", feature); // Log the entire feature\n        \n            if (feature.geometry.type === 'Point') {\n              let coordinates = feature.geometry.coordinates;\n        \n              if (Array.isArray(coordinates) && coordinates.length === 2) {\n                let [lng, lat] = coordinates;\n                if (typeof lat === 'number' && typeof lng === 'number') {\n                  feature.geometry.coordinates = [lat, lng]; // Reverse to [lat, lng]\n                  //console.log(\"Transformed Point coordinates:\", feature.geometry.coordinates);\n                } else {\n                  //console.warn(\"Invalid coordinates in Point feature:\", coordinates);\n                  feature.geometry.coordinates = null; // Set to null if invalid\n                }\n              } else {\n                //console.warn(\"Invalid or missing Point coordinates:\", coordinates);\n                feature.geometry.coordinates = null; // Set to null if not in correct format\n              }\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map((lineString) => {\n                if (Array.isArray(lineString)) {\n                  return lineString\n                    .map(([lng, lat]) => {\n                      if (typeof lat === 'number' && typeof lng === 'number') {\n                        //console.log(\"Transforming MultiLineString coordinate:\", [lat, lng]);\n                        return [lat, lng]; // Reverse coordinates\n                      } else {\n                        console.warn(\"Invalid coordinates in MultiLineString feature:\", [lng, lat]);\n                        return null; // Return null if invalid\n                      }\n                    })\n                    .filter(Boolean); // Remove any invalid coordinate pairs\n                } else {\n                  console.warn(\"Invalid lineString in MultiLineString feature:\", lineString);\n                  return null; // Return null if not an array\n                }\n              }).filter(Boolean); // Remove any invalid lineStrings\n            }\n          });\n        \n          // Filter out any features with invalid coordinates\n          geoJson.features = geoJson.features.filter((feature) => feature.geometry.coordinates !== null);\n          return geoJson;\n        };\n        \n        \n        \n  \n        const validatedGeoJson = validateAndTransformGeoJson(\n          typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData\n        );\n  \n        // Add validated GeoJSON data to the map\n        dataLayer.addGeoJson(validatedGeoJson);\n  \n        // Set styles for GeoJSON features\n        dataLayer.setStyle((feature) => {\n          const geometryType = feature.getGeometry().getType();\n          if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n            return { strokeColor: 'blue', strokeWeight: 3, clickable: false };\n          } else if (geometryType === 'Point') {\n            return {\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 6,\n                fillColor: 'red',\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: 'white',\n              },\n            };\n          }\n        });\n  \n        // Fit the map bounds to the GeoJSON data\n        const bounds = new window.google.maps.LatLngBounds();\n        dataLayer.forEach((feature) => {\n          const geometry = feature.getGeometry();\n          if (geometry.getType() === 'Point') {\n            bounds.extend(geometry.get());\n          } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n            geometry.getArray().forEach(bounds.extend);\n          }\n        });\n        if (!bounds.isEmpty()) {\n          mapRef.current.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error(\"Error adding GeoJSON to the map:\", error);\n      }\n    } else {\n      console.log(\"Map or GeoJSON data is not ready.\");\n    }\n  }, [isMapLoaded, geojsonData, geoJsonLoaded]);\n\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = (difficultyLevel) => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n  \n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n\n  const handlePlanWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: null,\n        distanceCompleted: 0,\n        finished: false,\n        timeSpent: null,\n        experience: \"\"\n      }, { withCredentials: true });\n  \n      setSuccess(\"Walk planned successfully!\");\n      setIsPlanned(true);\n      setIsCompleted(false);\n      setStoredComment(null);\n    } catch (error) {\n      setError(\"Failed to plan the walk: \" + error.message);\n    }\n  };\n  \n  \n  const handleCompleteWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null\n      });\n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null,\n        experience: storedComment || \"\"\n      });\n      setSuccess(\"Walk successfully added to your history!\");\n      setIsPlanned(false);\n      setIsCompleted(true);\n      setComment(''); // limpa o campo após submissão\n    } catch (err) {\n      setError(\"Failed to mark as completed: \" + err.message);\n    }\n  };\n\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/history\", { withCredentials: true });\n        setUserHistory(response.data.history || []);\n        console.log(\"User history:\", response.data.history);\n      } catch (error) {\n        console.error(\"Error getting user history:\", error);\n      }\n    };\n    fetchHistory();\n  }, []);\n  \n  useEffect(() => {\n    if (!selectedMarker) return;\n    const fetchPublicComments = async (walkwayId) => {\n      try {\n        const response = await Axios.get(`http://localhost:8080/walkwayComments?walkwayId=${walkwayId}`);\n        setPublicComments(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Error fetching public comments:\", error);\n      }\n    };\n    fetchPublicComments(selectedMarker.id);\n\n  \n    const entry = userHistory.find(entry => entry.walkwayId === selectedMarker.id);\n  \n    if (entry) {\n      if (entry.finished) {\n        setIsCompleted(true);\n        setIsPlanned(false);\n        setStoredComment(entry.experience || null);\n      } else {\n        setIsCompleted(false);\n        setIsPlanned(true);\n        setStoredComment(null);\n      }\n    } else {\n      setIsCompleted(false);\n      setIsPlanned(false);\n      setStoredComment(null);\n    }\n  }, [selectedMarker, userHistory]);\n  \n  const updateHistoryEntry = (newEntry) => {\n    setUserHistory(prev => {\n      const existingIndex = prev.findIndex(e => e.walkwayId === newEntry.walkwayId);\n      if (existingIndex >= 0) {\n        const updated = [...prev];\n        updated[existingIndex] = { ...updated[existingIndex], ...newEntry };\n        return updated;\n      } else {\n        return [...prev, newEntry];\n      }\n    });\n  };\n  \n  const handleSubmitComment = async () => {\n    try {\n      await Axios.post(\"http://localhost:8080/addPublicComment\", {\n        walkwayId: selectedMarker.id,\n        experience: comment,\n      }, { withCredentials: true });\n      \n      setPublicComments(prev => [\n        ...prev,\n        { user: \"You\", experience: comment, timestamp: new Date().toISOString() }\n      ]);      \n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        experience: comment,\n      });\n      setSuccess(\"Comment added successfully!\");\n      setStoredComment(comment);\n      setComment('');\n    } catch (err) {\n      setError(\"Failed to submit comment: \" + err.message);\n    }\n  };\n  \n\n  \n  \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppContainer>\n        <APIProvider apiKey={'AIzaSyDwGfxyjM21tprpmkBXNI6HGIuwzvLsBgo'}>\n          <Logo src={logo} alt=\"logo\" onClick={handleLogoClick} />\n          <MoreMenuButton aria-label=\"more\" onClick={handleClick}>\n            <MoreVertIcon />\n          </MoreMenuButton>\n          <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuItem onClick={() => { handleClose(); navigate('/Profile'); }}>Profile</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/History'); }}>History</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/Favorites'); }}>Favorites</MenuItem>\n          </Menu>\n          <MapContainer>\n            <Map\n              defaultZoom={10}\n              defaultCenter={{ lat: 41.5564, lng: -8.16415 }}\n              mapId='5f6b01e0c09b0450'\n              mapTypeId=\"terrain\"\n              //onIdle={handleMapLoad}\n            >\n              {transformedMarkers.map((marker) => (\n                <AdvancedMarker\n                  key={marker.id}\n                  position={marker.position}\n                  clickable={true}\n                  onClick={() => handleMarkerClick(marker)}\n                >\n                  <Pin background={theme.palette.primary.secondary} borderColor={theme.palette.primary.main} glyphColor={theme.palette.primary.contrastText} />\n                </AdvancedMarker>\n              ))}\n            </Map>\n          </MapContainer>\n          <Dialog open={selectedMarker !== null} onClose={handleCloseDialog} fullWidth>\n            <DialogTitle>\n              {selectedMarker?.name}\n              <IconButton aria-label=\"close\" onClick={handleCloseDialog}><CloseIcon /></IconButton>\n            </DialogTitle>\n            <Tabs value={tabIndex} onChange={handleTabChange}>\n              <Tab label=\"Overview\" />\n              <Tab label=\"Walkway\" />\n              <Tab label=\"Services\" />\n            </Tabs>\n            <DialogContent dividers>\n              {tabIndex === 0 && (\n                <>\n                  <img src={imageMap[selectedMarker?.id]} alt={selectedMarker?.name} style={{ maxWidth: '100%', marginBottom: '20px' }} />\n                  <Typography gutterBottom color=\"primary\"><strong>District:</strong> {selectedMarker?.district}</Typography>\n                  <Typography gutterBottom color=\"primary\"><strong>Region:</strong> {selectedMarker?.region}</Typography>\n                  <Typography gutterBottom color=\"secondary\"><strong>Difficulty:</strong> {difficulty}</Typography>\n                  <Typography gutterBottom><strong>Description:</strong> {selectedMarker?.description}</Typography>\n                  {storedComment && (\n                    <Typography style={{ marginTop: 16 }}>\n                      <strong>User comment:</strong> {storedComment}\n                    </Typography>\n                  )}\n                  {isCompleted && (\n                    <>\n                      <Typography gutterBottom style={{ marginTop: 16 }}><strong>Leave a comment about your experience:</strong></Typography>\n                      <textarea\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                        rows={3}\n                        style={{ width: '100%', padding: '8px', marginBottom: '8px' }}\n                        placeholder=\"Write your comment here...\"\n                      />\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleSubmitComment}\n                      >\n                        Submit Comment\n                      </Button>\n                    </>\n                  )}\n                </>\n              )}\n              {tabIndex === 1 && selectedMarker && (\n                <Map\n                  defaultZoom={12}\n                  defaultCenter={selectedMarker?.defaultCenter}\n                  mapId=\"5f6b01e0c09b0450\"\n                  onIdle={handleMapLoad}\n                  style={{ height: '600px', width: '100%' }}\n                />\n              )}\n              {tabIndex === 2 && <Typography>List of services offered along the walkway can be checked here.</Typography>}\n            </DialogContent>\n            <DialogActions>\n            <div>\n              {!isFavorite ? (\n                <Button variant=\"contained\" color=\"primary\" startIcon={<FavoriteIcon />} onClick={handleFavoriteClick}>\n                  Mark as Favorite\n                </Button>\n              ) : (\n                <Button variant=\"contained\" disabled>\n                  This location is already marked as favorite!\n                </Button>\n              )}\n              {error && <div style={{ color: \"red\" }}>{error}</div>}\n              {success && <div style={{ color: \"green\" }}>{success}</div>}\n            </div>\n            {/* Só aparece se nunca foi planeada nem concluída */}\n            {!isPlanned && !isCompleted && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                startIcon={<DirectionsWalkIcon />}\n                onClick={handlePlanWalk}\n              >\n                Plan this walk\n              </Button>\n            )}\n            {/* Se estiver planeada, mas não concluída */}\n            {selectedMarker && isPlanned && !isCompleted && (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<DirectionsWalkIcon />}\n                onClick={handleCompleteWalk}\n              >\n                Mark as completed\n              </Button>\n            )}\n\n            {/* Se já estiver concluída */}\n            {selectedMarker && isCompleted && (\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                startIcon={<DirectionsWalkIcon />}\n                onClick={handlePlanWalk}\n              >\n                Plan to walk again\n              </Button>\n            )}\n          </DialogActions>\n          </Dialog>\n          {/* Seção Top Walkways */}\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: theme.spacing(10), textAlign: 'left' }}>\n            Top Walkways Users Liked\n          </Typography>\n\n          <TopWalkwaysContainer style={{ justifyContent: 'flex-start' }}>\n            {topWalkways.map((walkway, index) => (\n              <WalkwayBox\n                key={walkway.id}\n                onClick={() => handleTopWalkwayClick(walkway.id)}\n                style={{ width: '300px', height: '180px' }} // Define o tamanho fixo das caixas\n              >\n                <img \n                  src={imageMap[walkway.id] || 'default_image.jpg'} \n                  alt={walkway.name} \n                  style={{ width: '100%', height: '120px', objectFit: 'cover', borderRadius: '4px' }}\n                />\n                <Typography variant=\"subtitle1\" style={{ fontWeight: 'bold', marginTop: theme.spacing(1), color: '#333' }}>\n                  {walkway.name}\n                </Typography>\n                <Typography variant=\"body2\" style={{ color: '#666' }}>\n                  Distance: {walkway.specifics.distance} | Difficulty: {walkway.specifics.difficulty}\n                </Typography>\n              </WalkwayBox>\n            ))}\n          </TopWalkwaysContainer>\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: theme.spacing(10), textAlign: 'left' }}>\n            Walkways that may interest you\n          </Typography>\n          <RecommendedWalkwaysContainer style={{ justifyContent: 'flex-start' }}>\n            {Array.isArray(recommendedWalkways) && recommendedWalkways.length > 0 ? (\n              recommendedWalkways.map((walkway, index) => (\n                <WalkwayBox\n                  key={walkway.id}\n                  onClick={() => handleTopWalkwayClick(walkway.id)}\n                  style={{ width: '300px', height: '180px' }} // Fixed box size\n                >\n                  <img \n                    src={imageMap[walkway.id] || 'default_image.jpg'} \n                    alt={walkway.name} \n                    style={{ width: '100%', height: '120px', objectFit: 'cover', borderRadius: '4px' }}\n                  />\n                  <Typography variant=\"subtitle1\" style={{ fontWeight: 'bold', marginTop: theme.spacing(1), color: '#333' }}>\n                    {walkway.name}\n                  </Typography>\n                  <Typography variant=\"body2\" style={{ color: '#666' }}>\n                    Distance: {walkway.specifics.distance} | Difficulty: {walkway.specifics.difficulty}\n                  </Typography>\n                </WalkwayBox>\n              ))\n            ) : (\n              <Typography variant=\"body2\" style={{ color: '#666', padding: theme.spacing(2) }}>\n                No recommended walkways available.\n              </Typography>\n            )}\n          </RecommendedWalkwaysContainer>\n\n\n          <LogoutButton variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Logout</LogoutButton>\n        </APIProvider>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default WalkerBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}