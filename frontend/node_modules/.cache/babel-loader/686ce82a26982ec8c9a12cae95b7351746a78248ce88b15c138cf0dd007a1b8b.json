{"ast":null,"code":"var _jsxFileName = \"/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/CityCouncilBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport { Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton, Button, Container, CssBaseline, Typography, Paper, ThemeProvider, TextField, FormControl, FormLabel } from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\nimport theme from './Theme/theme';\nimport logo from './Theme/images/baselogo.jpg';\nimport walkway0 from './Theme/images/walkway_0.jpg';\nimport walkway1 from './Theme/images/walkway_1.jpg';\nimport walkway2 from './Theme/images/walkway_2.jpg';\nimport walkway3 from './Theme/images/walkway_3.jpg';\nimport walkway4 from './Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled(Container)(({\n  theme\n}) => ({\n  ...theme.root,\n  zIndex: 9999\n}));\n_c = AppContainer;\nconst Logo = styled('img')(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: theme.spacing(2),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer'\n}));\n_c2 = Logo;\nconst MapContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '600px',\n  width: '100%',\n  marginTop: theme.spacing(4)\n}));\n_c3 = MapContainer;\nconst NewWalkwayContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '600px',\n  width: '100%'\n}));\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20\n});\n_c4 = LogoutButton;\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20\n});\n_c5 = MoreMenuButton;\nconst CityCouncilBoard = ({\n  onLogout\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false);\n  const [geoJsonInputType, setGeoJsonInputType] = useState('text');\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    description: '',\n    coordinates: {\n      latitude: 0,\n      longitude: 0\n    },\n    district: '',\n    geojson: '',\n    primaryImage: '',\n    region: '',\n    specifics: {\n      difficulty: '',\n      distance: '',\n      maxHeight: '',\n      minHeight: ''\n    },\n    trajectory: {\n      start: {\n        latitude: 0,\n        longitude: 0\n      },\n      end: {\n        latitude: 0,\n        longitude: 0\n      },\n      round: false\n    }\n  });\n  const [showFormDialog, setShowFormDialog] = useState(false);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4\n  };\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", {\n        withCredentials: true\n      });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {}\n  };\n  const handleClick = event => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/CityCouncilBoard');\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); // Reset map load state to force reload\n    setGeojsonData(null); // Clear GeoJSON data to ensure it reloads\n    setSelectedMarker(null); // Clear the selected marker\n  };\n  const handleMarkerClick = useCallback(marker => setSelectedMarker(marker), []);\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  const transformedMarkers = markers.filter(marker => marker.coordinates) // Filter out any marker without coordinates\n  .map(marker => {\n    var _marker$specifics, _marker$specifics2;\n    return {\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      name: marker.name || 'Unknown Name',\n      // Fallback for missing names\n      description: marker.description || 'No description available',\n      // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg',\n      // Fallback for missing image\n      distance: ((_marker$specifics = marker.specifics) === null || _marker$specifics === void 0 ? void 0 : _marker$specifics.distance) || 'Unknown Distance',\n      // Safe access for nested properties\n      difficulty: ((_marker$specifics2 = marker.specifics) === null || _marker$specifics2 === void 0 ? void 0 : _marker$specifics2.difficulty) || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      }\n    };\n  });\n  useEffect(() => {\n    if (selectedMarker) {\n      Axios.get(`http://localhost:8080/getGeojson`, {\n        params: {\n          walkwayId: selectedMarker.id\n        }\n      }).then(({\n        data: {\n          geojson\n        }\n      }) => {\n        geojson.features.forEach(feature => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = feature.geometry.coordinates;\n            feature.geometry.coordinates = [lat, lng];\n          } else if (feature.geometry.type === 'MultiLineString') {\n            feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n          }\n        });\n        setGeojsonData(geojson);\n      }).catch(error => console.error('Error fetching GeoJSON:', error));\n    }\n  }, [selectedMarker]);\n  const handleMapLoad = mapInstance => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n  useEffect(() => {\n    if (isMapLoaded && mapRef.current && geojsonData && !geoJsonLoaded) {\n      console.log(\"Map and GeoJSON data are ready.\");\n      try {\n        const dataLayer = new window.google.maps.Data();\n        dataLayer.setMap(mapRef.current);\n\n        // Clear previous GeoJSON data\n        dataLayer.forEach(feature => dataLayer.remove(feature));\n\n        // Ensure coordinates are valid numbers and in correct [lat, lng] format\n        const validateAndTransformGeoJson = geoJson => {\n          geoJson.features.forEach(feature => {\n            //console.log(\"Processing feature:\", feature); // Log the entire feature\n\n            if (feature.geometry.type === 'Point') {\n              let coordinates = feature.geometry.coordinates;\n              if (Array.isArray(coordinates) && coordinates.length === 2) {\n                let [lng, lat] = coordinates;\n                if (typeof lat === 'number' && typeof lng === 'number') {\n                  feature.geometry.coordinates = [lat, lng]; // Reverse to [lat, lng]\n                  //console.log(\"Transformed Point coordinates:\", feature.geometry.coordinates);\n                } else {\n                  //console.warn(\"Invalid coordinates in Point feature:\", coordinates);\n                  feature.geometry.coordinates = null; // Set to null if invalid\n                }\n              } else {\n                //console.warn(\"Invalid or missing Point coordinates:\", coordinates);\n                feature.geometry.coordinates = null; // Set to null if not in correct format\n              }\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(lineString => {\n                if (Array.isArray(lineString)) {\n                  return lineString.map(([lng, lat]) => {\n                    if (typeof lat === 'number' && typeof lng === 'number') {\n                      //console.log(\"Transforming MultiLineString coordinate:\", [lat, lng]);\n                      return [lat, lng]; // Reverse coordinates\n                    } else {\n                      console.warn(\"Invalid coordinates in MultiLineString feature:\", [lng, lat]);\n                      return null; // Return null if invalid\n                    }\n                  }).filter(Boolean); // Remove any invalid coordinate pairs\n                } else {\n                  console.warn(\"Invalid lineString in MultiLineString feature:\", lineString);\n                  return null; // Return null if not an array\n                }\n              }).filter(Boolean); // Remove any invalid lineStrings\n            }\n          });\n\n          // Filter out any features with invalid coordinates\n          geoJson.features = geoJson.features.filter(feature => feature.geometry.coordinates !== null);\n          return geoJson;\n        };\n        const validatedGeoJson = validateAndTransformGeoJson(typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData);\n\n        // Add validated GeoJSON data to the map\n        dataLayer.addGeoJson(validatedGeoJson);\n\n        // Set styles for GeoJSON features\n        dataLayer.setStyle(feature => {\n          const geometryType = feature.getGeometry().getType();\n          if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n            return {\n              strokeColor: 'blue',\n              strokeWeight: 3,\n              clickable: false\n            };\n          } else if (geometryType === 'Point') {\n            return {\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 6,\n                fillColor: 'red',\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: 'white'\n              }\n            };\n          }\n        });\n\n        // Fit the map bounds to the GeoJSON data\n        const bounds = new window.google.maps.LatLngBounds();\n        dataLayer.forEach(feature => {\n          const geometry = feature.getGeometry();\n          if (geometry.getType() === 'Point') {\n            bounds.extend(geometry.get());\n          } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n            geometry.getArray().forEach(bounds.extend);\n          }\n        });\n        if (!bounds.isEmpty()) {\n          mapRef.current.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error(\"Error adding GeoJSON to the map:\", error);\n      }\n    } else {\n      console.log(\"Map or GeoJSON data is not ready.\");\n    }\n  }, [isMapLoaded, geojsonData, geoJsonLoaded]);\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = difficultyLevel => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const keys = name.split('.');\n    setFormData(prev => {\n      if (keys.length > 1) {\n        return {\n          ...prev,\n          [keys[0]]: {\n            ...prev[keys[0]],\n            [keys[1]]: value\n          }\n        };\n      }\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  const handleAddWalkway = async e => {\n    e.preventDefault();\n    try {\n      await Axios.post(\"http://localhost:8080/addWalkway\", formData, {\n        withCredentials: true\n      });\n      setSuccess('Walkway added successfully!');\n      setFormData({\n        id: '',\n        name: '',\n        description: '',\n        coordinates: {\n          latitude: 0,\n          longitude: 0\n        },\n        district: '',\n        geojson: '',\n        primaryImage: '',\n        region: '',\n        specifics: {\n          difficulty: '',\n          distance: '',\n          maxHeight: '',\n          minHeight: ''\n        },\n        trajectory: {\n          start: {\n            latitude: 0,\n            longitude: 0\n          },\n          end: {\n            latitude: 0,\n            longitude: 0\n          },\n          round: false\n        }\n      });\n    } catch (error) {\n      setError('Failed to add walkway: ' + error.message);\n    }\n  };\n  const handleCreatedNewWalkway = async e => {};\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(APIProvider, {\n        apiKey: 'AIzaSyC8Sj12_rv73anPhi2oCeqsVVjUkfFJ4-U',\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          src: logo,\n          alt: \"logo\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {\n          \"aria-label\": \"more\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Profile');\n            },\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/MyWalkways');\n            },\n            children: \"My Walkways\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            defaultZoom: 10,\n            defaultCenter: {\n              lat: 41.5564,\n              lng: -8.16415\n            },\n            mapId: \"5f6b01e0c09b0450\",\n            mapTypeId: \"terrain\"\n            //onIdle={handleMapLoad}\n            ,\n            children: transformedMarkers.map(marker => /*#__PURE__*/_jsxDEV(AdvancedMarker, {\n              position: marker.position,\n              clickable: true,\n              onClick: () => handleMarkerClick(marker),\n              children: /*#__PURE__*/_jsxDEV(Pin, {\n                background: theme.palette.primary.secondary,\n                borderColor: theme.palette.primary.main,\n                glyphColor: theme.palette.primary.contrastText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)\n            }, marker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: selectedMarker !== null,\n          onClose: handleCloseDialog,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name, /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: handleCloseDialog,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabIndex,\n            onChange: handleTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Walkway\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id],\n                alt: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name,\n                style: {\n                  maxWidth: '100%',\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"District:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.district]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Difficulty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 62\n                }, this), \" \", difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), tabIndex === 1 && selectedMarker && /*#__PURE__*/_jsxDEV(Map, {\n              defaultZoom: 12,\n              defaultCenter: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.defaultCenter,\n              mapId: \"5f6b01e0c09b0450\",\n              onIdle: handleMapLoad,\n              style: {\n                height: '600px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), tabIndex === 2 && /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"List of services offered along the walkway can be added here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setShowFormDialog(true),\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Add New Walkway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: showFormDialog,\n          onClose: () => setShowFormDialog(false),\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"Add New Walkway\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleAddWalkway,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"ID\",\n                name: \"id\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Name\",\n                name: \"name\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Description\",\n                name: \"description\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Latitude\",\n                name: \"coordinates.latitude\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Longitude\",\n                name: \"coordinates.longitude\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"District\",\n                name: \"district\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                sx: {\n                  border: '1px solid rgba(0, 0, 0, 0.23)',\n                  borderRadius: 1,\n                  padding: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  sx: {\n                    marginBottom: '8px'\n                  },\n                  children: \"GeoJSON\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => setGeoJsonInputType(prev => prev === 'text' ? 'file' : 'text'),\n                  children: geoJsonInputType === 'text' ? 'Switch to File Input' : 'Switch to Text Input'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this), geoJsonInputType === 'text' ? /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  name: \"geojson\",\n                  label: \"Enter GeoJSON\",\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"file\",\n                  name: \"geojson\",\n                  accept: \".geojson,.json\",\n                  onChange: e => {\n                    const file = e.target.files[0];\n                    setFormData(prev => ({\n                      ...prev,\n                      geojson: file\n                    }));\n                  },\n                  style: {\n                    marginTop: '8px',\n                    marginBottom: '8px',\n                    display: 'block',\n                    width: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                sx: {\n                  border: '1px solid rgba(0, 0, 0, 0.23)',\n                  borderRadius: 1,\n                  padding: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  style: {\n                    marginBottom: '4px'\n                  },\n                  children: \"Walkway Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"file\",\n                  name: \"primaryImage\",\n                  accept: \"image/*\",\n                  onChange: e => {\n                    const file = e.target.files[0];\n                    setFormData(prev => ({\n                      ...prev,\n                      primaryImage: file\n                    }));\n                  },\n                  style: {\n                    width: '100%',\n                    display: 'block',\n                    padding: '8px',\n                    marginLeft: '260px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Region\",\n                name: \"region\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Difficulty\",\n                name: \"specifics.difficulty\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Distance\",\n                name: \"specifics.distance\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Max Height\",\n                name: \"specifics.maxHeight\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Min Height\",\n                name: \"specifics.minHeight\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Start Latitude\",\n                name: \"trajectory.start.latitude\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Start Longitude\",\n                name: \"trajectory.start.longitude\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"End Latitude\",\n                name: \"trajectory.end.latitude\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"End Longitude\",\n                name: \"trajectory.end.longitude\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleCreatedNewWalkway,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowFormDialog(false),\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleLogOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n_s(CityCouncilBoard, \"Jj8th7s8wrO/HsR2koDc4J268+8=\", false, function () {\n  return [useNavigate];\n});\n_c6 = CityCouncilBoard;\nexport default CityCouncilBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"MapContainer\");\n$RefreshReg$(_c4, \"LogoutButton\");\n$RefreshReg$(_c5, \"MoreMenuButton\");\n$RefreshReg$(_c6, \"CityCouncilBoard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Axios","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","IconButton","Button","Container","CssBaseline","Typography","Paper","ThemeProvider","TextField","FormControl","FormLabel","styled","CloseIcon","MoreVertIcon","FavoriteIcon","DirectionsWalkIcon","APIProvider","AdvancedMarker","Map","Pin","useNavigate","theme","logo","walkway0","walkway1","walkway2","walkway3","walkway4","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","root","zIndex","_c","Logo","position","top","spacing","left","width","height","cursor","_c2","MapContainer","marginTop","_c3","NewWalkwayContainer","LogoutButton","right","_c4","MoreMenuButton","_c5","CityCouncilBoard","onLogout","_s","error","setError","anchorEl","setAnchorEl","success","setSuccess","markers","setMarkers","selectedMarker","setSelectedMarker","difficulty","setDifficulty","tabIndex","setTabIndex","geojsonData","setGeojsonData","isMapLoaded","setIsMapLoaded","geoJsonLoaded","setGeoJsonLoaded","geoJsonInputType","setGeoJsonInputType","formData","setFormData","id","name","description","coordinates","latitude","longitude","district","geojson","primaryImage","region","specifics","distance","maxHeight","minHeight","trajectory","start","end","round","showFormDialog","setShowFormDialog","mapRef","navigate","imageMap","handleTabChange","_","newValue","handleLogOut","get","withCredentials","console","log","handleClick","event","currentTarget","handleClose","handleLogoClick","handleCloseDialog","handleMarkerClick","marker","fetchMarkers","response","data","message","transformedMarkers","filter","map","_marker$specifics","_marker$specifics2","lat","lng","image","defaultCenter","params","walkwayId","then","features","forEach","feature","geometry","type","line","catch","handleMapLoad","mapInstance","googleMap","current","dataLayer","window","google","maps","Data","setMap","remove","validateAndTransformGeoJson","geoJson","Array","isArray","length","lineString","warn","Boolean","validatedGeoJson","JSON","parse","addGeoJson","setStyle","geometryType","getGeometry","getType","strokeColor","strokeWeight","clickable","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","bounds","LatLngBounds","extend","getArray","isEmpty","fitBounds","calculateDifficulty","difficultyLevel","handleFormChange","value","target","keys","split","prev","handleAddWalkway","e","preventDefault","post","handleCreatedNewWalkway","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","src","alt","onClick","keepMounted","open","onClose","defaultZoom","mapId","mapTypeId","background","palette","primary","secondary","borderColor","main","glyphColor","contrastText","fullWidth","onChange","label","dividers","style","maxWidth","marginBottom","gutterBottom","color","onIdle","variant","onSubmit","required","margin","sx","border","borderRadius","padding","size","accept","file","files","display","marginLeft","_c6","$RefreshReg$"],"sources":["/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/CityCouncilBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton,\n  Button, Container, CssBaseline, Typography, Paper, ThemeProvider, TextField, FormControl, FormLabel\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\n\nimport theme from './Theme/theme';\nimport logo from './Theme/images/baselogo.jpg';\nimport walkway0 from './Theme/images/walkway_0.jpg';\nimport walkway1 from './Theme/images/walkway_1.jpg';\nimport walkway2 from './Theme/images/walkway_2.jpg';\nimport walkway3 from './Theme/images/walkway_3.jpg';\nimport walkway4 from './Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nconst AppContainer = styled(Container)(({ theme }) => ({\n  ...theme.root,\n  zIndex: 9999,\n}));\n\nconst Logo = styled('img')(({ theme }) => ({\n  position: 'absolute',\n  top: theme.spacing(2),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer',\n}));\n\nconst MapContainer = styled(Paper)(({ theme }) => ({\n  height: '600px',\n  width: '100%',\n  marginTop: theme.spacing(4),\n}));\n\nconst NewWalkwayContainer = styled(Paper)(({ theme }) => ({\n  height: '600px',\n  width: '100%',\n}));\n\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20,\n});\n\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20,\n});\n\nconst CityCouncilBoard = ({ onLogout }) => {\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null)\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false); \n  const [geoJsonInputType, setGeoJsonInputType] = useState('text');\n\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    description: '',\n    coordinates: { latitude: 0, longitude: 0 },\n    district: '',\n    geojson: '',\n    primaryImage: '',\n    region: '',\n    specifics: { difficulty: '', distance: '', maxHeight: '', minHeight: '' },\n    trajectory: { start: { latitude: 0, longitude: 0 }, end: { latitude: 0, longitude: 0 }, round: false }\n  });\n  const [showFormDialog, setShowFormDialog] = useState(false);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4,\n  };\n\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", { withCredentials: true });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {\n    }\n  };\n\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/CityCouncilBoard');\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); // Reset map load state to force reload\n    setGeojsonData(null);   // Clear GeoJSON data to ensure it reloads\n    setSelectedMarker(null); // Clear the selected marker\n  };\n  const handleMarkerClick = useCallback((marker) => setSelectedMarker(marker), []);\n\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n\n  const transformedMarkers = markers\n    .filter(marker => marker.coordinates) // Filter out any marker without coordinates\n    .map(marker => ({\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude,\n      },\n      name: marker.name || 'Unknown Name', // Fallback for missing names\n      description: marker.description || 'No description available', // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg', // Fallback for missing image\n      distance: marker.specifics?.distance || 'Unknown Distance', // Safe access for nested properties\n      difficulty: marker.specifics?.difficulty || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: { lat: marker.coordinates.latitude, lng: marker.coordinates.longitude },\n  }));\n\n  useEffect(() => {\n    if (selectedMarker) {\n      Axios.get(`http://localhost:8080/getGeojson`, { params: { walkwayId: selectedMarker.id } })\n        .then(({ data: { geojson } }) => {\n          geojson.features.forEach((feature) => {\n            if (feature.geometry.type === 'Point') {\n              const [lng, lat] = feature.geometry.coordinates;\n              feature.geometry.coordinates = [lat, lng];\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(line =>\n                line.map(([lng, lat]) => [lat, lng])\n              );\n            }\n          });\n          setGeojsonData(geojson);\n        })\n        .catch((error) => console.error('Error fetching GeoJSON:', error));\n    }\n  }, [selectedMarker]);\n\n  const handleMapLoad = (mapInstance) => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n\n  useEffect(() => {\n    if (isMapLoaded && mapRef.current && geojsonData && !geoJsonLoaded) {\n      console.log(\"Map and GeoJSON data are ready.\");\n  \n      try {\n        const dataLayer = new window.google.maps.Data();\n        dataLayer.setMap(mapRef.current);\n  \n        // Clear previous GeoJSON data\n        dataLayer.forEach((feature) => dataLayer.remove(feature));\n  \n        // Ensure coordinates are valid numbers and in correct [lat, lng] format\n        const validateAndTransformGeoJson = (geoJson) => {\n          geoJson.features.forEach((feature) => {\n            //console.log(\"Processing feature:\", feature); // Log the entire feature\n        \n            if (feature.geometry.type === 'Point') {\n              let coordinates = feature.geometry.coordinates;\n        \n              if (Array.isArray(coordinates) && coordinates.length === 2) {\n                let [lng, lat] = coordinates;\n                if (typeof lat === 'number' && typeof lng === 'number') {\n                  feature.geometry.coordinates = [lat, lng]; // Reverse to [lat, lng]\n                  //console.log(\"Transformed Point coordinates:\", feature.geometry.coordinates);\n                } else {\n                  //console.warn(\"Invalid coordinates in Point feature:\", coordinates);\n                  feature.geometry.coordinates = null; // Set to null if invalid\n                }\n              } else {\n                //console.warn(\"Invalid or missing Point coordinates:\", coordinates);\n                feature.geometry.coordinates = null; // Set to null if not in correct format\n              }\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map((lineString) => {\n                if (Array.isArray(lineString)) {\n                  return lineString\n                    .map(([lng, lat]) => {\n                      if (typeof lat === 'number' && typeof lng === 'number') {\n                        //console.log(\"Transforming MultiLineString coordinate:\", [lat, lng]);\n                        return [lat, lng]; // Reverse coordinates\n                      } else {\n                        console.warn(\"Invalid coordinates in MultiLineString feature:\", [lng, lat]);\n                        return null; // Return null if invalid\n                      }\n                    })\n                    .filter(Boolean); // Remove any invalid coordinate pairs\n                } else {\n                  console.warn(\"Invalid lineString in MultiLineString feature:\", lineString);\n                  return null; // Return null if not an array\n                }\n              }).filter(Boolean); // Remove any invalid lineStrings\n            }\n          });\n        \n          // Filter out any features with invalid coordinates\n          geoJson.features = geoJson.features.filter((feature) => feature.geometry.coordinates !== null);\n          return geoJson;\n        };\n        \n        \n        \n  \n        const validatedGeoJson = validateAndTransformGeoJson(\n          typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData\n        );\n  \n        // Add validated GeoJSON data to the map\n        dataLayer.addGeoJson(validatedGeoJson);\n  \n        // Set styles for GeoJSON features\n        dataLayer.setStyle((feature) => {\n          const geometryType = feature.getGeometry().getType();\n          if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n            return { strokeColor: 'blue', strokeWeight: 3, clickable: false };\n          } else if (geometryType === 'Point') {\n            return {\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 6,\n                fillColor: 'red',\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: 'white',\n              },\n            };\n          }\n        });\n  \n        // Fit the map bounds to the GeoJSON data\n        const bounds = new window.google.maps.LatLngBounds();\n        dataLayer.forEach((feature) => {\n          const geometry = feature.getGeometry();\n          if (geometry.getType() === 'Point') {\n            bounds.extend(geometry.get());\n          } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n            geometry.getArray().forEach(bounds.extend);\n          }\n        });\n        if (!bounds.isEmpty()) {\n          mapRef.current.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error(\"Error adding GeoJSON to the map:\", error);\n      }\n    } else {\n      console.log(\"Map or GeoJSON data is not ready.\");\n    }\n  }, [isMapLoaded, geojsonData, geoJsonLoaded]);\n  \n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = (difficultyLevel) => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n  \n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n\n  const handleFormChange = (event) => {\n    const { name, value } = event.target;\n    const keys = name.split('.');\n    setFormData((prev) => {\n      if (keys.length > 1) {\n        return {\n          ...prev,\n          [keys[0]]: {\n            ...prev[keys[0]],\n            [keys[1]]: value,\n          },\n        };\n      }\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n  const handleAddWalkway = async (e) => {\n    e.preventDefault();\n    try {\n      await Axios.post(\"http://localhost:8080/addWalkway\", formData, { withCredentials: true });\n      setSuccess('Walkway added successfully!');\n      setFormData({\n        id: '',\n        name: '',\n        description: '',\n        coordinates: { latitude: 0, longitude: 0 },\n        district: '',\n        geojson: '',\n        primaryImage: '',\n        region: '',\n        specifics: { difficulty: '', distance: '', maxHeight: '', minHeight: '' },\n        trajectory: { start: { latitude: 0, longitude: 0 }, end: { latitude: 0, longitude: 0 }, round: false }\n      });\n    } catch (error) {\n      setError('Failed to add walkway: ' + error.message);\n    }\n  };\n\n  const handleCreatedNewWalkway = async (e) => {\n    \n\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppContainer>\n        <APIProvider apiKey={'AIzaSyC8Sj12_rv73anPhi2oCeqsVVjUkfFJ4-U'}>\n          <Logo src={logo} alt=\"logo\" onClick={handleLogoClick} />\n          <MoreMenuButton aria-label=\"more\" onClick={handleClick}>\n            <MoreVertIcon />\n          </MoreMenuButton>\n          <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuItem onClick={() => { handleClose(); navigate('/Profile'); }}>Profile</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/MyWalkways'); }}>My Walkways</MenuItem>\n          </Menu>\n          <MapContainer>\n            <Map\n              defaultZoom={10}\n              defaultCenter={{ lat: 41.5564, lng: -8.16415 }}\n              mapId='5f6b01e0c09b0450'\n              mapTypeId=\"terrain\"\n              //onIdle={handleMapLoad}\n            >\n              {transformedMarkers.map((marker) => (\n                <AdvancedMarker\n                  key={marker.id}\n                  position={marker.position}\n                  clickable={true}\n                  onClick={() => handleMarkerClick(marker)}\n                >\n                  <Pin background={theme.palette.primary.secondary} borderColor={theme.palette.primary.main} glyphColor={theme.palette.primary.contrastText} />\n                </AdvancedMarker>\n              ))}\n            </Map>\n          </MapContainer>\n          <Dialog open={selectedMarker !== null} onClose={handleCloseDialog} fullWidth>\n            <DialogTitle>\n              {selectedMarker?.name}\n              <IconButton aria-label=\"close\" onClick={handleCloseDialog}><CloseIcon /></IconButton>\n            </DialogTitle>\n            <Tabs value={tabIndex} onChange={handleTabChange}>\n              <Tab label=\"Overview\" />\n              <Tab label=\"Walkway\" />\n              <Tab label=\"Services\" />\n            </Tabs>\n            <DialogContent dividers>\n              {tabIndex === 0 && (\n                <>\n                  <img src={imageMap[selectedMarker?.id]} alt={selectedMarker?.name} style={{ maxWidth: '100%', marginBottom: '20px' }} />\n                  <Typography gutterBottom color=\"primary\"><strong>District:</strong> {selectedMarker?.district}</Typography>\n                  <Typography gutterBottom color=\"primary\"><strong>Region:</strong> {selectedMarker?.region}</Typography>\n                  <Typography gutterBottom color=\"secondary\"><strong>Difficulty:</strong> {difficulty}</Typography>\n                  <Typography gutterBottom><strong>Description:</strong> {selectedMarker?.description}</Typography>\n                </>\n              )}\n              {tabIndex === 1 && selectedMarker && (\n                <Map\n                  defaultZoom={12}\n                  defaultCenter={selectedMarker?.defaultCenter}\n                  mapId=\"5f6b01e0c09b0450\"\n                  onIdle={handleMapLoad}\n                  style={{ height: '600px', width: '100%' }}\n                  \n                />\n              )}\n              {tabIndex === 2 && <Typography>List of services offered along the walkway can be added here.</Typography>}\n            </DialogContent>\n          </Dialog>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setShowFormDialog(true)} style={{ marginTop: '20px' }}>\n             Add New Walkway\n          </Button>\n\n          <Dialog open={showFormDialog} onClose={() => setShowFormDialog(false)} fullWidth>\n            <DialogTitle>Add New Walkway</DialogTitle>\n            <DialogContent>\n              <form onSubmit={handleAddWalkway}>\n                <TextField\n                  required\n                  label=\"ID\"\n                  name=\"id\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Name\"\n                  name=\"name\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Description\"\n                  name=\"description\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Latitude\"\n                  name=\"coordinates.latitude\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Longitude\"\n                  name=\"coordinates.longitude\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"District\"\n                  name=\"district\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <FormControl fullWidth margin=\"normal\" variant=\"outlined\" sx={{ border: '1px solid rgba(0, 0, 0, 0.23)', borderRadius: 1, padding: '8px' }}>\n                  <FormLabel sx={{ marginBottom: '8px' }}>GeoJSON</FormLabel>\n                  <Button variant=\"outlined\" size=\"small\" onClick={() => setGeoJsonInputType(prev => (prev === 'text' ? 'file' : 'text'))}>\n                    {geoJsonInputType === 'text' ? 'Switch to File Input' : 'Switch to Text Input'}\n                  </Button>\n                  {geoJsonInputType === 'text' ? (\n                    <TextField\n                      required\n                      name=\"geojson\"\n                      label=\"Enter GeoJSON\"\n                      onChange={handleFormChange}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  ) : (\n                    <input\n                      required\n                      type=\"file\"\n                      name=\"geojson\"\n                      accept=\".geojson,.json\"\n                      onChange={(e) => {\n                        const file = e.target.files[0];\n                        setFormData((prev) => ({ ...prev, geojson: file }));\n                      }}\n                      style={{ marginTop: '8px', marginBottom: '8px', display: 'block', width: '100%' }}\n                    />\n                  )}\n                </FormControl>\n\n                <FormControl fullWidth margin=\"normal\" variant=\"outlined\" sx={{ border: '1px solid rgba(0, 0, 0, 0.23)', borderRadius: 1, padding: '8px' }}>\n                  <FormLabel style={{ marginBottom: '4px' }}>Walkway Image</FormLabel>\n                  <input\n                    required\n                    type=\"file\"\n                    name=\"primaryImage\"\n                    accept=\"image/*\"\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      setFormData((prev) => ({ ...prev, primaryImage: file }));\n                    }}\n                    style={{ width: '100%', display: 'block', padding: '8px', marginLeft: '260px' }}\n                  />\n                </FormControl>\n                <TextField\n                  required\n                  label=\"Region\"\n                  name=\"region\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Difficulty\"\n                  name=\"specifics.difficulty\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Distance\"\n                  name=\"specifics.distance\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Max Height\"\n                  name=\"specifics.maxHeight\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Min Height\"\n                  name=\"specifics.minHeight\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Start Latitude\"\n                  name=\"trajectory.start.latitude\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"Start Longitude\"\n                  name=\"trajectory.start.longitude\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"End Latitude\"\n                  name=\"trajectory.end.latitude\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  required\n                  label=\"End Longitude\"\n                  name=\"trajectory.end.longitude\"\n                  type=\"number\"\n                  onChange={handleFormChange}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleCreatedNewWalkway}>\n                  Submit\n                </Button>\n              </form>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setShowFormDialog(false)} color=\"secondary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <LogoutButton variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Logout</LogoutButton>\n        </APIProvider>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default CityCouncilBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EACxFC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,aAAa,EAAEC,SAAS,EAAEC,WAAW,EAAEC,SAAS,QAC9F,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,SAASC,WAAW,EAAEC,cAAc,EAAEC,GAAG,EAAEC,GAAG,QAAQ,2BAA2B;AACjF,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAGrB,MAAM,CAACR,SAAS,CAAC,CAAC,CAAC;EAAEkB;AAAM,CAAC,MAAM;EACrD,GAAGA,KAAK,CAACY,IAAI;EACbC,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AAACC,EAAA,GAHEH,YAAY;AAKlB,MAAMI,IAAI,GAAGzB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;EAAEU;AAAM,CAAC,MAAM;EACzCgB,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAEjB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC;EACrBC,IAAI,EAAEnB,KAAK,CAACkB,OAAO,CAAC,EAAE,CAAC;EACvBE,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AAACC,GAAA,GAPER,IAAI;AASV,MAAMS,YAAY,GAAGlC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC;EAAEe;AAAM,CAAC,MAAM;EACjDqB,MAAM,EAAE,OAAO;EACfD,KAAK,EAAE,MAAM;EACbK,SAAS,EAAEzB,KAAK,CAACkB,OAAO,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAACQ,GAAA,GAJEF,YAAY;AAMlB,MAAMG,mBAAmB,GAAGrC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC;EAAEe;AAAM,CAAC,MAAM;EACxDqB,MAAM,EAAE,OAAO;EACfD,KAAK,EAAE;AACT,CAAC,CAAC,CAAC;AAEH,MAAMQ,YAAY,GAAGtC,MAAM,CAACT,MAAM,CAAC,CAAC;EAClCmC,QAAQ,EAAE,UAAU;EACpBa,KAAK,EAAE,GAAG;EACVZ,GAAG,EAAE;AACP,CAAC,CAAC;AAACa,GAAA,GAJGF,YAAY;AAMlB,MAAMG,cAAc,GAAGzC,MAAM,CAACV,UAAU,CAAC,CAAC;EACxCoC,QAAQ,EAAE,UAAU;EACpBa,KAAK,EAAE,EAAE;EACTZ,GAAG,EAAE;AACP,CAAC,CAAC;AAACe,GAAA,GAJGD,cAAc;AAMpB,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsE,QAAQ,EAAEC,WAAW,CAAC,GAAGvE,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACwE,OAAO,EAAEC,UAAU,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0E,OAAO,EAAEC,UAAU,CAAC,GAAG3E,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4E,cAAc,EAAEC,iBAAiB,CAAC,GAAG7E,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC8E,UAAU,EAAEC,aAAa,CAAC,GAAG/E,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACgF,QAAQ,EAAEC,WAAW,CAAC,GAAGjF,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACkF,WAAW,EAAEC,cAAc,CAAC,GAAGnF,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoF,WAAW,EAAEC,cAAc,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsF,aAAa,EAAEC,gBAAgB,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACwF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzF,QAAQ,CAAC,MAAM,CAAC;EAEhE,MAAM,CAAC0F,QAAQ,EAAEC,WAAW,CAAC,GAAG3F,QAAQ,CAAC;IACvC4F,EAAE,EAAE,EAAE;IACNC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAE,CAAC;IAC1CC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE;MAAExB,UAAU,EAAE,EAAE;MAAEyB,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAC;IACzEC,UAAU,EAAE;MAAEC,KAAK,EAAE;QAAEX,QAAQ,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAE,CAAC;MAAEW,GAAG,EAAE;QAAEZ,QAAQ,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAE,CAAC;MAAEY,KAAK,EAAE;IAAM;EACvG,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG/G,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMgH,MAAM,GAAG/G,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMgH,QAAQ,GAAGlF,WAAW,CAAC,CAAC;EAE9B,MAAMmF,QAAQ,GAAG;IACf,CAAC,EAAEhF,QAAQ;IACX,CAAC,EAAEC,QAAQ;IACX,CAAC,EAAEC,QAAQ;IACX,CAAC,EAAEC,QAAQ;IACX,CAAC,EAAEC;EACL,CAAC;EAED,MAAM6E,eAAe,GAAGA,CAACC,CAAC,EAAEC,QAAQ,KAAKpC,WAAW,CAACoC,QAAQ,CAAC;EAE9D,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BjD,QAAQ,CAAC,IAAI,CAAC;IACdI,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMtE,KAAK,CAACoH,GAAG,CAAC,8BAA8B,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MAC1EC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCxD,QAAQ,IAAIA,QAAQ,CAAC,CAAC;MACtBO,UAAU,CAAC,qBAAqB,CAAC;MACjCwC,QAAQ,CAAC,MAAM,CAAC;IAClB,CAAC,CAAC,OAAO7C,KAAK,EAAE,CAChB;EACF,CAAC;EAED,MAAMuD,WAAW,GAAIC,KAAK,IAAKrD,WAAW,CAACqD,KAAK,CAACC,aAAa,CAAC;EAC/D,MAAMC,WAAW,GAAGA,CAAA,KAAMvD,WAAW,CAAC,IAAI,CAAC;EAC3C,MAAMwD,eAAe,GAAGA,CAAA,KAAMd,QAAQ,CAAC,mBAAmB,CAAC;EAC3D,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9B3C,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACvBF,cAAc,CAAC,IAAI,CAAC,CAAC,CAAG;IACxBN,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EACD,MAAMoD,iBAAiB,GAAG/H,WAAW,CAAEgI,MAAM,IAAKrD,iBAAiB,CAACqD,MAAM,CAAC,EAAE,EAAE,CAAC;EAEhFnI,SAAS,CAAC,MAAM;IACd,MAAMoI,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjI,KAAK,CAACoH,GAAG,CAAC,+BAA+B,CAAC;QACjE5C,UAAU,CAACyD,QAAQ,CAACC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOjE,KAAK,EAAE;QACdC,QAAQ,CAAC,2BAA2B,GAAGD,KAAK,CAACkE,OAAO,CAAC;MACvD;IACF,CAAC;IACDH,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAG7D,OAAO,CAC/B8D,MAAM,CAACN,MAAM,IAAIA,MAAM,CAACnC,WAAW,CAAC,CAAC;EAAA,CACrC0C,GAAG,CAACP,MAAM;IAAA,IAAAQ,iBAAA,EAAAC,kBAAA;IAAA,OAAK;MACd,GAAGT,MAAM;MACTlF,QAAQ,EAAE;QACR4F,GAAG,EAAEV,MAAM,CAACnC,WAAW,CAACC,QAAQ;QAChC6C,GAAG,EAAEX,MAAM,CAACnC,WAAW,CAACE;MAC1B,CAAC;MACDJ,IAAI,EAAEqC,MAAM,CAACrC,IAAI,IAAI,cAAc;MAAE;MACrCC,WAAW,EAAEoC,MAAM,CAACpC,WAAW,IAAI,0BAA0B;MAAE;MAC/DgD,KAAK,EAAEZ,MAAM,CAAC9B,YAAY,IAAI,mBAAmB;MAAE;MACnDG,QAAQ,EAAE,EAAAmC,iBAAA,GAAAR,MAAM,CAAC5B,SAAS,cAAAoC,iBAAA,uBAAhBA,iBAAA,CAAkBnC,QAAQ,KAAI,kBAAkB;MAAE;MAC5DzB,UAAU,EAAE,EAAA6D,kBAAA,GAAAT,MAAM,CAAC5B,SAAS,cAAAqC,kBAAA,uBAAhBA,kBAAA,CAAkB7D,UAAU,KAAI,oBAAoB;MAChEuB,MAAM,EAAE6B,MAAM,CAAC7B,MAAM,IAAI,gBAAgB;MACzCH,QAAQ,EAAEgC,MAAM,CAAChC,QAAQ,IAAI,kBAAkB;MAC/C6C,aAAa,EAAE;QAAEH,GAAG,EAAEV,MAAM,CAACnC,WAAW,CAACC,QAAQ;QAAE6C,GAAG,EAAEX,MAAM,CAACnC,WAAW,CAACE;MAAU;IACzF,CAAC;EAAA,CAAC,CAAC;EAEHlG,SAAS,CAAC,MAAM;IACd,IAAI6E,cAAc,EAAE;MAClBzE,KAAK,CAACoH,GAAG,CAAC,kCAAkC,EAAE;QAAEyB,MAAM,EAAE;UAAEC,SAAS,EAAErE,cAAc,CAACgB;QAAG;MAAE,CAAC,CAAC,CACxFsD,IAAI,CAAC,CAAC;QAAEb,IAAI,EAAE;UAAElC;QAAQ;MAAE,CAAC,KAAK;QAC/BA,OAAO,CAACgD,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAK;UACpC,IAAIA,OAAO,CAACC,QAAQ,CAACC,IAAI,KAAK,OAAO,EAAE;YACrC,MAAM,CAACV,GAAG,EAAED,GAAG,CAAC,GAAGS,OAAO,CAACC,QAAQ,CAACvD,WAAW;YAC/CsD,OAAO,CAACC,QAAQ,CAACvD,WAAW,GAAG,CAAC6C,GAAG,EAAEC,GAAG,CAAC;UAC3C,CAAC,MAAM,IAAIQ,OAAO,CAACC,QAAQ,CAACC,IAAI,KAAK,iBAAiB,EAAE;YACtDF,OAAO,CAACC,QAAQ,CAACvD,WAAW,GAAGsD,OAAO,CAACC,QAAQ,CAACvD,WAAW,CAAC0C,GAAG,CAACe,IAAI,IAClEA,IAAI,CAACf,GAAG,CAAC,CAAC,CAACI,GAAG,EAAED,GAAG,CAAC,KAAK,CAACA,GAAG,EAAEC,GAAG,CAAC,CACrC,CAAC;UACH;QACF,CAAC,CAAC;QACF1D,cAAc,CAACgB,OAAO,CAAC;MACzB,CAAC,CAAC,CACDsD,KAAK,CAAErF,KAAK,IAAKqD,OAAO,CAACrD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;IACtE;EACF,CAAC,EAAE,CAACQ,cAAc,CAAC,CAAC;EAEpB,MAAM8E,aAAa,GAAIC,WAAW,IAAK;IACrC,MAAMC,SAAS,GAAGD,WAAW,CAAClB,GAAG,IAAIkB,WAAW,CAACC,SAAS;IAC1DvE,cAAc,CAAC,IAAI,CAAC;IACpB2B,MAAM,CAAC6C,OAAO,GAAGD,SAAS;EAC5B,CAAC;EAED7J,SAAS,CAAC,MAAM;IACd,IAAIqF,WAAW,IAAI4B,MAAM,CAAC6C,OAAO,IAAI3E,WAAW,IAAI,CAACI,aAAa,EAAE;MAClEmC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAE9C,IAAI;QACF,MAAMoC,SAAS,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;QAC/CJ,SAAS,CAACK,MAAM,CAACnD,MAAM,CAAC6C,OAAO,CAAC;;QAEhC;QACAC,SAAS,CAACV,OAAO,CAAEC,OAAO,IAAKS,SAAS,CAACM,MAAM,CAACf,OAAO,CAAC,CAAC;;QAEzD;QACA,MAAMgB,2BAA2B,GAAIC,OAAO,IAAK;UAC/CA,OAAO,CAACnB,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAK;YACpC;;YAEA,IAAIA,OAAO,CAACC,QAAQ,CAACC,IAAI,KAAK,OAAO,EAAE;cACrC,IAAIxD,WAAW,GAAGsD,OAAO,CAACC,QAAQ,CAACvD,WAAW;cAE9C,IAAIwE,KAAK,CAACC,OAAO,CAACzE,WAAW,CAAC,IAAIA,WAAW,CAAC0E,MAAM,KAAK,CAAC,EAAE;gBAC1D,IAAI,CAAC5B,GAAG,EAAED,GAAG,CAAC,GAAG7C,WAAW;gBAC5B,IAAI,OAAO6C,GAAG,KAAK,QAAQ,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;kBACtDQ,OAAO,CAACC,QAAQ,CAACvD,WAAW,GAAG,CAAC6C,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC;kBAC3C;gBACF,CAAC,MAAM;kBACL;kBACAQ,OAAO,CAACC,QAAQ,CAACvD,WAAW,GAAG,IAAI,CAAC,CAAC;gBACvC;cACF,CAAC,MAAM;gBACL;gBACAsD,OAAO,CAACC,QAAQ,CAACvD,WAAW,GAAG,IAAI,CAAC,CAAC;cACvC;YACF,CAAC,MAAM,IAAIsD,OAAO,CAACC,QAAQ,CAACC,IAAI,KAAK,iBAAiB,EAAE;cACtDF,OAAO,CAACC,QAAQ,CAACvD,WAAW,GAAGsD,OAAO,CAACC,QAAQ,CAACvD,WAAW,CAAC0C,GAAG,CAAEiC,UAAU,IAAK;gBAC9E,IAAIH,KAAK,CAACC,OAAO,CAACE,UAAU,CAAC,EAAE;kBAC7B,OAAOA,UAAU,CACdjC,GAAG,CAAC,CAAC,CAACI,GAAG,EAAED,GAAG,CAAC,KAAK;oBACnB,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;sBACtD;sBACA,OAAO,CAACD,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC;oBACrB,CAAC,MAAM;sBACLpB,OAAO,CAACkD,IAAI,CAAC,iDAAiD,EAAE,CAAC9B,GAAG,EAAED,GAAG,CAAC,CAAC;sBAC3E,OAAO,IAAI,CAAC,CAAC;oBACf;kBACF,CAAC,CAAC,CACDJ,MAAM,CAACoC,OAAO,CAAC,CAAC,CAAC;gBACtB,CAAC,MAAM;kBACLnD,OAAO,CAACkD,IAAI,CAAC,gDAAgD,EAAED,UAAU,CAAC;kBAC1E,OAAO,IAAI,CAAC,CAAC;gBACf;cACF,CAAC,CAAC,CAAClC,MAAM,CAACoC,OAAO,CAAC,CAAC,CAAC;YACtB;UACF,CAAC,CAAC;;UAEF;UACAN,OAAO,CAACnB,QAAQ,GAAGmB,OAAO,CAACnB,QAAQ,CAACX,MAAM,CAAEa,OAAO,IAAKA,OAAO,CAACC,QAAQ,CAACvD,WAAW,KAAK,IAAI,CAAC;UAC9F,OAAOuE,OAAO;QAChB,CAAC;QAKD,MAAMO,gBAAgB,GAAGR,2BAA2B,CAClD,OAAOnF,WAAW,KAAK,QAAQ,GAAG4F,IAAI,CAACC,KAAK,CAAC7F,WAAW,CAAC,GAAGA,WAC9D,CAAC;;QAED;QACA4E,SAAS,CAACkB,UAAU,CAACH,gBAAgB,CAAC;;QAEtC;QACAf,SAAS,CAACmB,QAAQ,CAAE5B,OAAO,IAAK;UAC9B,MAAM6B,YAAY,GAAG7B,OAAO,CAAC8B,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;UACpD,IAAIF,YAAY,KAAK,YAAY,IAAIA,YAAY,KAAK,iBAAiB,EAAE;YACvE,OAAO;cAAEG,WAAW,EAAE,MAAM;cAAEC,YAAY,EAAE,CAAC;cAAEC,SAAS,EAAE;YAAM,CAAC;UACnE,CAAC,MAAM,IAAIL,YAAY,KAAK,OAAO,EAAE;YACnC,OAAO;cACLM,IAAI,EAAE;gBACJC,IAAI,EAAE1B,MAAM,CAACC,MAAM,CAACC,IAAI,CAACyB,UAAU,CAACC,MAAM;gBAC1CC,KAAK,EAAE,CAAC;gBACRC,SAAS,EAAE,KAAK;gBAChBC,WAAW,EAAE,CAAC;gBACdR,YAAY,EAAE,CAAC;gBACfD,WAAW,EAAE;cACf;YACF,CAAC;UACH;QACF,CAAC,CAAC;;QAEF;QACA,MAAMU,MAAM,GAAG,IAAIhC,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC+B,YAAY,CAAC,CAAC;QACpDlC,SAAS,CAACV,OAAO,CAAEC,OAAO,IAAK;UAC7B,MAAMC,QAAQ,GAAGD,OAAO,CAAC8B,WAAW,CAAC,CAAC;UACtC,IAAI7B,QAAQ,CAAC8B,OAAO,CAAC,CAAC,KAAK,OAAO,EAAE;YAClCW,MAAM,CAACE,MAAM,CAAC3C,QAAQ,CAAC/B,GAAG,CAAC,CAAC,CAAC;UAC/B,CAAC,MAAM,IAAI+B,QAAQ,CAAC8B,OAAO,CAAC,CAAC,KAAK,YAAY,IAAI9B,QAAQ,CAAC8B,OAAO,CAAC,CAAC,KAAK,iBAAiB,EAAE;YAC1F9B,QAAQ,CAAC4C,QAAQ,CAAC,CAAC,CAAC9C,OAAO,CAAC2C,MAAM,CAACE,MAAM,CAAC;UAC5C;QACF,CAAC,CAAC;QACF,IAAI,CAACF,MAAM,CAACI,OAAO,CAAC,CAAC,EAAE;UACrBnF,MAAM,CAAC6C,OAAO,CAACuC,SAAS,CAACL,MAAM,CAAC;QAClC;MACF,CAAC,CAAC,OAAO3H,KAAK,EAAE;QACdqD,OAAO,CAACrD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC,MAAM;MACLqD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD;EACF,CAAC,EAAE,CAACtC,WAAW,EAAEF,WAAW,EAAEI,aAAa,CAAC,CAAC;EAE7CvF,SAAS,CAAC,MAAM;IACd,IAAI6E,cAAc,EAAE;MAClB;MACA,MAAMyH,mBAAmB,GAAIC,eAAe,IAAK;QAC/C,IAAIA,eAAe,KAAK,CAAC,EAAE;UACzB,OAAO,MAAM;QACf,CAAC,MAAM,IAAIA,eAAe,KAAK,CAAC,EAAE;UAChC,OAAO,QAAQ;QACjB,CAAC,MAAM,IAAIA,eAAe,KAAK,CAAC,EAAE;UAChC,OAAO,MAAM;QACf,CAAC,MAAM;UACL,OAAO,SAAS;QAClB;MACF,CAAC;MAEDvH,aAAa,CAACsH,mBAAmB,CAACzH,cAAc,CAACE,UAAU,CAAC,CAAC;IAC/D;EACF,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC;EAEpB,MAAM2H,gBAAgB,GAAI3E,KAAK,IAAK;IAClC,MAAM;MAAE/B,IAAI;MAAE2G;IAAM,CAAC,GAAG5E,KAAK,CAAC6E,MAAM;IACpC,MAAMC,IAAI,GAAG7G,IAAI,CAAC8G,KAAK,CAAC,GAAG,CAAC;IAC5BhH,WAAW,CAAEiH,IAAI,IAAK;MACpB,IAAIF,IAAI,CAACjC,MAAM,GAAG,CAAC,EAAE;QACnB,OAAO;UACL,GAAGmC,IAAI;UACP,CAACF,IAAI,CAAC,CAAC,CAAC,GAAG;YACT,GAAGE,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,CAACA,IAAI,CAAC,CAAC,CAAC,GAAGF;UACb;QACF,CAAC;MACH;MACA,OAAO;QACL,GAAGI,IAAI;QACP,CAAC/G,IAAI,GAAG2G;MACV,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EACD,MAAMK,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM5M,KAAK,CAAC6M,IAAI,CAAC,kCAAkC,EAAEtH,QAAQ,EAAE;QAAE8B,eAAe,EAAE;MAAK,CAAC,CAAC;MACzF/C,UAAU,CAAC,6BAA6B,CAAC;MACzCkB,WAAW,CAAC;QACVC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE;UAAEC,QAAQ,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAE,CAAC;QAC1CC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE,EAAE;QACXC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE;UAAExB,UAAU,EAAE,EAAE;UAAEyB,QAAQ,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAC;QACzEC,UAAU,EAAE;UAAEC,KAAK,EAAE;YAAEX,QAAQ,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAE,CAAC;UAAEW,GAAG,EAAE;YAAEZ,QAAQ,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAE,CAAC;UAAEY,KAAK,EAAE;QAAM;MACvG,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACdC,QAAQ,CAAC,yBAAyB,GAAGD,KAAK,CAACkE,OAAO,CAAC;IACrD;EACF,CAAC;EAED,MAAM2E,uBAAuB,GAAG,MAAOH,CAAC,IAAK,CAG7C,CAAC;EAED,oBACEtK,OAAA,CAACtB,aAAa;IAACc,KAAK,EAAEA,KAAM;IAAAkL,QAAA,gBAC1B1K,OAAA,CAACzB,WAAW;MAAAoM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf9K,OAAA,CAACG,YAAY;MAAAuK,QAAA,eACX1K,OAAA,CAACb,WAAW;QAAC4L,MAAM,EAAE,yCAA0C;QAAAL,QAAA,gBAC7D1K,OAAA,CAACO,IAAI;UAACyK,GAAG,EAAEvL,IAAK;UAACwL,GAAG,EAAC,MAAM;UAACC,OAAO,EAAE3F;QAAgB;UAAAoF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxD9K,OAAA,CAACuB,cAAc;UAAC,cAAW,MAAM;UAAC2J,OAAO,EAAE/F,WAAY;UAAAuF,QAAA,eACrD1K,OAAA,CAAChB,YAAY;YAAA2L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACjB9K,OAAA,CAACpC,IAAI;UAACkE,QAAQ,EAAEA,QAAS;UAACqJ,WAAW;UAACC,IAAI,EAAEhD,OAAO,CAACtG,QAAQ,CAAE;UAACuJ,OAAO,EAAE/F,WAAY;UAAAoF,QAAA,gBAClF1K,OAAA,CAACnC,QAAQ;YAACqN,OAAO,EAAEA,CAAA,KAAM;cAAE5F,WAAW,CAAC,CAAC;cAAEb,QAAQ,CAAC,UAAU,CAAC;YAAE,CAAE;YAAAiG,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACrF9K,OAAA,CAACnC,QAAQ;YAACqN,OAAO,EAAEA,CAAA,KAAM;cAAE5F,WAAW,CAAC,CAAC;cAAEb,QAAQ,CAAC,aAAa,CAAC;YAAE,CAAE;YAAAiG,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC,eACP9K,OAAA,CAACgB,YAAY;UAAA0J,QAAA,eACX1K,OAAA,CAACX,GAAG;YACFiM,WAAW,EAAE,EAAG;YAChB/E,aAAa,EAAE;cAAEH,GAAG,EAAE,OAAO;cAAEC,GAAG,EAAE,CAAC;YAAQ,CAAE;YAC/CkF,KAAK,EAAC,kBAAkB;YACxBC,SAAS,EAAC;YACV;YAAA;YAAAd,QAAA,EAEC3E,kBAAkB,CAACE,GAAG,CAAEP,MAAM,iBAC7B1F,OAAA,CAACZ,cAAc;cAEboB,QAAQ,EAAEkF,MAAM,CAAClF,QAAS;cAC1BuI,SAAS,EAAE,IAAK;cAChBmC,OAAO,EAAEA,CAAA,KAAMzF,iBAAiB,CAACC,MAAM,CAAE;cAAAgF,QAAA,eAEzC1K,OAAA,CAACV,GAAG;gBAACmM,UAAU,EAAEjM,KAAK,CAACkM,OAAO,CAACC,OAAO,CAACC,SAAU;gBAACC,WAAW,EAAErM,KAAK,CAACkM,OAAO,CAACC,OAAO,CAACG,IAAK;gBAACC,UAAU,EAAEvM,KAAK,CAACkM,OAAO,CAACC,OAAO,CAACK;cAAa;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GALxIpF,MAAM,CAACtC,EAAE;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMA,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACf9K,OAAA,CAAClC,MAAM;UAACsN,IAAI,EAAEhJ,cAAc,KAAK,IAAK;UAACiJ,OAAO,EAAE7F,iBAAkB;UAACyG,SAAS;UAAAvB,QAAA,gBAC1E1K,OAAA,CAACjC,WAAW;YAAA2M,QAAA,GACTtI,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEiB,IAAI,eACrBrD,OAAA,CAAC5B,UAAU;cAAC,cAAW,OAAO;cAAC8M,OAAO,EAAE1F,iBAAkB;cAAAkF,QAAA,eAAC1K,OAAA,CAACjB,SAAS;gBAAA4L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC,eACd9K,OAAA,CAAC9B,IAAI;YAAC8L,KAAK,EAAExH,QAAS;YAAC0J,QAAQ,EAAEvH,eAAgB;YAAA+F,QAAA,gBAC/C1K,OAAA,CAAC7B,GAAG;cAACgO,KAAK,EAAC;YAAU;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxB9K,OAAA,CAAC7B,GAAG;cAACgO,KAAK,EAAC;YAAS;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvB9K,OAAA,CAAC7B,GAAG;cAACgO,KAAK,EAAC;YAAU;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACP9K,OAAA,CAAChC,aAAa;YAACoO,QAAQ;YAAA1B,QAAA,GACpBlI,QAAQ,KAAK,CAAC,iBACbxC,OAAA,CAAAE,SAAA;cAAAwK,QAAA,gBACE1K,OAAA;gBAAKgL,GAAG,EAAEtG,QAAQ,CAACtC,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEgB,EAAE,CAAE;gBAAC6H,GAAG,EAAE7I,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEiB,IAAK;gBAACgJ,KAAK,EAAE;kBAAEC,QAAQ,EAAE,MAAM;kBAAEC,YAAY,EAAE;gBAAO;cAAE;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxH9K,OAAA,CAACxB,UAAU;gBAACgO,YAAY;gBAACC,KAAK,EAAC,SAAS;gBAAA/B,QAAA,gBAAC1K,OAAA;kBAAA0K,QAAA,EAAQ;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC1I,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEsB,QAAQ;cAAA;gBAAAiH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eAC3G9K,OAAA,CAACxB,UAAU;gBAACgO,YAAY;gBAACC,KAAK,EAAC,SAAS;gBAAA/B,QAAA,gBAAC1K,OAAA;kBAAA0K,QAAA,EAAQ;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC1I,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEyB,MAAM;cAAA;gBAAA8G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eACvG9K,OAAA,CAACxB,UAAU;gBAACgO,YAAY;gBAACC,KAAK,EAAC,WAAW;gBAAA/B,QAAA,gBAAC1K,OAAA;kBAAA0K,QAAA,EAAQ;gBAAW;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACxI,UAAU;cAAA;gBAAAqI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eACjG9K,OAAA,CAACxB,UAAU;gBAACgO,YAAY;gBAAA9B,QAAA,gBAAC1K,OAAA;kBAAA0K,QAAA,EAAQ;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC1I,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEkB,WAAW;cAAA;gBAAAqH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC;YAAA,eACjG,CACH,EACAtI,QAAQ,KAAK,CAAC,IAAIJ,cAAc,iBAC/BpC,OAAA,CAACX,GAAG;cACFiM,WAAW,EAAE,EAAG;cAChB/E,aAAa,EAAEnE,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEmE,aAAc;cAC7CgF,KAAK,EAAC,kBAAkB;cACxBmB,MAAM,EAAExF,aAAc;cACtBmF,KAAK,EAAE;gBAAExL,MAAM,EAAE,OAAO;gBAAED,KAAK,EAAE;cAAO;YAAE;cAAA+J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE3C,CACF,EACAtI,QAAQ,KAAK,CAAC,iBAAIxC,OAAA,CAACxB,UAAU;cAAAkM,QAAA,EAAC;YAA6D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACT9K,OAAA,CAAC3B,MAAM;UAACsO,OAAO,EAAC,WAAW;UAACF,KAAK,EAAC,SAAS;UAACvB,OAAO,EAAEA,CAAA,KAAM3G,iBAAiB,CAAC,IAAI,CAAE;UAAC8H,KAAK,EAAE;YAAEpL,SAAS,EAAE;UAAO,CAAE;UAAAyJ,QAAA,EAAC;QAElH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET9K,OAAA,CAAClC,MAAM;UAACsN,IAAI,EAAE9G,cAAe;UAAC+G,OAAO,EAAEA,CAAA,KAAM9G,iBAAiB,CAAC,KAAK,CAAE;UAAC0H,SAAS;UAAAvB,QAAA,gBAC9E1K,OAAA,CAACjC,WAAW;YAAA2M,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC1C9K,OAAA,CAAChC,aAAa;YAAA0M,QAAA,eACZ1K,OAAA;cAAM4M,QAAQ,EAAEvC,gBAAiB;cAAAK,QAAA,gBAC/B1K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,IAAI;gBACV9I,IAAI,EAAC,IAAI;gBACT6I,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,MAAM;gBACZ9I,IAAI,EAAC,MAAM;gBACX6I,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,aAAa;gBACnB9I,IAAI,EAAC,aAAa;gBAClB6I,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,UAAU;gBAChB9I,IAAI,EAAC,sBAAsB;gBAC3B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,WAAW;gBACjB9I,IAAI,EAAC,uBAAuB;gBAC5B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,UAAU;gBAChB9I,IAAI,EAAC,UAAU;gBACf6I,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACpB,WAAW;gBAACqN,SAAS;gBAACa,MAAM,EAAC,QAAQ;gBAACH,OAAO,EAAC,UAAU;gBAACI,EAAE,EAAE;kBAAEC,MAAM,EAAE,+BAA+B;kBAAEC,YAAY,EAAE,CAAC;kBAAEC,OAAO,EAAE;gBAAM,CAAE;gBAAAxC,QAAA,gBACzI1K,OAAA,CAACnB,SAAS;kBAACkO,EAAE,EAAE;oBAAER,YAAY,EAAE;kBAAM,CAAE;kBAAA7B,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eAC3D9K,OAAA,CAAC3B,MAAM;kBAACsO,OAAO,EAAC,UAAU;kBAACQ,IAAI,EAAC,OAAO;kBAACjC,OAAO,EAAEA,CAAA,KAAMjI,mBAAmB,CAACmH,IAAI,IAAKA,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,MAAO,CAAE;kBAAAM,QAAA,EACrH1H,gBAAgB,KAAK,MAAM,GAAG,sBAAsB,GAAG;gBAAsB;kBAAA2H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxE,CAAC,EACR9H,gBAAgB,KAAK,MAAM,gBAC1BhD,OAAA,CAACrB,SAAS;kBACRkO,QAAQ;kBACRxJ,IAAI,EAAC,SAAS;kBACd8I,KAAK,EAAC,eAAe;kBACrBD,QAAQ,EAAEnC,gBAAiB;kBAC3BkC,SAAS;kBACTa,MAAM,EAAC;gBAAQ;kBAAAnC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB,CAAC,gBAEF9K,OAAA;kBACE6M,QAAQ;kBACR9F,IAAI,EAAC,MAAM;kBACX1D,IAAI,EAAC,SAAS;kBACd+J,MAAM,EAAC,gBAAgB;kBACvBlB,QAAQ,EAAG5B,CAAC,IAAK;oBACf,MAAM+C,IAAI,GAAG/C,CAAC,CAACL,MAAM,CAACqD,KAAK,CAAC,CAAC,CAAC;oBAC9BnK,WAAW,CAAEiH,IAAI,KAAM;sBAAE,GAAGA,IAAI;sBAAEzG,OAAO,EAAE0J;oBAAK,CAAC,CAAC,CAAC;kBACrD,CAAE;kBACFhB,KAAK,EAAE;oBAAEpL,SAAS,EAAE,KAAK;oBAAEsL,YAAY,EAAE,KAAK;oBAAEgB,OAAO,EAAE,OAAO;oBAAE3M,KAAK,EAAE;kBAAO;gBAAE;kBAAA+J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnF,CACF;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACU,CAAC,eAEd9K,OAAA,CAACpB,WAAW;gBAACqN,SAAS;gBAACa,MAAM,EAAC,QAAQ;gBAACH,OAAO,EAAC,UAAU;gBAACI,EAAE,EAAE;kBAAEC,MAAM,EAAE,+BAA+B;kBAAEC,YAAY,EAAE,CAAC;kBAAEC,OAAO,EAAE;gBAAM,CAAE;gBAAAxC,QAAA,gBACzI1K,OAAA,CAACnB,SAAS;kBAACwN,KAAK,EAAE;oBAAEE,YAAY,EAAE;kBAAM,CAAE;kBAAA7B,QAAA,EAAC;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eACpE9K,OAAA;kBACE6M,QAAQ;kBACR9F,IAAI,EAAC,MAAM;kBACX1D,IAAI,EAAC,cAAc;kBACnB+J,MAAM,EAAC,SAAS;kBAChBlB,QAAQ,EAAG5B,CAAC,IAAK;oBACf,MAAM+C,IAAI,GAAG/C,CAAC,CAACL,MAAM,CAACqD,KAAK,CAAC,CAAC,CAAC;oBAC9BnK,WAAW,CAAEiH,IAAI,KAAM;sBAAE,GAAGA,IAAI;sBAAExG,YAAY,EAAEyJ;oBAAK,CAAC,CAAC,CAAC;kBAC1D,CAAE;kBACFhB,KAAK,EAAE;oBAAEzL,KAAK,EAAE,MAAM;oBAAE2M,OAAO,EAAE,OAAO;oBAAEL,OAAO,EAAE,KAAK;oBAAEM,UAAU,EAAE;kBAAQ;gBAAE;kBAAA7C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC,eACd9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,QAAQ;gBACd9I,IAAI,EAAC,QAAQ;gBACb6I,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,YAAY;gBAClB9I,IAAI,EAAC,sBAAsB;gBAC3B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,UAAU;gBAChB9I,IAAI,EAAC,oBAAoB;gBACzB0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,YAAY;gBAClB9I,IAAI,EAAC,qBAAqB;gBAC1B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,YAAY;gBAClB9I,IAAI,EAAC,qBAAqB;gBAC1B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,gBAAgB;gBACtB9I,IAAI,EAAC,2BAA2B;gBAChC0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,iBAAiB;gBACvB9I,IAAI,EAAC,4BAA4B;gBACjC0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,cAAc;gBACpB9I,IAAI,EAAC,yBAAyB;gBAC9B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAACrB,SAAS;gBACRkO,QAAQ;gBACRV,KAAK,EAAC,eAAe;gBACrB9I,IAAI,EAAC,0BAA0B;gBAC/B0D,IAAI,EAAC,QAAQ;gBACbmF,QAAQ,EAAEnC,gBAAiB;gBAC3BkC,SAAS;gBACTa,MAAM,EAAC;cAAQ;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,eACF9K,OAAA,CAAC3B,MAAM;gBAAC0I,IAAI,EAAC,QAAQ;gBAAC4F,OAAO,EAAC,WAAW;gBAACF,KAAK,EAAC,SAAS;gBAACvB,OAAO,EAAET,uBAAwB;gBAAAC,QAAA,EAAC;cAE5F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eAChB9K,OAAA,CAAC/B,aAAa;YAAAyM,QAAA,eACZ1K,OAAA,CAAC3B,MAAM;cAAC6M,OAAO,EAAEA,CAAA,KAAM3G,iBAAiB,CAAC,KAAK,CAAE;cAACkI,KAAK,EAAC,WAAW;cAAA/B,QAAA,EAAC;YAEnE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAET9K,OAAA,CAACoB,YAAY;UAACuL,OAAO,EAAC,WAAW;UAACF,KAAK,EAAC,WAAW;UAACvB,OAAO,EAAEpG,YAAa;UAAA4F,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC;AAACnJ,EAAA,CA5iBIF,gBAAgB;EAAA,QA2BHlC,WAAW;AAAA;AAAAkO,GAAA,GA3BxBhM,gBAAgB;AA8iBtB,eAAeA,gBAAgB;AAAC,IAAAnB,EAAA,EAAAS,GAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAiM,GAAA;AAAAC,YAAA,CAAApN,EAAA;AAAAoN,YAAA,CAAA3M,GAAA;AAAA2M,YAAA,CAAAxM,GAAA;AAAAwM,YAAA,CAAApM,GAAA;AAAAoM,YAAA,CAAAlM,GAAA;AAAAkM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}