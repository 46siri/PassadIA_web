{"ast":null,"code":"var _jsxFileName = \"/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/dashboards/CityCouncilBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport { Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton, Button, Container, CssBaseline, Typography, Paper, ThemeProvider, TextField, FormControl, FormLabel, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\nimport theme from '../Theme/theme';\nimport logo from '../Theme/images/baselogo.jpg';\nimport walkway0 from '../Theme/images/walkway_0.jpg';\nimport walkway1 from '../Theme/images/walkway_1.jpg';\nimport walkway2 from '../Theme/images/walkway_2.jpg';\nimport walkway3 from '../Theme/images/walkway_3.jpg';\nimport walkway4 from '../Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled(Container)(({\n  theme\n}) => ({\n  ...theme.root,\n  zIndex: 9999\n}));\n_c = AppContainer;\nconst Logo = styled('img')(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: theme.spacing(2),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer'\n}));\n_c2 = Logo;\nconst MapContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '500px',\n  width: '100%'\n}));\n_c3 = MapContainer;\nconst NewWalkwayContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '600px',\n  width: '100%'\n}));\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20\n});\n_c4 = LogoutButton;\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20\n});\n_c5 = MoreMenuButton;\nconst CityCouncilBoard = ({\n  onLogout\n}) => {\n  _s();\n  var _selectedMarker$coord, _selectedMarker$coord2;\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false);\n  const [geoJsonInputType, setGeoJsonInputType] = useState('text');\n  const [hasCenteredOnce, setHasCenteredOnce] = useState(false);\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    description: '',\n    coordinates: {\n      latitude: 0,\n      longitude: 0\n    },\n    district: '',\n    geojson: '',\n    primaryImage: '',\n    region: '',\n    specifics: {\n      difficulty: '',\n      distance: '',\n      maxHeight: '',\n      minHeight: ''\n    },\n    trajectory: {\n      start: {\n        latitude: 0,\n        longitude: 0\n      },\n      end: {\n        latitude: 0,\n        longitude: 0\n      },\n      round: false\n    }\n  });\n  const [showFormDialog, setShowFormDialog] = useState(false);\n  const navigate = useNavigate();\n  const mapRef = useRef(null);\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4\n  };\n  const dataLayerRef = useRef(null);\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", {\n        withCredentials: true\n      });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {\n      setError('Failed to log out: ' + error.message);\n    }\n  };\n  const handleClick = event => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/CityCouncilBoard');\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); // Reset map load state to force reload\n    setGeojsonData(null); // Clear GeoJSON data to ensure it reloads\n    setSelectedMarker(null); // Clear the selected marker\n  };\n  const handleMarkerClick = async marker => {\n    if ((marker === null || marker === void 0 ? void 0 : marker.id) === undefined && (marker === null || marker === void 0 ? void 0 : marker.walkwayId) === undefined) return;\n    setSelectedMarker(marker);\n  };\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  useEffect(() => {\n    if ((selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id) === undefined || (selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id) === null) return;\n    Axios.get(`http://localhost:8080/getGeojson`, {\n      params: {\n        walkwayId: selectedMarker.id\n      }\n    }).then(({\n      data: {\n        geojson\n      }\n    }) => {\n      geojson.features.forEach(feature => {\n        if (feature.geometry.type === 'Point') {\n          const [lng, lat] = feature.geometry.coordinates;\n          feature.geometry.coordinates = [lat, lng];\n        } else if (feature.geometry.type === 'MultiLineString') {\n          feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n        }\n      });\n      setGeojsonData(geojson);\n    }).catch(error => console.error('Error fetching GeoJSON:', error));\n  }, [selectedMarker]);\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const keys = name.split('.');\n    let newValue = value;\n    if (name.includes('latitude') || name.includes('longitude') || name.includes('distance')) {\n      newValue = value.replace(',', '.');\n    }\n    setFormData(prev => {\n      const updated = {\n        ...prev\n      };\n      let current = updated;\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i];\n        if (!current[key] || typeof current[key] !== 'object') {\n          current[key] = {};\n        }\n        current = current[key];\n      }\n      current[keys[keys.length - 1]] = newValue;\n      return updated;\n    });\n  };\n  const handleAddWalkway = async e => {\n    e.preventDefault();\n    console.log(\"Form data before submission:\", formData);\n    try {\n      const requiredFields = [formData.id, formData.name, formData.description, formData.district, formData.region, formData.trajectory.start.latitude, formData.trajectory.start.longitude, formData.trajectory.end.latitude, formData.trajectory.end.longitude, formData.specifics.difficulty, formData.specifics.distance, formData.geojson, formData.primaryImage];\n      console.log(\"Required fields:\", requiredFields);\n      if (requiredFields.some(field => field === '' || field === null || field === undefined)) {\n        setError('Please fill in all required fields.');\n        return;\n      }\n      const data = new FormData();\n      data.append(\"id\", formData.id);\n      data.append(\"name\", formData.name);\n      data.append(\"description\", formData.description);\n      data.append(\"district\", formData.district);\n      data.append(\"region\", formData.region);\n      data.append(\"coordinates[latitude]\", parseFloat(formData.trajectory.start.latitude));\n      data.append(\"coordinates[longitude]\", parseFloat(formData.trajectory.start.longitude));\n      data.append(\"specifics[difficulty]\", parseInt(formData.specifics.difficulty));\n      data.append(\"specifics[distance]\", parseFloat(formData.specifics.distance.toString().replace(',', '.')));\n      data.append(\"trajectory[start][latitude]\", parseFloat(formData.trajectory.start.latitude));\n      data.append(\"trajectory[start][longitude]\", parseFloat(formData.trajectory.start.longitude));\n      data.append(\"trajectory[end][latitude]\", parseFloat(formData.trajectory.end.latitude));\n      data.append(\"trajectory[end][longitude]\", parseFloat(formData.trajectory.end.longitude));\n      data.append(\"trajectory[round]\", formData.trajectory.round.toString());\n      if (formData.geojson instanceof File) {\n        data.append(\"geojson\", formData.geojson);\n      } else {\n        const blob = new Blob([formData.geojson], {\n          type: \"application/json\"\n        });\n        data.append(\"geojson\", blob, \"geojson.json\");\n      }\n      if (formData.primaryImage instanceof File) {\n        data.append(\"primaryImage\", formData.primaryImage);\n      } else {\n        setError(\"Primary image is not valid.\");\n        return;\n      }\n      await Axios.post(\"http://localhost:8080/addWalkway\", data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }, {\n        withCredentials: true\n      });\n      console.log(\"✔️ Passadiço adicionado com sucesso!\");\n      console.log(\"Associando passadiço à lista do utilizador...\");\n      await Axios.post(\"http://localhost:8080/addWalkwayToMyList\", {\n        walkwayId: formData.id\n      }, {\n        withCredentials: true\n      });\n      console.log(\"✔️ Associação concluída!\");\n      setSuccess('Walkway added and linked to your list successfully!');\n      setError(null);\n      setFormData({\n        id: '',\n        name: '',\n        description: '',\n        coordinates: {\n          latitude: 0,\n          longitude: 0\n        },\n        district: '',\n        geojson: '',\n        primaryImage: '',\n        region: '',\n        specifics: {\n          difficulty: '',\n          distance: ''\n        },\n        trajectory: {\n          start: {\n            latitude: 0,\n            longitude: 0\n          },\n          end: {\n            latitude: 0,\n            longitude: 0\n          },\n          round: false\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Failed to add walkway:', error);\n      setError('Failed to add walkway: ' + ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n      setSuccess(null);\n    }\n  };\n  useEffect(() => {\n    setFormData(prev => ({\n      ...prev,\n      coordinates: {\n        ...prev.trajectory.start\n      }\n    }));\n  }, [formData.trajectory.start]);\n  const transformedMarkers = markers.filter(marker => typeof marker.id === 'number' && marker.coordinates).map(marker => {\n    var _marker$specifics, _marker$specifics2;\n    return {\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      name: marker.name || 'Unknown Name',\n      description: marker.description || 'No description available',\n      image: marker.primaryImage || 'default_image.jpg',\n      distance: ((_marker$specifics = marker.specifics) === null || _marker$specifics === void 0 ? void 0 : _marker$specifics.distance) || 'Unknown Distance',\n      difficulty: ((_marker$specifics2 = marker.specifics) === null || _marker$specifics2 === void 0 ? void 0 : _marker$specifics2.difficulty) || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District'\n    };\n  });\n  const handleMapLoad = mapInstance => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n  useEffect(() => {\n    if (!isMapLoaded || !mapRef.current || !geojsonData) return;\n    try {\n      // Limpa o anterior se existir\n      if (dataLayerRef.current) {\n        dataLayerRef.current.setMap(null);\n      }\n      const dataLayer = new window.google.maps.Data();\n      dataLayer.setMap(mapRef.current);\n      dataLayerRef.current = dataLayer;\n      const validateAndTransformGeoJson = geoJson => {\n        geoJson.features.forEach(feature => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = feature.geometry.coordinates;\n            feature.geometry.coordinates = [lat, lng];\n          } else if (feature.geometry.type === 'MultiLineString') {\n            feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n          }\n        });\n        return geoJson;\n      };\n      const validatedGeoJson = validateAndTransformGeoJson(typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData);\n      dataLayer.addGeoJson(validatedGeoJson);\n      dataLayer.setStyle(feature => {\n        const geometryType = feature.getGeometry().getType();\n        if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n          return {\n            strokeColor: 'blue',\n            strokeWeight: 3,\n            clickable: false\n          };\n        } else if (geometryType === 'Point') {\n          return {\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 6,\n              fillColor: 'red',\n              fillOpacity: 1,\n              strokeWeight: 2,\n              strokeColor: 'white'\n            }\n          };\n        }\n      });\n      const bounds = new window.google.maps.LatLngBounds();\n      dataLayer.forEach(feature => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          bounds.extend(geometry.get());\n        } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n          geometry.getArray().forEach(bounds.extend);\n        }\n      });\n      if (!bounds.isEmpty()) {\n        mapRef.current.fitBounds(bounds);\n      }\n    } catch (error) {\n      console.error(\"Error processing GeoJSON:\", error);\n    }\n  }, [geojsonData, isMapLoaded]);\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = difficultyLevel => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n  useEffect(() => {\n    setHasCenteredOnce(false); // Recentrar no próximo load\n  }, [selectedMarker]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(APIProvider, {\n        apiKey: 'AIzaSyDwGfxyjM21tprpmkBXNI6HGIuwzvLsBgo',\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          src: logo,\n          alt: \"logo\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {\n          \"aria-label\": \"more\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/CityCouncilProfile');\n            },\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/MyWalkways');\n            },\n            children: \"My Walkways\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            defaultZoom: 10,\n            defaultCenter: {\n              lat: 41.5564,\n              lng: -8.16415\n            },\n            mapId: \"5f6b01e0c09b0450\",\n            mapTypeId: \"terrain\"\n            //onIdle={handleMapLoad}\n            ,\n            children: transformedMarkers.map(marker => /*#__PURE__*/_jsxDEV(AdvancedMarker, {\n              position: marker.position,\n              clickable: true,\n              onClick: () => handleMarkerClick(marker),\n              children: /*#__PURE__*/_jsxDEV(Pin, {\n                background: theme.palette.primary.secondary,\n                borderColor: theme.palette.primary.main,\n                glyphColor: theme.palette.primary.contrastText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)\n            }, marker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: selectedMarker !== null,\n          onClose: handleCloseDialog,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name, /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: handleCloseDialog,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabIndex,\n            onChange: handleTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Walkway\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageMap[selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id],\n                alt: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name,\n                style: {\n                  maxWidth: '100%',\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"District:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.district]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Difficulty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 62\n                }, this), \" \", difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.distance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), tabIndex === 1 && selectedMarker && /*#__PURE__*/_jsxDEV(Map, {\n              defaultZoom: 14,\n              defaultCenter: {\n                lat: selectedMarker === null || selectedMarker === void 0 ? void 0 : (_selectedMarker$coord = selectedMarker.coordinates) === null || _selectedMarker$coord === void 0 ? void 0 : _selectedMarker$coord.latitude,\n                lng: selectedMarker === null || selectedMarker === void 0 ? void 0 : (_selectedMarker$coord2 = selectedMarker.coordinates) === null || _selectedMarker$coord2 === void 0 ? void 0 : _selectedMarker$coord2.longitude\n              },\n              mapId: \"5f6b01e0c09b0450\",\n              onIdle: handleMapLoad,\n              style: {\n                height: '600px',\n                width: '100%'\n              }\n            }, selectedMarker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), tabIndex === 2 && /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"List of services offered along the walkway can be checked here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setShowFormDialog(true),\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Add New Walkway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: showFormDialog,\n          onClose: () => setShowFormDialog(false),\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"Add New Walkway\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                console.log(\" SUBMIT FUNCIONOU!\");\n                console.log(\" formData:\", formData);\n                handleAddWalkway(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"ID\",\n                name: \"id\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Name\",\n                name: \"name\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Description\",\n                name: \"description\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                gap: 2,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  label: \"Start Latitude\",\n                  name: \"trajectory.start.latitude\",\n                  type: \"text\",\n                  value: formData.trajectory.start.latitude,\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  label: \"Start Longitude\",\n                  name: \"trajectory.start.longitude\",\n                  type: \"text\",\n                  value: formData.trajectory.start.longitude,\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                gap: 2,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  label: \"End Latitude\",\n                  name: \"trajectory.end.latitude\",\n                  type: \"text\",\n                  value: formData.trajectory.end.latitude,\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  label: \"End Longitude\",\n                  name: \"trajectory.end.longitude\",\n                  type: \"text\",\n                  value: formData.trajectory.end.longitude,\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"District\",\n                name: \"district\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                sx: {\n                  border: '1px solid rgba(0, 0, 0, 0.23)',\n                  borderRadius: 1,\n                  padding: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"GeoJSON\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => setGeoJsonInputType(prev => prev === 'text' ? 'file' : 'text'),\n                  children: geoJsonInputType === 'text' ? 'Switch to File Input' : 'Switch to Text Input'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 19\n                }, this), geoJsonInputType === 'text' ? /*#__PURE__*/_jsxDEV(TextField /*required*/, {\n                  name: \"geojson\",\n                  label: \"Enter GeoJSON\",\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  /*required*/\n                  type: \"file\",\n                  name: \"geojson\",\n                  accept: \".geojson,.json\",\n                  onChange: e => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const reader = new FileReader();\n                      reader.onload = () => {\n                        setFormData(prev => ({\n                          ...prev,\n                          geojson: reader.result\n                        }));\n                      };\n                      reader.readAsText(file);\n                    }\n                  },\n                  style: {\n                    marginTop: '8px',\n                    marginBottom: '8px',\n                    display: 'block',\n                    width: '100%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                variant: \"outlined\",\n                sx: {\n                  border: '1px solid rgba(0, 0, 0, 0.23)',\n                  borderRadius: 1,\n                  padding: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Walkway Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  /*required*/\n                  type: \"file\",\n                  name: \"primaryImage\",\n                  accept: \"image/*\",\n                  onChange: e => {\n                    const file = e.target.files[0];\n                    setFormData(prev => ({\n                      ...prev,\n                      primaryImage: file\n                    }));\n                  },\n                  style: {\n                    width: '100%',\n                    display: 'block',\n                    padding: '8px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Region\",\n                name: \"region\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Difficulty\",\n                name: \"specifics.difficulty\",\n                type: \"number\",\n                onChange: handleFormChange,\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"Distance (km)\",\n                name: \"specifics.distance\",\n                type: \"text\",\n                value: formData.specifics.distance,\n                onChange: e => {\n                  // Convert commas to dots for parsing, but keep the display with commas\n                  const value = e.target.value.replace(',', '.');\n                  if (/^\\d*(,\\d{0,2})?$/.test(e.target.value) || value === '') {\n                    setFormData(prev => ({\n                      ...prev,\n                      specifics: {\n                        ...prev.specifics,\n                        distance: e.target.value\n                      }\n                    }));\n                  }\n                },\n                fullWidth: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  sx: {\n                    fontSize: '1.2rem'\n                  },\n                  children: \"Round Trip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"trajectory.round\",\n                  value: formData.trajectory.round,\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    trajectory: {\n                      ...prev.trajectory,\n                      round: e.target.value === \"true\"\n                    }\n                  })),\n                  style: {\n                    padding: '18px',\n                    borderRadius: '4px',\n                    fontSize: '1.1rem' // aumenta o tamanho da letra\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    style: {\n                      fontSize: '1.1rem'\n                    },\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    style: {\n                      fontSize: '1.1rem'\n                    },\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => setShowFormDialog(false),\n                  color: \"secondary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleLogOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n};\n_s(CityCouncilBoard, \"WPYfePdX7nL9kaVf3nHHKO0b9NI=\", false, function () {\n  return [useNavigate];\n});\n_c6 = CityCouncilBoard;\nexport default CityCouncilBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"MapContainer\");\n$RefreshReg$(_c4, \"LogoutButton\");\n$RefreshReg$(_c5, \"MoreMenuButton\");\n$RefreshReg$(_c6, \"CityCouncilBoard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Axios","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","IconButton","Button","Container","CssBaseline","Typography","Paper","ThemeProvider","TextField","FormControl","FormLabel","Box","styled","CloseIcon","MoreVertIcon","APIProvider","AdvancedMarker","Map","Pin","useNavigate","theme","logo","walkway0","walkway1","walkway2","walkway3","walkway4","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","root","zIndex","_c","Logo","position","top","spacing","left","width","height","cursor","_c2","MapContainer","_c3","NewWalkwayContainer","LogoutButton","right","_c4","MoreMenuButton","_c5","CityCouncilBoard","onLogout","_s","_selectedMarker$coord","_selectedMarker$coord2","error","setError","anchorEl","setAnchorEl","success","setSuccess","markers","setMarkers","selectedMarker","setSelectedMarker","difficulty","setDifficulty","tabIndex","setTabIndex","geojsonData","setGeojsonData","isMapLoaded","setIsMapLoaded","geoJsonLoaded","setGeoJsonLoaded","geoJsonInputType","setGeoJsonInputType","hasCenteredOnce","setHasCenteredOnce","formData","setFormData","id","name","description","coordinates","latitude","longitude","district","geojson","primaryImage","region","specifics","distance","maxHeight","minHeight","trajectory","start","end","round","showFormDialog","setShowFormDialog","navigate","mapRef","imageMap","dataLayerRef","handleTabChange","_","newValue","handleLogOut","get","withCredentials","console","log","message","handleClick","event","currentTarget","handleClose","handleLogoClick","handleCloseDialog","handleMarkerClick","marker","undefined","walkwayId","fetchMarkers","response","data","params","then","features","forEach","feature","geometry","type","lng","lat","map","line","catch","handleFormChange","value","target","keys","split","includes","replace","prev","updated","current","i","length","key","handleAddWalkway","e","preventDefault","requiredFields","some","field","FormData","append","parseFloat","parseInt","toString","File","blob","Blob","post","headers","_error$response","_error$response$data","transformedMarkers","filter","_marker$specifics","_marker$specifics2","image","handleMapLoad","mapInstance","googleMap","setMap","dataLayer","window","google","maps","Data","validateAndTransformGeoJson","geoJson","validatedGeoJson","JSON","parse","addGeoJson","setStyle","geometryType","getGeometry","getType","strokeColor","strokeWeight","clickable","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","bounds","LatLngBounds","extend","getArray","isEmpty","fitBounds","calculateDifficulty","difficultyLevel","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","src","alt","onClick","keepMounted","open","Boolean","onClose","defaultZoom","defaultCenter","mapId","mapTypeId","background","palette","primary","secondary","borderColor","main","glyphColor","contrastText","fullWidth","onChange","label","dividers","style","maxWidth","marginBottom","gutterBottom","color","onIdle","variant","marginTop","onSubmit","required","margin","display","gap","sx","border","borderRadius","padding","size","accept","file","files","reader","FileReader","onload","result","readAsText","test","fontSize","_c6","$RefreshReg$"],"sources":["/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/dashboards/CityCouncilBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton,\n  Button, Container, CssBaseline, Typography, Paper, ThemeProvider, TextField, FormControl, FormLabel, Box\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\n\nimport theme from '../Theme/theme';\nimport logo from '../Theme/images/baselogo.jpg';\nimport walkway0 from '../Theme/images/walkway_0.jpg';\nimport walkway1 from '../Theme/images/walkway_1.jpg';\nimport walkway2 from '../Theme/images/walkway_2.jpg';\nimport walkway3 from '../Theme/images/walkway_3.jpg';\nimport walkway4 from '../Theme/images/walkway_4.jpg';\n\n// Styled components using MUI's new styled API\nconst AppContainer = styled(Container)(({ theme }) => ({\n  ...theme.root,\n  zIndex: 9999,\n}));\n\nconst Logo = styled('img')(({ theme }) => ({\n  position: 'absolute',\n  top: theme.spacing(2),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer',\n}));\n\nconst MapContainer = styled(Paper)(({ theme }) => ({\n  height: '500px',\n  width: '100%',\n}));\n\nconst NewWalkwayContainer = styled(Paper)(({ theme }) => ({\n  height: '600px',\n  width: '100%',\n}));\n\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20,\n});\n\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20,\n});\n\nconst CityCouncilBoard = ({ onLogout }) => {\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null)\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false); \n  const [geoJsonInputType, setGeoJsonInputType] = useState('text');\n\n  const [hasCenteredOnce, setHasCenteredOnce] = useState(false);\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    description: '',\n    coordinates: { latitude: 0, longitude: 0 },\n    district: '',\n    geojson: '',\n    primaryImage: '',\n    region: '',\n    specifics: { difficulty: '', distance: '', maxHeight: '', minHeight: '' },\n    trajectory: { start: { latitude: 0, longitude: 0 }, end: { latitude: 0, longitude: 0 }, round: false }\n  });\n  const [showFormDialog, setShowFormDialog] = useState(false);\n  const navigate = useNavigate();\n  const mapRef = useRef(null);\n  const imageMap = {\n    0: walkway0,\n    1: walkway1,\n    2: walkway2,\n    3: walkway3,\n    4: walkway4,\n  };\n  const dataLayerRef = useRef(null);\n\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", { withCredentials: true });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {\n      setError('Failed to log out: ' + error.message);\n    }\n  };\n\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/CityCouncilBoard');\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); // Reset map load state to force reload\n    setGeojsonData(null);   // Clear GeoJSON data to ensure it reloads\n    setSelectedMarker(null); // Clear the selected marker\n  };\n  const handleMarkerClick = async (marker) => {\n    if (marker?.id === undefined && marker?.walkwayId === undefined) return;\n  \n    setSelectedMarker(marker);\n    };\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\");\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  useEffect(() => {\n    if (selectedMarker?.id === undefined || selectedMarker?.id === null) return;\n    Axios.get(`http://localhost:8080/getGeojson`, { params: { walkwayId: selectedMarker.id } })\n        .then(({ data: { geojson } }) => {\n          geojson.features.forEach((feature) => {\n            if (feature.geometry.type === 'Point') {\n              const [lng, lat] = feature.geometry.coordinates;\n              feature.geometry.coordinates = [lat, lng];\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(line =>\n                line.map(([lng, lat]) => [lat, lng])\n              );\n            }\n          });\n          setGeojsonData(geojson);\n        })\n        .catch((error) => console.error('Error fetching GeoJSON:', error));\n    \n  }, [selectedMarker]);\n  \n  \n  const handleFormChange = (event) => {\n    const { name, value } = event.target;\n    const keys = name.split('.');\n    let newValue = value;\n  \n    if (name.includes('latitude') || name.includes('longitude') || name.includes('distance')) {\n      newValue = value.replace(',', '.');\n    }\n  \n    setFormData((prev) => {\n      const updated = { ...prev };\n      let current = updated;\n  \n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i];\n        if (!current[key] || typeof current[key] !== 'object') {\n          current[key] = {};\n        }\n        current = current[key];\n      }\n  \n      current[keys[keys.length - 1]] = newValue;\n      return updated;\n    });\n  };\n  \n  const handleAddWalkway = async (e) => {\n    e.preventDefault();\n    console.log(\"Form data before submission:\", formData);\n  \n    try {\n      const requiredFields = [\n        formData.id,\n        formData.name,\n        formData.description,\n        formData.district,\n        formData.region,\n        formData.trajectory.start.latitude,\n        formData.trajectory.start.longitude,\n        formData.trajectory.end.latitude,\n        formData.trajectory.end.longitude,\n        formData.specifics.difficulty,\n        formData.specifics.distance,\n        formData.geojson,\n        formData.primaryImage\n      ];\n      console.log(\"Required fields:\", requiredFields);\n      if (requiredFields.some((field) => field === '' || field === null || field === undefined)) {\n        setError('Please fill in all required fields.');\n        return;\n      }\n  \n      const data = new FormData();\n  \n      data.append(\"id\", formData.id);\n      data.append(\"name\", formData.name);\n      data.append(\"description\", formData.description);\n      data.append(\"district\", formData.district);\n      data.append(\"region\", formData.region);\n  \n      data.append(\"coordinates[latitude]\", parseFloat(formData.trajectory.start.latitude));\n      data.append(\"coordinates[longitude]\", parseFloat(formData.trajectory.start.longitude));\n  \n      data.append(\"specifics[difficulty]\", parseInt(formData.specifics.difficulty));\n      data.append(\"specifics[distance]\", parseFloat(formData.specifics.distance.toString().replace(',', '.')));\n  \n      data.append(\"trajectory[start][latitude]\", parseFloat(formData.trajectory.start.latitude));\n      data.append(\"trajectory[start][longitude]\", parseFloat(formData.trajectory.start.longitude));\n      data.append(\"trajectory[end][latitude]\", parseFloat(formData.trajectory.end.latitude));\n      data.append(\"trajectory[end][longitude]\", parseFloat(formData.trajectory.end.longitude));\n      data.append(\"trajectory[round]\", formData.trajectory.round.toString());\n  \n      if (formData.geojson instanceof File) {\n        data.append(\"geojson\", formData.geojson);\n      } else {\n        const blob = new Blob([formData.geojson], { type: \"application/json\" });\n        data.append(\"geojson\", blob, \"geojson.json\");\n      }\n  \n      if (formData.primaryImage instanceof File) {\n        data.append(\"primaryImage\", formData.primaryImage);\n      } else {\n        setError(\"Primary image is not valid.\");\n        return;\n      }\n  \n      await Axios.post(\"http://localhost:8080/addWalkway\", data, {\n        headers: { 'Content-Type': 'multipart/form-data' },}, { withCredentials: true });\n  \n      console.log(\"✔️ Passadiço adicionado com sucesso!\");\n\n      console.log(\"Associando passadiço à lista do utilizador...\");\n      await Axios.post(\"http://localhost:8080/addWalkwayToMyList\", {\n        walkwayId: formData.id\n      }, { withCredentials: true });\n  \n      console.log(\"✔️ Associação concluída!\");\n\n      setSuccess('Walkway added and linked to your list successfully!');\n      setError(null);\n  \n      setFormData({\n        id: '',\n        name: '',\n        description: '',\n        coordinates: { latitude: 0, longitude: 0 },\n        district: '',\n        geojson: '',\n        primaryImage: '',\n        region: '',\n        specifics: { difficulty: '', distance: '' },\n        trajectory: { start: { latitude: 0, longitude: 0 }, end: { latitude: 0, longitude: 0 }, round: false }\n      });\n  \n    } catch (error) {\n      console.error('Failed to add walkway:', error);\n      setError('Failed to add walkway: ' + (error?.response?.data?.message || error.message));\n      setSuccess(null);\n    }\n  };\n  \n\n  useEffect(() => {\n    setFormData((prev) => ({\n      ...prev,\n      coordinates: { ...prev.trajectory.start }\n    }));\n  }, [formData.trajectory.start]);\n  \n\n  const transformedMarkers = markers\n  .filter(marker => typeof marker.id === 'number' && marker.coordinates)\n  .map(marker => ({\n    ...marker,\n    position: {\n      lat: marker.coordinates.latitude,\n      lng: marker.coordinates.longitude,\n    },\n    name: marker.name || 'Unknown Name',\n    description: marker.description || 'No description available',\n    image: marker.primaryImage || 'default_image.jpg',\n    distance: marker.specifics?.distance || 'Unknown Distance',\n    difficulty: marker.specifics?.difficulty || 'Unknown Difficulty',\n    region: marker.region || 'Unknown Region',\n    district: marker.district || 'Unknown District',\n  }));\n\n  const handleMapLoad = (mapInstance) => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n\n  useEffect(() => {\n    if (!isMapLoaded || !mapRef.current || !geojsonData) return;\n  \n    try {\n      // Limpa o anterior se existir\n      if (dataLayerRef.current) {\n        dataLayerRef.current.setMap(null);\n      }\n  \n      const dataLayer = new window.google.maps.Data();\n      dataLayer.setMap(mapRef.current);\n      dataLayerRef.current = dataLayer;\n  \n      const validateAndTransformGeoJson = (geoJson) => {\n        geoJson.features.forEach((feature) => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = feature.geometry.coordinates;\n            feature.geometry.coordinates = [lat, lng];\n          } else if (feature.geometry.type === 'MultiLineString') {\n            feature.geometry.coordinates = feature.geometry.coordinates.map((line) =>\n              line.map(([lng, lat]) => [lat, lng])\n            );\n          }\n        });\n        return geoJson;\n      };\n  \n      const validatedGeoJson = validateAndTransformGeoJson(\n        typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData\n      );\n  \n      dataLayer.addGeoJson(validatedGeoJson);\n  \n      dataLayer.setStyle((feature) => {\n        const geometryType = feature.getGeometry().getType();\n        if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n          return { strokeColor: 'blue', strokeWeight: 3, clickable: false };\n        } else if (geometryType === 'Point') {\n          return {\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 6,\n              fillColor: 'red',\n              fillOpacity: 1,\n              strokeWeight: 2,\n              strokeColor: 'white',\n            },\n          };\n        }\n      });\n  \n      const bounds = new window.google.maps.LatLngBounds();\n      dataLayer.forEach((feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          bounds.extend(geometry.get());\n        } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n          geometry.getArray().forEach(bounds.extend);\n        }\n      });\n  \n      if (!bounds.isEmpty()) {\n        mapRef.current.fitBounds(bounds);\n      }\n    } catch (error) {\n      console.error(\"Error processing GeoJSON:\", error);\n    }\n  }, [geojsonData, isMapLoaded]);\n  \n\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = (difficultyLevel) => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n  \n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n  useEffect(() => {\n    setHasCenteredOnce(false); // Recentrar no próximo load\n  }, [selectedMarker]);\n  \n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppContainer>\n        <APIProvider apiKey={'AIzaSyDwGfxyjM21tprpmkBXNI6HGIuwzvLsBgo'}>\n          <Logo src={logo} alt=\"logo\" onClick={handleLogoClick} />\n          <MoreMenuButton aria-label=\"more\" onClick={handleClick}>\n            <MoreVertIcon />\n          </MoreMenuButton>\n          <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuItem onClick={() => { handleClose(); navigate('/CityCouncilProfile'); }}>Profile</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/MyWalkways'); }}>My Walkways</MenuItem>\n          </Menu>\n          <MapContainer>\n          <Map\n              defaultZoom={10}\n              defaultCenter={{ lat: 41.5564, lng: -8.16415 }}\n              mapId='5f6b01e0c09b0450'\n              mapTypeId=\"terrain\"\n              //onIdle={handleMapLoad}\n            >\n              {transformedMarkers.map((marker) => (\n                <AdvancedMarker\n                  key={marker.id}\n                  position={marker.position}\n                  clickable={true}\n                  onClick={() => handleMarkerClick(marker)}\n                >\n                  <Pin background={theme.palette.primary.secondary} borderColor={theme.palette.primary.main} glyphColor={theme.palette.primary.contrastText} />\n                </AdvancedMarker>\n              ))}\n            </Map>\n          </MapContainer>\n          <Dialog open={selectedMarker !== null} onClose={handleCloseDialog} fullWidth>\n            <DialogTitle>\n              {selectedMarker?.name}\n              <IconButton aria-label=\"close\" onClick={handleCloseDialog}><CloseIcon /></IconButton>\n            </DialogTitle>\n            <Tabs value={tabIndex} onChange={handleTabChange}>\n              <Tab label=\"Overview\" />\n              <Tab label=\"Walkway\" />\n              <Tab label=\"Services\" />\n            </Tabs>\n            <DialogContent dividers>\n              {tabIndex === 0 && (\n                <>\n                  <img src={imageMap[selectedMarker?.id]} alt={selectedMarker?.name} style={{ maxWidth: '100%', marginBottom: '20px' }} />\n                  <Typography gutterBottom color=\"primary\"><strong>District:</strong> {selectedMarker?.district}</Typography>\n                  <Typography gutterBottom color=\"primary\"><strong>Region:</strong> {selectedMarker?.region}</Typography>\n                  <Typography gutterBottom color=\"secondary\"><strong>Difficulty:</strong> {difficulty}</Typography>\n                  <Typography gutterBottom><strong>Distance:</strong> {selectedMarker?.distance}</Typography>\n                  <Typography gutterBottom><strong>Description:</strong> {selectedMarker?.description}</Typography>\n                </>\n              )}\n              {tabIndex === 1 && selectedMarker && (\n                <Map\n                  key={selectedMarker.id}\n                  defaultZoom={14}\n                  defaultCenter={{\n                    lat: selectedMarker?.coordinates?.latitude,\n                    lng: selectedMarker?.coordinates?.longitude\n                  }}\n                  mapId=\"5f6b01e0c09b0450\"\n                  onIdle={handleMapLoad}\n                  style={{ height: '600px', width: '100%' }}\n                />\n              )}\n              {tabIndex === 2 && <Typography>List of services offered along the walkway can be checked here.</Typography>}\n            </DialogContent>\n          </Dialog>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setShowFormDialog(true)} style={{ marginTop: '20px' }}>\n             Add New Walkway\n          </Button>\n\n          <Dialog open={showFormDialog} onClose={() => setShowFormDialog(false)} fullWidth>\n            <DialogTitle>Add New Walkway</DialogTitle>\n            <DialogContent>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  console.log(\" SUBMIT FUNCIONOU!\");\n                  console.log(\" formData:\", formData);\n                  handleAddWalkway(e);\n                }}\n              >\n                <TextField required label=\"ID\" name=\"id\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                <TextField required label=\"Name\" name=\"name\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                <TextField required label=\"Description\" name=\"description\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                <Box display=\"flex\" gap={2}>\n                  <TextField\n                    required\n                    label=\"Start Latitude\"\n                    name=\"trajectory.start.latitude\"\n                    type=\"text\"\n                    value={formData.trajectory.start.latitude}\n                    onChange={handleFormChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    label=\"Start Longitude\"\n                    name=\"trajectory.start.longitude\"\n                    type=\"text\"\n                    value={formData.trajectory.start.longitude}\n                    onChange={handleFormChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Box>\n                <Box display=\"flex\" gap={2}>\n                  <TextField\n                    required\n                    label=\"End Latitude\"\n                    name=\"trajectory.end.latitude\"\n                    type=\"text\"\n                    value={formData.trajectory.end.latitude}\n                    onChange={handleFormChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                  <TextField\n                    required\n                    label=\"End Longitude\"\n                    name=\"trajectory.end.longitude\"\n                    type=\"text\"\n                    value={formData.trajectory.end.longitude}\n                    onChange={handleFormChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                </Box>\n                <TextField required label=\"District\" name=\"district\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                <FormControl fullWidth margin=\"normal\" variant=\"outlined\" sx={{ border: '1px solid rgba(0, 0, 0, 0.23)', borderRadius: 1, padding: '8px' }}>\n                  <FormLabel>GeoJSON</FormLabel>\n                  <Button variant=\"outlined\" size=\"small\" onClick={() => setGeoJsonInputType(prev => (prev === 'text' ? 'file' : 'text'))}>\n                    {geoJsonInputType === 'text' ? 'Switch to File Input' : 'Switch to Text Input'}\n                  </Button>\n                  {geoJsonInputType === 'text' ? (\n                    <TextField /*required*/ name=\"geojson\" label=\"Enter GeoJSON\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                  ) : (\n                    <input\n                      /*required*/\n                      type=\"file\"\n                      name=\"geojson\"\n                      accept=\".geojson,.json\"\n                      onChange={(e) => {\n                        const file = e.target.files[0];\n                        if (file) {\n                          const reader = new FileReader();\n                          reader.onload = () => {\n                            setFormData((prev) => ({ ...prev, geojson: reader.result }));\n                          };\n                          reader.readAsText(file);\n                        }\n                      }}\n                      style={{ marginTop: '8px', marginBottom: '8px', display: 'block', width: '100%' }}\n                    />\n                  )}\n                </FormControl>\n\n                <FormControl fullWidth margin=\"normal\" variant=\"outlined\" sx={{ border: '1px solid rgba(0, 0, 0, 0.23)', borderRadius: 1, padding: '8px' }}>\n                  <FormLabel>Walkway Image</FormLabel>\n                  <input\n                    /*required*/\n                    type=\"file\"\n                    name=\"primaryImage\"\n                    accept=\"image/*\"\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      setFormData((prev) => ({ ...prev, primaryImage: file }));\n                    }}\n                    style={{ width: '100%', display: 'block', padding: '8px' }}\n                  />\n                </FormControl>\n\n                <TextField required label=\"Region\" name=\"region\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                <TextField required label=\"Difficulty\" name=\"specifics.difficulty\" type=\"number\" onChange={handleFormChange} fullWidth margin=\"normal\" />\n                <TextField\n                  required\n                  label=\"Distance (km)\"\n                  name=\"specifics.distance\"\n                  type=\"text\"\n                  value={formData.specifics.distance}\n                  onChange={(e) => {\n                    // Convert commas to dots for parsing, but keep the display with commas\n                    const value = e.target.value.replace(',', '.');\n                    if (/^\\d*(,\\d{0,2})?$/.test(e.target.value) || value === '') {\n                      setFormData((prev) => ({\n                        ...prev,\n                        specifics: { ...prev.specifics, distance: e.target.value },\n                      }));\n                    }\n                  }}\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <FormControl fullWidth margin=\"normal\">\n                  <FormLabel sx={{ fontSize: '1.2rem' }}>Round Trip</FormLabel>\n                  <select\n                    name=\"trajectory.round\"\n                    value={formData.trajectory.round}\n                    onChange={(e) =>\n                      setFormData((prev) => ({\n                        ...prev,\n                        trajectory: {\n                          ...prev.trajectory,\n                          round: e.target.value === \"true\"\n                        }\n                      }))\n                    }\n                    style={{\n                      padding: '18px',\n                      borderRadius: '4px',\n                      fontSize: '1.1rem' // aumenta o tamanho da letra\n                    }}\n                  >\n                    <option value=\"false\" style={{ fontSize: '1.1rem' }}>No</option>\n                    <option value=\"true\" style={{ fontSize: '1.1rem' }}>Yes</option>\n                  </select>\n                </FormControl>\n                <DialogActions>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Submit\n                  </Button>\n                  <Button onClick={() => setShowFormDialog(false)} color=\"secondary\">\n                    Cancel\n                  </Button>\n                </DialogActions>              \n              </form>\n            </DialogContent>\n          </Dialog>\n          <LogoutButton variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Logout</LogoutButton>\n        </APIProvider>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default CityCouncilBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}