{"ast":null,"code":"var _jsxFileName = \"/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/dashboards/WalkerBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport { Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton, Button, Container, CssBaseline, Typography, Paper, ThemeProvider, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\nimport theme from '../Theme/theme';\nimport logo from '../Theme/images/baselogo.jpg';\n\n// Styled components using MUI's new styled API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled(Container)(({\n  theme\n}) => ({\n  ...theme.root,\n  zIndex: 9999\n}));\n_c = AppContainer;\nconst Logo = styled('img')(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: theme.spacing(4),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer'\n}));\n_c2 = Logo;\nconst MapContainer = styled(Paper)(({\n  theme\n}) => ({\n  height: '500px',\n  width: '100%',\n  display: 'flex',\n  overflowX: 'auto',\n  marginTop: theme.spacing(80)\n}));\n_c3 = MapContainer;\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20\n});\n_c4 = LogoutButton;\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20\n});\n_c5 = MoreMenuButton;\nconst TopWalkwaysContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  overflowX: 'auto'\n}));\n_c6 = TopWalkwaysContainer;\nconst RecommendedWalkwaysContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  overflowX: 'auto'\n}));\n// Add 'backgroundImage' as a prop to WalkwayBox\n_c7 = RecommendedWalkwaysContainer;\nconst WalkwayBox = styled(Paper)(({\n  theme,\n  backgroundImage\n}) => ({\n  minWidth: '200px',\n  height: '150px',\n  margin: theme.spacing(1),\n  cursor: 'pointer',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  color: theme.palette.primary.contrastText,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(1),\n  transition: 'transform 0.2s, box-shadow 0.2s',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[6]\n  },\n  backgroundBlendMode: 'overlay' // Helps with readability\n}));\n\n//--------------------- Main Component ---------------------//\n_c8 = WalkwayBox;\nconst WalkerBoard = ({\n  onLogout\n}) => {\n  _s();\n  var _selectedMarker$coord, _selectedMarker$coord2;\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false);\n  const [topLikedWalkways, setTopLikedWalkways] = useState([]);\n  const [topExploredWalkways, setTopExploredWalkways] = useState([]);\n  const [recommendedWalkways, setRecommendedWalkways] = useState([]);\n  const [isPlanned, setIsPlanned] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [comment, setComment] = useState('');\n  const [storedComment, setStoredComment] = useState(null);\n  const [publicComments, setPublicComments] = useState([]);\n  const [walkwayLikes, setWalkwayLikes] = useState(0);\n  const [userHistory, setUserHistory] = useState([]);\n  const [googleApiKey, setGoogleApiKey] = useState(null);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n  const dataLayerRef = useRef(null);\n\n  //--------------------- Menu Handlers ---------------------//\n  const handleClick = event => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/WalkerBoard');\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", {\n        withCredentials: true\n      });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {}\n  };\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false);\n    setGeojsonData(null);\n    setSelectedMarker(null);\n    setTabIndex(0);\n    setComment('');\n    setAnchorEl(null);\n  };\n\n  //--------------------- Map Load Handler ---------------------//\n  useEffect(() => {\n    const fetchApiKey = async () => {\n      try {\n        const response = await Axios.get('http://localhost:8080/google-maps-key', {\n          withCredentials: true\n        });\n        setGoogleApiKey(response.data.apiKey);\n      } catch (err) {\n        console.error('Erro ao buscar a Google Maps API key:', err);\n      }\n    };\n    fetchApiKey();\n  }, []);\n  const handleMapLoad = mapInstance => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n  useEffect(() => {\n    if (!isMapLoaded || !mapRef.current || !geojsonData) return;\n    try {\n      // Limpa o anterior se existir\n      if (dataLayerRef.current) {\n        dataLayerRef.current.setMap(null);\n      }\n      const dataLayer = new window.google.maps.Data();\n      dataLayer.setMap(mapRef.current);\n      dataLayerRef.current = dataLayer;\n      const validateAndTransformGeoJson = geoJson => {\n        geoJson.features.forEach(feature => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = feature.geometry.coordinates;\n            feature.geometry.coordinates = [lat, lng];\n          } else if (feature.geometry.type === 'MultiLineString') {\n            feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n          }\n        });\n        return geoJson;\n      };\n      const validatedGeoJson = validateAndTransformGeoJson(typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData);\n      dataLayer.addGeoJson(validatedGeoJson);\n      dataLayer.setStyle(feature => {\n        const geometryType = feature.getGeometry().getType();\n        if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n          return {\n            strokeColor: 'blue',\n            strokeWeight: 3,\n            clickable: false\n          };\n        } else if (geometryType === 'Point') {\n          return {\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 6,\n              fillColor: 'red',\n              fillOpacity: 1,\n              strokeWeight: 2,\n              strokeColor: 'white'\n            }\n          };\n        }\n      });\n      const bounds = new window.google.maps.LatLngBounds();\n      dataLayer.forEach(feature => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          bounds.extend(geometry.get());\n        } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n          geometry.getArray().forEach(bounds.extend);\n        }\n      });\n      if (!bounds.isEmpty()) {\n        mapRef.current.fitBounds(bounds);\n      }\n    } catch (error) {\n      console.error(\"Error processing GeoJSON:\", error);\n    }\n  }, [geojsonData, isMapLoaded]);\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = difficultyLevel => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n\n  //--------------------- Fetch Markers ---------------------//\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\", {\n          withCredentials: true\n        });\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  const transformedMarkers = markers.filter(marker => typeof marker.id === 'number' && marker.coordinates).map(marker => {\n    var _marker$specifics, _marker$specifics2;\n    return {\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      name: marker.name || 'Unknown Name',\n      // Fallback for missing names\n      description: marker.description || 'No description available',\n      // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg',\n      // Fallback for missing image\n      distance: ((_marker$specifics = marker.specifics) === null || _marker$specifics === void 0 ? void 0 : _marker$specifics.distance) || 'Unknown Distance',\n      // Safe access for nested properties\n      difficulty: ((_marker$specifics2 = marker.specifics) === null || _marker$specifics2 === void 0 ? void 0 : _marker$specifics2.difficulty) || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude\n      },\n      interests: marker.interests || 'No Interests Available'\n    };\n  });\n  const handleMarkerClick = async marker => {\n    if ((marker === null || marker === void 0 ? void 0 : marker.id) === undefined && (marker === null || marker === void 0 ? void 0 : marker.walkwayId) === undefined) return;\n    setSelectedMarker(marker);\n    const walkwayId = marker.walkwayId || marker.id;\n    try {\n      const commentsRes = await Axios.get(`http://localhost:8080/getWalkwayComments?walkwayId=${walkwayId}`);\n      setPublicComments(commentsRes.data.comments || []);\n      console.log(\"Fetched comments:\", commentsRes.data.comments);\n      const likesRes = await Axios.get(`http://localhost:8080/walkwayLikes?walkwayId=${walkwayId}`);\n      setWalkwayLikes(likesRes.data.likes || 0);\n      await checkWalkwayStatus(walkwayId);\n    } catch (err) {\n      console.error(\"Error getting comments or likes:\", err);\n    }\n  };\n  useEffect(() => {\n    if ((selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id) === undefined || (selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id) === null) return;\n    Axios.get(`http://localhost:8080/getGeojson`, {\n      params: {\n        walkwayId: selectedMarker.id\n      }\n    }).then(({\n      data: {\n        geojson\n      }\n    }) => {\n      geojson.features.forEach(feature => {\n        if (feature.geometry.type === 'Point') {\n          const [lng, lat] = feature.geometry.coordinates;\n          feature.geometry.coordinates = [lat, lng];\n        } else if (feature.geometry.type === 'MultiLineString') {\n          feature.geometry.coordinates = feature.geometry.coordinates.map(line => line.map(([lng, lat]) => [lat, lng]));\n        }\n      });\n      setGeojsonData(geojson);\n    }).catch(error => console.error('Error fetching GeoJSON:', error));\n  }, [selectedMarker]);\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/history\", {\n          withCredentials: true\n        });\n        setUserHistory(response.data.history || []);\n        console.log(\"User history:\", response.data.history);\n\n        // se já houver um marcador selecionado, força atualização do seu estado\n        if (selectedMarker) {\n          updateMarkerState(response.data.history, selectedMarker);\n        }\n      } catch (error) {\n        console.error(\"Error getting user history:\", error);\n      }\n    };\n    fetchHistory();\n  }, []);\n  const updateMarkerState = (history, marker) => {\n    const entry = history.find(entry => entry.walkwayId === marker.id);\n    if (entry) {\n      if (entry.finished) {\n        setIsCompleted(true);\n        setIsPlanned(false);\n        setStoredComment(entry.experience || null);\n      } else {\n        setIsCompleted(false);\n        setIsPlanned(true);\n        setStoredComment(null);\n      }\n    } else {\n      setIsCompleted(false);\n      setIsPlanned(false);\n      setStoredComment(null);\n    }\n  };\n\n  //--------------------- Event Walk Handlers ---------------------//\n  const handlePlanWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: null,\n        distanceCompleted: 0,\n        finished: false,\n        timeSpent: null,\n        experience: \"\"\n      }, {\n        withCredentials: true\n      });\n      const newEntry = {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: null,\n        distanceCompleted: 0,\n        finished: false,\n        timeSpent: null,\n        experience: \"\"\n      };\n\n      // Atualiza o histórico local para manter consistência com o backend\n      updateHistoryEntry(newEntry);\n\n      // Atualiza estados da interface\n      setSuccess(\"Walk planned successfully!\");\n      setIsPlanned(true);\n      setIsCompleted(false);\n      setStoredComment(null);\n\n      // Reaplica a lógica de estado do marcador\n      updateMarkerState([...userHistory, newEntry], selectedMarker);\n    } catch (error) {\n      setError(\"Failed to plan the walk: \" + error.message);\n    }\n  };\n  const handleCompleteWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null\n      }, {\n        withCredentials: true\n      });\n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null,\n        experience: storedComment || \"\"\n      });\n      setSuccess(\"Walk successfully added to your history!\");\n      setIsPlanned(false);\n      setIsCompleted(true);\n      setComment(''); // limpa o campo após submissão\n    } catch (err) {\n      setError(\"Failed to mark as completed: \" + err.message);\n    }\n  };\n  const updateHistoryEntry = newEntry => {\n    setUserHistory(prev => {\n      const existingIndex = prev.findIndex(e => e.walkwayId === newEntry.walkwayId);\n      if (existingIndex >= 0) {\n        const updated = [...prev];\n        updated[existingIndex] = {\n          ...updated[existingIndex],\n          ...newEntry\n        };\n        return updated;\n      } else {\n        return [...prev, newEntry];\n      }\n    });\n  };\n  const checkWalkwayStatus = async walkwayId => {\n    if (!walkwayId) return;\n    try {\n      const res = await Axios.get(`http://localhost:8080/walkwayStatus?walkwayId=${walkwayId}`, {\n        withCredentials: true\n      });\n      const {\n        status,\n        comment\n      } = res.data;\n      if (status === 'completed') {\n        setIsCompleted(true);\n        setIsPlanned(false);\n        setStoredComment(comment);\n      } else if (status === 'planned') {\n        setIsCompleted(false);\n        setIsPlanned(true);\n        setStoredComment(null);\n      }\n    } catch (err) {\n      console.error(\"Error checking walkway status:\", err);\n    }\n  };\n\n  //--------------------- Check Favorite Status ---------------------//\n  useEffect(() => {\n    const checkFavoriteStatus = async () => {\n      try {\n        var _response$data$favori, _response$data$favori2, _response$data$favori3, _response$data$favori4;\n        const response = await Axios.get(\"http://localhost:8080/favorites\", {\n          withCredentials: true\n        });\n        setIsFavorite(((_response$data$favori = response.data.favorites) === null || _response$data$favori === void 0 ? void 0 : _response$data$favori.some(fav => fav.id === selectedMarker.id || fav.id === (selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.id.toString()))) || ((_response$data$favori2 = response.data.favorites) === null || _response$data$favori2 === void 0 ? void 0 : _response$data$favori2.some(fav => fav.id == selectedMarker.id)) || ((_response$data$favori3 = response.data.favorites) === null || _response$data$favori3 === void 0 ? void 0 : _response$data$favori3.some(fav => fav.id === (selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.walkwayId))) || ((_response$data$favori4 = response.data.favorites) === null || _response$data$favori4 === void 0 ? void 0 : _response$data$favori4.some(fav => {\n          var _selectedMarker$walkw;\n          return fav.id === (selectedMarker === null || selectedMarker === void 0 ? void 0 : (_selectedMarker$walkw = selectedMarker.walkwayId) === null || _selectedMarker$walkw === void 0 ? void 0 : _selectedMarker$walkw.toString());\n        })));\n      } catch (error) {\n        console.error(\"Error checking favorite status:\", error);\n      }\n    };\n    selectedMarker && checkFavoriteStatus();\n  }, [selectedMarker]);\n  const handleFavoriteClick = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addFavorite\", {\n        locationId: selectedMarker.id\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        setIsFavorite(true);\n        setSuccess(\"Marked as favorite! Points added!\");\n      }\n    } catch (error) {\n      var _error$response;\n      setError(\"Failed to mark as favorite: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n\n  //--------------------- Fetch Public Comments ---------------------//\n  useEffect(() => {\n    if (!selectedMarker) return;\n    const fetchPublicComments = async walkwayId => {\n      try {\n        const response = await Axios.get(`http://localhost:8080/getWalkwayComments?walkwayId=${walkwayId}`);\n        setPublicComments(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Error fetching public comments:\", error);\n      }\n    };\n    fetchPublicComments(selectedMarker.id);\n    updateMarkerState(userHistory, selectedMarker);\n  }, [selectedMarker, userHistory]);\n  const handleSubmitComment = async () => {\n    try {\n      await Axios.post(\"http://localhost:8080/addPublicComment\", {\n        walkwayId: selectedMarker.id,\n        // <-- deve ser o campo `id`, que é um número!\n        experience: comment\n      }, {\n        withCredentials: true\n      });\n      setPublicComments(prev => [...prev, {\n        user: \"You\",\n        experience: comment,\n        timestamp: new Date().toISOString()\n      }]);\n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        experience: comment\n      });\n      setSuccess(\"Comment added successfully!\");\n      setStoredComment(comment);\n      setComment('');\n    } catch (err) {\n      console.error(\"❌ Failed to submit comment:\", err);\n      setError(\"Failed to submit comment: \" + err.message);\n    }\n  };\n\n  //--------------------- Fetch Top Walkways ---------------------//\n  useEffect(() => {\n    fetchTopWalkways();\n  }, []);\n  useEffect(() => {\n    fetchTopExploredWalkways();\n  }, []);\n  useEffect(() => {\n    fetchRecommendedWalkways();\n  }, [userHistory, isFavorite]);\n  const handleTopWalkwayClick = walkwayId => {\n    const marker = markers.find(marker => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  const fetchTopWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topLikedWalkways\", {\n        withCredentials: true\n      });\n      setTopLikedWalkways(response.data.topLikedWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top liked walkways:\", error);\n    }\n  };\n  const handleTopExploredWalkwayClick = walkwayId => {\n    const marker = markers.find(marker => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  const fetchTopExploredWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topExploredWalkways\", {\n        withCredentials: true\n      });\n      setTopExploredWalkways(response.data.topExploredWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top explored walkways:\", error);\n    }\n  };\n  const fetchRecommendedWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/recommendHybridCascade\", {\n        withCredentials: true\n      });\n      setRecommendedWalkways(response.data); // <- corrigido\n      console.log(\"Recommended Walkways:\", response.data); // <- corrigido\n    } catch (error) {\n      console.error(\"Error fetching recommended walkways:\", error);\n    }\n  };\n\n  //--------------------- Render Component ---------------------//  \n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: /*#__PURE__*/_jsxDEV(APIProvider, {\n        apiKey: 'AIzaSyDwGfxyjM21tprpmkBXNI6HGIuwzvLsBgo',\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          src: logo,\n          alt: \"logo\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {\n          \"aria-label\": \"more\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Profile');\n            },\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/History');\n            },\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              handleClose();\n              navigate('/Favorites');\n            },\n            children: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            defaultZoom: 10,\n            defaultCenter: {\n              lat: 41.5564,\n              lng: -8.16415\n            },\n            mapId: \"5f6b01e0c09b0450\",\n            mapTypeId: \"terrain\"\n            //onIdle={handleMapLoad}\n            ,\n            children: transformedMarkers.map(marker => /*#__PURE__*/_jsxDEV(AdvancedMarker, {\n              position: marker.position,\n              clickable: true,\n              onClick: () => handleMarkerClick(marker),\n              children: /*#__PURE__*/_jsxDEV(Pin, {\n                background: theme.palette.primary.secondary,\n                borderColor: theme.palette.primary.main,\n                glyphColor: theme.palette.primary.contrastText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this)\n            }, marker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: selectedMarker !== null,\n          onClose: handleCloseDialog,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name, /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: handleCloseDialog,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabIndex,\n            onChange: handleTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Walkway\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [tabIndex === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.primaryImage,\n                alt: selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.name,\n                style: {\n                  maxWidth: '100%',\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"District:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.district]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 60\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Difficulty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 62\n                }, this), \" \", difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.distance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 44\n                }, this), \" \", selectedMarker === null || selectedMarker === void 0 ? void 0 : selectedMarker.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 19\n              }, this), storedComment && /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  marginTop: 16\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"User comment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this), \" \", storedComment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this), publicComments.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  style: {\n                    marginTop: 24\n                  },\n                  children: \"Comments:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 23\n                }, this), publicComments.map((c, index) => /*#__PURE__*/_jsxDEV(Paper, {\n                  style: {\n                    padding: 8,\n                    marginBottom: 6\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: c.user\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 55\n                    }, this), \": \", c.experience]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: new Date(c.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true), selectedMarker && isCompleted && !isPlanned && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  style: {\n                    marginTop: 16\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Leave a comment about your experience:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 74\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: comment,\n                  onChange: e => setComment(e.target.value),\n                  rows: 3,\n                  style: {\n                    width: '100%',\n                    padding: '8px',\n                    marginBottom: '8px'\n                  },\n                  placeholder: \"Write your comment here...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleSubmitComment,\n                  children: \"Submit Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true), tabIndex === 1 && selectedMarker && /*#__PURE__*/_jsxDEV(Map, {\n              defaultZoom: 14,\n              defaultCenter: {\n                lat: selectedMarker === null || selectedMarker === void 0 ? void 0 : (_selectedMarker$coord = selectedMarker.coordinates) === null || _selectedMarker$coord === void 0 ? void 0 : _selectedMarker$coord.latitude,\n                lng: selectedMarker === null || selectedMarker === void 0 ? void 0 : (_selectedMarker$coord2 = selectedMarker.coordinates) === null || _selectedMarker$coord2 === void 0 ? void 0 : _selectedMarker$coord2.longitude\n              },\n              mapId: \"5f6b01e0c09b0450\",\n              onIdle: handleMapLoad,\n              style: {\n                height: '600px',\n                width: '100%'\n              }\n            }, selectedMarker.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 18\n            }, this), tabIndex === 2 && /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"List of services offered along the walkway can be checked here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"\\u2764\\uFE0F \", walkwayLikes, \" likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [!isFavorite ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 74\n                }, this),\n                onClick: handleFavoriteClick,\n                children: \"Mark as Favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disabled: true,\n                children: \"This location is already marked as favorite!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 27\n              }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: success\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 15\n            }, this), selectedMarker && isCompleted && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 30\n              }, this),\n              onClick: handlePlanWalk,\n              children: \"Plan to walk again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), selectedMarker && !isPlanned && !isCompleted && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 30\n              }, this),\n              onClick: handlePlanWalk,\n              children: \"Plan this walk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this), selectedMarker && isPlanned && !isCompleted && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DirectionsWalkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 30\n              }, this),\n              onClick: handleCompleteWalk,\n              children: \"Mark as completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginTop: theme.spacing(10),\n            textAlign: 'left'\n          },\n          children: \"Top Walkways Users Liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopWalkwaysContainer, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          children: topLikedWalkways.map((walkway, index) => /*#__PURE__*/_jsxDEV(WalkwayBox, {\n            onClick: () => handleTopWalkwayClick(walkway.id),\n            style: {\n              width: '300px',\n              height: '180px'\n            } // Define o tamanho fixo das caixas\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: walkway.primaryImage,\n              alt: walkway.name,\n              style: {\n                width: '100%',\n                height: '120px',\n                objectFit: 'cover',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                fontWeight: 'bold',\n                marginTop: theme.spacing(1),\n                color: '#333'\n              },\n              children: walkway.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                color: '#666'\n              },\n              children: [\"Distance: \", walkway.specifics.distance, \" | Difficulty: \", walkway.specifics.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 17\n            }, this)]\n          }, walkway.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginTop: theme.spacing(10),\n            textAlign: 'left'\n          },\n          children: \"Walkways that may interest you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecommendedWalkwaysContainer, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          children: Array.isArray(recommendedWalkways) && recommendedWalkways.length > 0 ? recommendedWalkways.map((walkway, index) => /*#__PURE__*/_jsxDEV(WalkwayBox, {\n            onClick: () => handleTopWalkwayClick(walkway.id),\n            style: {\n              width: '300px',\n              height: '180px'\n            } // Fixed box size\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: walkway.primaryImage,\n              alt: walkway.name,\n              style: {\n                width: '100%',\n                height: '120px',\n                objectFit: 'cover',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                fontWeight: 'bold',\n                marginTop: theme.spacing(1),\n                color: '#333'\n              },\n              children: walkway.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                color: '#666'\n              },\n              children: [\"Distance: \", walkway.specifics.distance, \" | Difficulty: \", walkway.specifics.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 19\n            }, this)]\n          }, walkway.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: '#666',\n              padding: theme.spacing(2)\n            },\n            children: \"No recommended walkways available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginTop: theme.spacing(10),\n            textAlign: 'left'\n          },\n          children: \"Top Walkways Users Walked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopWalkwaysContainer, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          children: topExploredWalkways.map((walkway, index) => /*#__PURE__*/_jsxDEV(WalkwayBox, {\n            onClick: () => handleTopExploredWalkwayClick(walkway.id),\n            style: {\n              width: '300px',\n              height: '180px'\n            } // Define o tamanho fixo das caixas\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: walkway.primaryImage,\n              alt: walkway.name,\n              style: {\n                width: '100%',\n                height: '120px',\n                objectFit: 'cover',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              style: {\n                fontWeight: 'bold',\n                marginTop: theme.spacing(1),\n                color: '#333'\n              },\n              children: walkway.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              style: {\n                color: '#666'\n              },\n              children: [\"Distance: \", walkway.specifics.distance, \" | Difficulty: \", walkway.specifics.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this)]\n          }, walkway.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleLogOut,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 611,\n    columnNumber: 5\n  }, this);\n};\n_s(WalkerBoard, \"bfciP0Wn1HsnSWuIOZ4yJ0NQV+k=\", false, function () {\n  return [useNavigate];\n});\n_c9 = WalkerBoard;\nexport default WalkerBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"MapContainer\");\n$RefreshReg$(_c4, \"LogoutButton\");\n$RefreshReg$(_c5, \"MoreMenuButton\");\n$RefreshReg$(_c6, \"TopWalkwaysContainer\");\n$RefreshReg$(_c7, \"RecommendedWalkwaysContainer\");\n$RefreshReg$(_c8, \"WalkwayBox\");\n$RefreshReg$(_c9, \"WalkerBoard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Axios","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Tabs","Tab","IconButton","Button","Container","CssBaseline","Typography","Paper","ThemeProvider","Box","styled","CloseIcon","MoreVertIcon","FavoriteIcon","DirectionsWalkIcon","APIProvider","AdvancedMarker","Map","Pin","useNavigate","theme","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","root","zIndex","_c","Logo","position","top","spacing","left","width","height","cursor","_c2","MapContainer","display","overflowX","marginTop","_c3","LogoutButton","right","_c4","MoreMenuButton","_c5","TopWalkwaysContainer","_c6","RecommendedWalkwaysContainer","_c7","WalkwayBox","backgroundImage","minWidth","margin","backgroundSize","backgroundPosition","color","palette","primary","contrastText","flexDirection","justifyContent","padding","transition","transform","boxShadow","shadows","backgroundBlendMode","_c8","WalkerBoard","onLogout","_s","_selectedMarker$coord","_selectedMarker$coord2","error","setError","anchorEl","setAnchorEl","success","setSuccess","markers","setMarkers","selectedMarker","setSelectedMarker","isFavorite","setIsFavorite","difficulty","setDifficulty","tabIndex","setTabIndex","geojsonData","setGeojsonData","isMapLoaded","setIsMapLoaded","geoJsonLoaded","setGeoJsonLoaded","topLikedWalkways","setTopLikedWalkways","topExploredWalkways","setTopExploredWalkways","recommendedWalkways","setRecommendedWalkways","isPlanned","setIsPlanned","isCompleted","setIsCompleted","comment","setComment","storedComment","setStoredComment","publicComments","setPublicComments","walkwayLikes","setWalkwayLikes","userHistory","setUserHistory","googleApiKey","setGoogleApiKey","mapRef","navigate","dataLayerRef","handleClick","event","currentTarget","handleClose","handleLogoClick","handleTabChange","_","newValue","handleLogOut","get","withCredentials","console","log","handleCloseDialog","fetchApiKey","response","data","apiKey","err","handleMapLoad","mapInstance","googleMap","map","current","setMap","dataLayer","window","google","maps","Data","validateAndTransformGeoJson","geoJson","features","forEach","feature","geometry","type","lng","lat","coordinates","line","validatedGeoJson","JSON","parse","addGeoJson","setStyle","geometryType","getGeometry","getType","strokeColor","strokeWeight","clickable","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","bounds","LatLngBounds","extend","getArray","isEmpty","fitBounds","calculateDifficulty","difficultyLevel","fetchMarkers","message","transformedMarkers","filter","marker","id","_marker$specifics","_marker$specifics2","latitude","longitude","name","description","image","primaryImage","distance","specifics","region","district","defaultCenter","interests","handleMarkerClick","undefined","walkwayId","commentsRes","comments","likesRes","likes","checkWalkwayStatus","params","then","geojson","catch","fetchHistory","history","updateMarkerState","entry","find","finished","experience","handlePlanWalk","post","walkwayName","startDate","Date","toISOString","endDate","distanceCompleted","timeSpent","newEntry","updateHistoryEntry","handleCompleteWalk","prev","existingIndex","findIndex","e","updated","res","status","checkFavoriteStatus","_response$data$favori","_response$data$favori2","_response$data$favori3","_response$data$favori4","favorites","some","fav","toString","_selectedMarker$walkw","handleFavoriteClick","locationId","_error$response","fetchPublicComments","handleSubmitComment","user","timestamp","fetchTopWalkways","fetchTopExploredWalkways","fetchRecommendedWalkways","handleTopWalkwayClick","panTo","setZoom","handleTopExploredWalkwayClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","keepMounted","open","Boolean","onClose","defaultZoom","mapId","mapTypeId","background","secondary","borderColor","main","glyphColor","fullWidth","value","onChange","label","dividers","style","maxWidth","marginBottom","gutterBottom","length","variant","c","index","toLocaleString","target","rows","placeholder","onIdle","startIcon","disabled","textAlign","walkway","objectFit","borderRadius","fontWeight","Array","isArray","_c9","$RefreshReg$"],"sources":["/Users/meriam-mariakhamassi/Desktop/PassadIA_web/frontend/src/dashboards/WalkerBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, IconButton,\n  Button, Container, CssBaseline, Typography, Paper, ThemeProvider, Box\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport { APIProvider, AdvancedMarker, Map, Pin } from '@vis.gl/react-google-maps';\nimport { useNavigate } from 'react-router-dom';\n\nimport theme from '../Theme/theme';\nimport logo from '../Theme/images/baselogo.jpg';\n\n// Styled components using MUI's new styled API\nconst AppContainer = styled(Container)(({ theme }) => ({\n  ...theme.root,\n  zIndex: 9999,\n}));\n\nconst Logo = styled('img')(({ theme }) => ({\n  position: 'absolute',\n  top: theme.spacing(4),\n  left: theme.spacing(50),\n  width: '200px',\n  height: 'auto',\n  cursor: 'pointer',\n}));\n\nconst MapContainer = styled(Paper)(({ theme }) => ({\n  height: '500px',\n  width: '100%',\n  display: 'flex',\n  overflowX: 'auto',\n  marginTop: theme.spacing(80),\n}));\n\nconst LogoutButton = styled(Button)({\n  position: 'absolute',\n  right: 100,\n  top: 20,\n});\n\nconst MoreMenuButton = styled(IconButton)({\n  position: 'absolute',\n  right: 20,\n  top: 20,\n});\n\nconst TopWalkwaysContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  overflowX: 'auto',\n\n}));\nconst RecommendedWalkwaysContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  overflowX: 'auto',\n\n}));\n// Add 'backgroundImage' as a prop to WalkwayBox\nconst WalkwayBox = styled(Paper)(({ theme, backgroundImage }) => ({\n  minWidth: '200px',\n  height: '150px',\n  margin: theme.spacing(1),\n  cursor: 'pointer',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  color: theme.palette.primary.contrastText,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(1),\n  transition: 'transform 0.2s, box-shadow 0.2s',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: theme.shadows[6],\n  },\n  backgroundBlendMode: 'overlay', // Helps with readability\n}));\n\n//--------------------- Main Component ---------------------//\n\nconst WalkerBoard = ({ onLogout }) => {\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [difficulty, setDifficulty] = useState('Unknown');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [geoJsonLoaded, setGeoJsonLoaded] = useState(false); \n  const [topLikedWalkways, setTopLikedWalkways] = useState([]);\n  const [topExploredWalkways, setTopExploredWalkways] = useState([]);\n  const [recommendedWalkways, setRecommendedWalkways] = useState([]);\n  const [isPlanned, setIsPlanned] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [comment, setComment] = useState('');\n  const [storedComment, setStoredComment] = useState(null);\n  const [publicComments, setPublicComments] = useState([]);\n  const [walkwayLikes, setWalkwayLikes] = useState(0);\n  const [userHistory, setUserHistory] = useState([]);\n  const [googleApiKey, setGoogleApiKey] = useState(null);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n  const dataLayerRef = useRef(null);\n\n//--------------------- Menu Handlers ---------------------//\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleLogoClick = () => navigate('/WalkerBoard');\n  const handleTabChange = (_, newValue) => setTabIndex(newValue);\n  const handleLogOut = async () => {\n    setError(null);\n    setSuccess(null);\n    try {\n      await Axios.get(\"http://localhost:8080/logout\", { withCredentials: true });\n      console.log(\"Logged out successfully!\");\n      onLogout && onLogout();\n      setSuccess('Log out successful!');\n      navigate('/App');\n    } catch (error) {\n    }\n  };\n  const handleCloseDialog = () => {\n    setIsMapLoaded(false); \n    setGeojsonData(null);  \n    setSelectedMarker(null);\n    setTabIndex(0);\n    setComment('');\n    setAnchorEl(null);\n  };\n\n  //--------------------- Map Load Handler ---------------------//\n  useEffect(() => {\n    const fetchApiKey = async () => {\n      try {\n        const response = await Axios.get('http://localhost:8080/google-maps-key', { withCredentials: true });\n        setGoogleApiKey(response.data.apiKey);\n      } catch (err) {\n        console.error('Erro ao buscar a Google Maps API key:', err);\n      }\n    };\n  \n    fetchApiKey();\n  }, []);\n  const handleMapLoad = (mapInstance) => {\n    const googleMap = mapInstance.map || mapInstance.googleMap;\n    setIsMapLoaded(true);\n    mapRef.current = googleMap;\n  };\n\n  useEffect(() => {\n    if (!isMapLoaded || !mapRef.current || !geojsonData) return;\n  \n    try {\n      // Limpa o anterior se existir\n      if (dataLayerRef.current) {\n        dataLayerRef.current.setMap(null);\n      }\n  \n      const dataLayer = new window.google.maps.Data();\n      dataLayer.setMap(mapRef.current);\n      dataLayerRef.current = dataLayer;\n  \n      const validateAndTransformGeoJson = (geoJson) => {\n        geoJson.features.forEach((feature) => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = feature.geometry.coordinates;\n            feature.geometry.coordinates = [lat, lng];\n          } else if (feature.geometry.type === 'MultiLineString') {\n            feature.geometry.coordinates = feature.geometry.coordinates.map((line) =>\n              line.map(([lng, lat]) => [lat, lng])\n            );\n          }\n        });\n        return geoJson;\n      };\n  \n      const validatedGeoJson = validateAndTransformGeoJson(\n        typeof geojsonData === 'string' ? JSON.parse(geojsonData) : geojsonData\n      );\n  \n      dataLayer.addGeoJson(validatedGeoJson);\n  \n      dataLayer.setStyle((feature) => {\n        const geometryType = feature.getGeometry().getType();\n        if (geometryType === 'LineString' || geometryType === 'MultiLineString') {\n          return { strokeColor: 'blue', strokeWeight: 3, clickable: false };\n        } else if (geometryType === 'Point') {\n          return {\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 6,\n              fillColor: 'red',\n              fillOpacity: 1,\n              strokeWeight: 2,\n              strokeColor: 'white',\n            },\n          };\n        }\n      });\n  \n      const bounds = new window.google.maps.LatLngBounds();\n      dataLayer.forEach((feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          bounds.extend(geometry.get());\n        } else if (geometry.getType() === 'LineString' || geometry.getType() === 'MultiLineString') {\n          geometry.getArray().forEach(bounds.extend);\n        }\n      });\n  \n      if (!bounds.isEmpty()) {\n        mapRef.current.fitBounds(bounds);\n      }\n    } catch (error) {\n      console.error(\"Error processing GeoJSON:\", error);\n    }\n  }, [geojsonData, isMapLoaded]);\n\n  useEffect(() => {\n    if (selectedMarker) {\n      // Calculate difficulty when the selected marker changes\n      const calculateDifficulty = (difficultyLevel) => {\n        if (difficultyLevel === 1) {\n          return 'Easy';\n        } else if (difficultyLevel === 2) {\n          return 'Medium';\n        } else if (difficultyLevel === 3) {\n          return 'Hard';\n        } else {\n          return 'Unknown';\n        }\n      };\n  \n      setDifficulty(calculateDifficulty(selectedMarker.difficulty));\n    }\n  }, [selectedMarker]);\n\n  //--------------------- Fetch Markers ---------------------//\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/markers\", { withCredentials: true });\n        setMarkers(response.data);\n      } catch (error) {\n        setError('Failed to fetch markers: ' + error.message);\n      }\n    };\n    fetchMarkers();\n  }, []);\n\n  const transformedMarkers = markers\n  .filter(marker => typeof marker.id === 'number' && marker.coordinates)\n    .map(marker => ({\n      ...marker,\n      position: {\n        lat: marker.coordinates.latitude,\n        lng: marker.coordinates.longitude,\n      },\n      name: marker.name || 'Unknown Name', // Fallback for missing names\n      description: marker.description || 'No description available', // Fallback for missing descriptions\n      image: marker.primaryImage || 'default_image.jpg', // Fallback for missing image\n      distance: marker.specifics?.distance || 'Unknown Distance', // Safe access for nested properties\n      difficulty: marker.specifics?.difficulty || 'Unknown Difficulty',\n      region: marker.region || 'Unknown Region',\n      district: marker.district || 'Unknown District',\n      defaultCenter: { lat: marker.coordinates.latitude, lng: marker.coordinates.longitude },\n      interests: marker.interests|| 'No Interests Available',\n  }));\n\n  const handleMarkerClick = async (marker) => {\n    if (marker?.id === undefined && marker?.walkwayId === undefined) return;\n  \n    setSelectedMarker(marker);\n  \n    const walkwayId = marker.walkwayId || marker.id;\n  \n    try {\n      const commentsRes = await Axios.get(`http://localhost:8080/getWalkwayComments?walkwayId=${walkwayId}`);\n      setPublicComments(commentsRes.data.comments || []);\n      console.log(\"Fetched comments:\", commentsRes.data.comments);\n  \n      const likesRes = await Axios.get(`http://localhost:8080/walkwayLikes?walkwayId=${walkwayId}`);\n      setWalkwayLikes(likesRes.data.likes || 0);\n      await checkWalkwayStatus(walkwayId);\n    } catch (err) {\n      console.error(\"Error getting comments or likes:\", err);\n    }\n  };\n  useEffect(() => {\n    if (selectedMarker?.id === undefined || selectedMarker?.id === null) return;\n      Axios.get(`http://localhost:8080/getGeojson`, { params: { walkwayId: selectedMarker.id } })\n        .then(({ data: { geojson } }) => {\n          geojson.features.forEach((feature) => {\n            if (feature.geometry.type === 'Point') {\n              const [lng, lat] = feature.geometry.coordinates;\n              feature.geometry.coordinates = [lat, lng];\n            } else if (feature.geometry.type === 'MultiLineString') {\n              feature.geometry.coordinates = feature.geometry.coordinates.map(line =>\n                line.map(([lng, lat]) => [lat, lng])\n              );\n            }\n          });\n          setGeojsonData(geojson);\n        })\n        .catch((error) => console.error('Error fetching GeoJSON:', error));\n    \n  }, [selectedMarker]);\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/history\", { withCredentials: true });\n        setUserHistory(response.data.history || []);\n        console.log(\"User history:\", response.data.history);\n  \n        // se já houver um marcador selecionado, força atualização do seu estado\n        if (selectedMarker) {\n          updateMarkerState(response.data.history, selectedMarker);\n        }\n  \n      } catch (error) {\n        console.error(\"Error getting user history:\", error);\n      }\n    };\n    fetchHistory();\n  }, []);\n  const updateMarkerState = (history, marker) => {\n    const entry = history.find(entry => entry.walkwayId === marker.id);\n    if (entry) {\n      if (entry.finished) {\n        setIsCompleted(true);\n        setIsPlanned(false);\n        setStoredComment(entry.experience || null);\n      } else {\n        setIsCompleted(false);\n        setIsPlanned(true);\n        setStoredComment(null);\n      }\n    } else {\n      setIsCompleted(false);\n      setIsPlanned(false);\n      setStoredComment(null);\n    }\n  };\n\n  //--------------------- Event Walk Handlers ---------------------//\n  const handlePlanWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: null,\n        distanceCompleted: 0,\n        finished: false,\n        timeSpent: null,\n        experience: \"\"\n      }, { withCredentials: true });\n  \n      const newEntry = {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: null,\n        distanceCompleted: 0,\n        finished: false,\n        timeSpent: null,\n        experience: \"\"\n      };\n  \n      // Atualiza o histórico local para manter consistência com o backend\n      updateHistoryEntry(newEntry);\n  \n      // Atualiza estados da interface\n      setSuccess(\"Walk planned successfully!\");\n      setIsPlanned(true);\n      setIsCompleted(false);\n      setStoredComment(null);\n  \n      // Reaplica a lógica de estado do marcador\n      updateMarkerState([...userHistory, newEntry], selectedMarker);\n  \n    } catch (error) {\n      setError(\"Failed to plan the walk: \" + error.message);\n    }\n  };\n  \n  const handleCompleteWalk = async () => {\n    try {\n      const response = await Axios.post(\"http://localhost:8080/addWalkwayHistory\", {\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null\n      },{\n        withCredentials: true\n      });\n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        walkwayName: selectedMarker.name,\n        startDate: new Date().toISOString(),\n        endDate: new Date().toISOString(),\n        distanceCompleted: 0,\n        finished: true,\n        timeSpent: null,\n        experience: storedComment || \"\"\n      });\n      setSuccess(\"Walk successfully added to your history!\");\n      setIsPlanned(false);\n      setIsCompleted(true);\n      setComment(''); // limpa o campo após submissão\n    } catch (err) {\n      setError(\"Failed to mark as completed: \" + err.message);\n    }\n  };\n  const updateHistoryEntry = (newEntry) => {\n    setUserHistory(prev => {\n      const existingIndex = prev.findIndex(e => e.walkwayId === newEntry.walkwayId);\n      if (existingIndex >= 0) {\n        const updated = [...prev];\n        updated[existingIndex] = { ...updated[existingIndex], ...newEntry };\n        return updated;\n      } else {\n        return [...prev, newEntry];\n      }\n    });\n  };\n  \n  const checkWalkwayStatus = async (walkwayId) => {\n    if (!walkwayId) return;\n  \n    try {\n      const res = await Axios.get(`http://localhost:8080/walkwayStatus?walkwayId=${walkwayId}`, {\n        withCredentials: true\n      });\n  \n      const { status, comment } = res.data;\n  \n      if (status === 'completed') {\n        setIsCompleted(true);\n        setIsPlanned(false);\n        setStoredComment(comment);\n      } else if (status === 'planned') {\n        setIsCompleted(false);\n        setIsPlanned(true);\n        setStoredComment(null);\n      } \n  \n    } catch (err) {\n      console.error(\"Error checking walkway status:\", err);\n    }\n  };\n  \n  \n//--------------------- Check Favorite Status ---------------------//\n  useEffect(() => {\n    const checkFavoriteStatus = async () => {\n      try {\n        const response = await Axios.get(\"http://localhost:8080/favorites\", { withCredentials: true });\n        setIsFavorite(response.data.favorites?.some((fav) => fav.id === selectedMarker.id || fav.id === selectedMarker?.id.toString()) ||\n        response.data.favorites?.some((fav) => fav.id == selectedMarker.id) ||\n        response.data.favorites?.some((fav) => fav.id === selectedMarker?.walkwayId) ||\n        response.data.favorites?.some((fav) => fav.id === selectedMarker?.walkwayId?.toString())\n        );\n      } catch (error) {\n        console.error(\"Error checking favorite status:\", error);\n      }\n    };\n    selectedMarker && checkFavoriteStatus();\n  }, [selectedMarker]);\n  const handleFavoriteClick = async () => {\n    try {\n      const response = await Axios.post(\n        \"http://localhost:8080/addFavorite\",\n        { locationId: selectedMarker.id },\n        { withCredentials: true }\n      );\n  \n      if (response.status === 200) {\n        setIsFavorite(true);\n        setSuccess(\"Marked as favorite! Points added!\");\n      }\n    } catch (error) {\n      setError(\"Failed to mark as favorite: \" + (error.response?.data || error.message));\n    }\n  };\n\n//--------------------- Fetch Public Comments ---------------------//\n  useEffect(() => {\n    if (!selectedMarker) return;\n  \n    const fetchPublicComments = async (walkwayId) => {\n      try {\n        const response = await Axios.get(`http://localhost:8080/getWalkwayComments?walkwayId=${walkwayId}`);\n        setPublicComments(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Error fetching public comments:\", error);\n      }\n    };\n  \n    fetchPublicComments(selectedMarker.id);\n    updateMarkerState(userHistory, selectedMarker);\n  \n  }, [selectedMarker, userHistory]);\n  \n  const handleSubmitComment = async () => {\n    try {\n      await Axios.post(\"http://localhost:8080/addPublicComment\", {\n        walkwayId: selectedMarker.id,  // <-- deve ser o campo `id`, que é um número!\n        experience: comment,\n      }, { withCredentials: true });\n  \n      setPublicComments(prev => [\n        ...prev,\n        { user: \"You\", experience: comment, timestamp: new Date().toISOString() }\n      ]);\n  \n      updateHistoryEntry({\n        walkwayId: selectedMarker.id,\n        experience: comment,\n      });\n  \n      setSuccess(\"Comment added successfully!\");\n      setStoredComment(comment);\n      setComment('');\n    } catch (err) {\n      console.error(\"❌ Failed to submit comment:\", err);\n      setError(\"Failed to submit comment: \" + err.message);\n    }\n  };\n  \n  //--------------------- Fetch Top Walkways ---------------------//\n  useEffect(() => {\n    fetchTopWalkways();\n  }, []);\n  useEffect(() => {\n    fetchTopExploredWalkways();\n  }, []);\n  useEffect(() => {\n    fetchRecommendedWalkways();\n  }, [userHistory, isFavorite]);\n  \n  const handleTopWalkwayClick = (walkwayId) => {\n    const marker = markers.find((marker) => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  const fetchTopWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topLikedWalkways\",{\n        withCredentials: true\n      });\n      setTopLikedWalkways(response.data.topLikedWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top liked walkways:\", error);\n    }\n  };\n  const handleTopExploredWalkwayClick = (walkwayId) => {\n    const marker = markers.find((marker) => marker.id === walkwayId);\n    if (marker) {\n      handleMarkerClick(marker);\n      if (mapRef.current) {\n        mapRef.current.panTo(marker.position);\n        mapRef.current.setZoom(14);\n      }\n    }\n  };\n  const fetchTopExploredWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/topExploredWalkways\",{\n        withCredentials: true\n      });\n      setTopExploredWalkways(response.data.topExploredWalkways);\n    } catch (error) {\n      console.error(\"Error fetching top explored walkways:\", error);\n    }\n  };\n\n  const fetchRecommendedWalkways = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:8080/recommendHybridCascade\",{\n        withCredentials: true\n      });\n      setRecommendedWalkways(response.data); // <- corrigido\n      console.log(\"Recommended Walkways:\", response.data); // <- corrigido\n    } catch (error) {\n      console.error(\"Error fetching recommended walkways:\", error);\n    }\n  };\n  \n\n//--------------------- Render Component ---------------------//  \n  \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppContainer>\n        <APIProvider apiKey={'AIzaSyDwGfxyjM21tprpmkBXNI6HGIuwzvLsBgo'}>\n          <Logo src={logo} alt=\"logo\" onClick={handleLogoClick} />\n          <MoreMenuButton aria-label=\"more\" onClick={handleClick}>\n            <MoreVertIcon />\n          </MoreMenuButton>\n          <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuItem onClick={() => { handleClose(); navigate('/Profile'); }}>Profile</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/History'); }}>History</MenuItem>\n            <MenuItem onClick={() => { handleClose(); navigate('/Favorites'); }}>Favorites</MenuItem>\n          </Menu>\n          <MapContainer>\n            <Map\n              defaultZoom={10}\n              defaultCenter={{ lat: 41.5564, lng: -8.16415 }}\n              mapId='5f6b01e0c09b0450'\n              mapTypeId=\"terrain\"\n              //onIdle={handleMapLoad}\n            >\n              {transformedMarkers.map((marker) => (\n                <AdvancedMarker\n                  key={marker.id}\n                  position={marker.position}\n                  clickable={true}\n                  onClick={() => handleMarkerClick(marker)}\n                >\n                  <Pin background={theme.palette.primary.secondary} borderColor={theme.palette.primary.main} glyphColor={theme.palette.primary.contrastText} />\n                </AdvancedMarker>\n              ))}\n            </Map>\n          </MapContainer>\n          <Dialog open={selectedMarker !== null} onClose={handleCloseDialog} fullWidth>\n            <DialogTitle>\n              {selectedMarker?.name}\n              <IconButton aria-label=\"close\" onClick={handleCloseDialog}><CloseIcon /></IconButton>\n            </DialogTitle>\n            <Tabs value={tabIndex} onChange={handleTabChange}>\n              <Tab label=\"Overview\" />\n              <Tab label=\"Walkway\" />\n              <Tab label=\"Services\" />\n            </Tabs>\n            <DialogContent dividers>\n              {tabIndex === 0 && (\n                <>\n                  <img\n                    src={selectedMarker?.primaryImage}\n                    alt={selectedMarker?.name}\n                    style={{ maxWidth: '100%', marginBottom: '20px' }}\n                  />                  \n                  <Typography gutterBottom color=\"primary\"><strong>District:</strong> {selectedMarker?.district}</Typography>\n                  <Typography gutterBottom color=\"primary\"><strong>Region:</strong> {selectedMarker?.region}</Typography>\n                  <Typography gutterBottom color=\"secondary\"><strong>Difficulty:</strong> {difficulty}</Typography>\n                  <Typography gutterBottom><strong>Distance:</strong> {selectedMarker?.distance}</Typography>\n                  <Typography gutterBottom><strong>Description:</strong> {selectedMarker?.description}</Typography>\n                  {storedComment && (\n                    <Typography style={{ marginTop: 16 }}>\n                      <strong>User comment:</strong> {storedComment}\n                    </Typography>\n                  )}\n                  {publicComments.length > 0 && (\n                    <>\n                      <Typography variant=\"h6\" style={{ marginTop: 24 }}>Comments:</Typography>\n                      {publicComments.map((c, index) => (\n                        <Paper key={index} style={{ padding: 8, marginBottom: 6 }}>\n                          <Typography variant=\"body2\"><strong>{c.user}</strong>: {c.experience}</Typography>\n                          <Typography variant=\"caption\" color=\"textSecondary\">{new Date(c.timestamp).toLocaleString()}</Typography>\n                        </Paper>\n                      ))}\n                    </>\n                  )}\n                  {selectedMarker && isCompleted && !isPlanned && (\n                    <>\n                      <Typography gutterBottom style={{ marginTop: 16 }}><strong>Leave a comment about your experience:</strong></Typography>\n                      <textarea\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                        rows={3}\n                        style={{ width: '100%', padding: '8px', marginBottom: '8px' }}\n                        placeholder=\"Write your comment here...\"\n                      />\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleSubmitComment}\n                      >\n                        Submit Comment\n                      </Button>\n                    </>\n                  )}\n                </>\n              )}\n              {tabIndex === 1 && selectedMarker && (\n                 <Map\n                 key={selectedMarker.id}\n                 defaultZoom={14}\n                 defaultCenter={{\n                   lat: selectedMarker?.coordinates?.latitude,\n                   lng: selectedMarker?.coordinates?.longitude\n                 }}\n                 mapId=\"5f6b01e0c09b0450\"\n                 onIdle={handleMapLoad}\n                 style={{ height: '600px', width: '100%' }}\n               />\n              )}\n              {tabIndex === 2 && <Typography>List of services offered along the walkway can be checked here.</Typography>}\n            </DialogContent>\n            <DialogActions>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                ❤️ {walkwayLikes} likes\n              </Typography>\n\n              <div>\n                {!isFavorite ? (\n                  <Button variant=\"contained\" color=\"primary\" startIcon={<FavoriteIcon />} onClick={handleFavoriteClick}>\n                    Mark as Favorite\n                  </Button>\n                ) : (\n                  <Button variant=\"contained\" disabled>\n                    This location is already marked as favorite!\n                  </Button>\n                )}\n                {error && <div style={{ color: \"red\" }}>{error}</div>}\n                {success && <div style={{ color: \"green\" }}>{success}</div>}\n              </div>\n\n              {/* Regra: Se o percurso já foi concluído, mostra apenas \"Plan to walk again\" */}\n              {selectedMarker && isCompleted && (\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  startIcon={<DirectionsWalkIcon />}\n                  onClick={handlePlanWalk}\n                >\n                  Plan to walk again\n                </Button>\n              )}\n\n              {/* Se nunca foi planeado nem concluído */}\n              {selectedMarker && !isPlanned && !isCompleted && (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  startIcon={<DirectionsWalkIcon />}\n                  onClick={handlePlanWalk}\n                >\n                  Plan this walk\n                </Button>\n              )}\n\n              {/* Se está planeado mas ainda não concluído */}\n              {selectedMarker && isPlanned && !isCompleted && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<DirectionsWalkIcon />}\n                  onClick={handleCompleteWalk}\n                >\n                  Mark as completed\n                </Button>\n              )}\n            </DialogActions>\n\n          </Dialog>\n          {/* Seção Top Walkways */}\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: theme.spacing(10), textAlign: 'left' }}>\n            Top Walkways Users Liked\n          </Typography>\n\n          <TopWalkwaysContainer style={{ justifyContent: 'flex-start' }}>\n            {topLikedWalkways.map((walkway, index) => (\n              <WalkwayBox\n                key={walkway.id}\n                onClick={() => handleTopWalkwayClick(walkway.id)}\n                style={{ width: '300px', height: '180px' }} // Define o tamanho fixo das caixas\n              >\n                <img \n                  src={walkway.primaryImage} \n                  alt={walkway.name} \n                  style={{ width: '100%', height: '120px', objectFit: 'cover', borderRadius: '4px' }}\n                />\n                <Typography variant=\"subtitle1\" style={{ fontWeight: 'bold', marginTop: theme.spacing(1), color: '#333' }}>\n                  {walkway.name}\n                </Typography>\n                <Typography variant=\"body2\" style={{ color: '#666' }}>\n                  Distance: {walkway.specifics.distance} | Difficulty: {walkway.specifics.difficulty}\n                </Typography>\n              </WalkwayBox>\n            ))}\n          </TopWalkwaysContainer>\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: theme.spacing(10), textAlign: 'left' }}>\n            Walkways that may interest you\n          </Typography>\n          <RecommendedWalkwaysContainer style={{ justifyContent: 'flex-start' }}>\n            {Array.isArray(recommendedWalkways) && recommendedWalkways.length > 0 ? (\n              recommendedWalkways.map((walkway, index) => (\n                <WalkwayBox\n                  key={walkway.id}\n                  onClick={() => handleTopWalkwayClick(walkway.id)}\n                  style={{ width: '300px', height: '180px' }} // Fixed box size\n                >\n                  <img \n                    src={walkway.primaryImage } \n                    alt={walkway.name} \n                    style={{ width: '100%', height: '120px', objectFit: 'cover', borderRadius: '4px' }}\n                  />\n                  <Typography variant=\"subtitle1\" style={{ fontWeight: 'bold', marginTop: theme.spacing(1), color: '#333' }}>\n                    {walkway.name}\n                  </Typography>\n                  <Typography variant=\"body2\" style={{ color: '#666' }}>\n                    Distance: {walkway.specifics.distance} | Difficulty: {walkway.specifics.difficulty}\n                  </Typography>\n                </WalkwayBox>\n              ))\n            ) : (\n              <Typography variant=\"body2\" style={{ color: '#666', padding: theme.spacing(2) }}>\n                No recommended walkways available.\n              </Typography>\n            )}\n          </RecommendedWalkwaysContainer>\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: theme.spacing(10), textAlign: 'left' }}>\n            Top Walkways Users Walked\n          </Typography>\n          <TopWalkwaysContainer style={{ justifyContent: 'flex-start' }}>\n            {topExploredWalkways.map((walkway, index) => (\n              <WalkwayBox\n                key={walkway.id}\n                onClick={() => handleTopExploredWalkwayClick(walkway.id)}\n                style={{ width: '300px', height: '180px' }} // Define o tamanho fixo das caixas\n              >\n                <img \n                  src={walkway.primaryImage} \n                  alt={walkway.name} \n                  style={{ width: '100%', height: '120px', objectFit: 'cover', borderRadius: '4px' }}\n                />\n                <Typography variant=\"subtitle1\" style={{ fontWeight: 'bold', marginTop: theme.spacing(1), color: '#333' }}>\n                  {walkway.name}\n                </Typography>\n                <Typography variant=\"body2\" style={{ color: '#666' }}>\n                  Distance: {walkway.specifics.distance} | Difficulty: {walkway.specifics.difficulty}\n                </Typography>\n              </WalkwayBox>\n            ))}\n          </TopWalkwaysContainer>\n\n          <LogoutButton variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Logout</LogoutButton>\n        </APIProvider>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default WalkerBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}